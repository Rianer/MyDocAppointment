{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/overlay-toggle/overlay-toggle.service\";\nimport * as i2 from \"@angular/common\";\nfunction CreateOverlayComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵlistener(\"click\", function CreateOverlayComponent_div_0_Template_div_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.closeOverlay($event));\n    });\n    i0.ɵɵtext(1, \" Negros\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class CreateOverlayComponent {\n  constructor(toggleService) {\n    this.toggleService = toggleService;\n    this.showOverlay = false;\n  }\n  ngOnInit() {\n    this.toggleService.clickedEvent.subscribe(value => {\n      if (value == 2) {\n        this.showOverlay = true;\n      }\n    });\n  }\n  closeOverlay(e) {\n    if (e == 'force-close') {\n      this.showOverlay = false;\n      return;\n    }\n    if (this.showOverlay) {\n      if (e.srcElement.className == 'overlay') {\n        this.showOverlay = false;\n      }\n    }\n  }\n  static #_ = this.ɵfac = function CreateOverlayComponent_Factory(t) {\n    return new (t || CreateOverlayComponent)(i0.ɵɵdirectiveInject(i1.OverlayToggleService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateOverlayComponent,\n    selectors: [[\"app-create-overlay\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"overlay\", 3, \"click\", 4, \"ngIf\"], [1, \"overlay\", 3, \"click\"]],\n    template: function CreateOverlayComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, CreateOverlayComponent_div_0_Template, 2, 0, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.showOverlay);\n      }\n    },\n    dependencies: [i2.NgIf],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;IAAAA,8BAAwE;IAA/BA;MAAAA;MAAA;MAAA,OAASA,0CAAoB;IAAA,EAAC;IACnEA,yBACJ;IAAAA,iBAAM;;;ACMN,OAAM,MAAOC,sBAAsB;EAGjCC,YAAoBC,aAAoC;IAApC,kBAAa,GAAbA,aAAa;IAFjC,gBAAW,GAAY,KAAK;EAE8B;EAE1DC,QAAQ;IACN,IAAI,CAACD,aAAa,CAACE,YAAY,CAACC,SAAS,CAAEC,KAAY,IAAG;MACxD,IAAGA,KAAK,IAAI,CAAC,EAAC;QACZ,IAAI,CAACC,WAAW,GAAG,IAAI;;IAE3B,CAAC,CAAC;EACJ;EAEAC,YAAY,CAACC,CAAK;IAChB,IAAGA,CAAC,IAAI,aAAa,EAAC;MACpB,IAAI,CAACF,WAAW,GAAG,KAAK;MACxB;;IAGF,IAAG,IAAI,CAACA,WAAW,EAAC;MAClB,IAAGE,CAAC,CAACC,UAAU,CAACC,SAAS,IAAI,SAAS,EAAC;QACrC,IAAI,CAACJ,WAAW,GAAG,KAAK;;;EAG9B;EAAC;qBAxBUP,sBAAsB;EAAA;EAAA;UAAtBA,sBAAsB;IAAAY;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDRnCjB,uEAEM;;;QAFgBA,sCAAiB","names":["i0","CreateOverlayComponent","constructor","toggleService","ngOnInit","clickedEvent","subscribe","value","showOverlay","closeOverlay","e","srcElement","className","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Documents\\dotNet\\MyDocAppointment\\Frontend\\my-doc-appointment\\src\\app\\create-overlay\\create-overlay.component.html","C:\\Documents\\dotNet\\MyDocAppointment\\Frontend\\my-doc-appointment\\src\\app\\create-overlay\\create-overlay.component.ts"],"sourcesContent":["<div class=\"overlay\" *ngIf=\"showOverlay\" (click)=\"closeOverlay($event)\">\n    Negros\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { OverlayToggleService } from '../services/overlay-toggle/overlay-toggle.service';\n\n@Component({\n  selector: 'app-create-overlay',\n  templateUrl: './create-overlay.component.html',\n  styleUrls: ['./create-overlay.component.scss']\n})\nexport class CreateOverlayComponent implements OnInit{\n  showOverlay: boolean = false;\n\n  constructor(private toggleService : OverlayToggleService){}\n\n  ngOnInit(){\n    this.toggleService.clickedEvent.subscribe((value:number)=>{\n      if(value == 2){\n        this.showOverlay = true;\n      }\n    });\n  }\n\n  closeOverlay(e:any){\n    if(e == 'force-close'){\n      this.showOverlay = false;\n      return\n    }\n\n    if(this.showOverlay){\n      if(e.srcElement.className == 'overlay'){\n        this.showOverlay = false;\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}