{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/overlay-toggle/overlay-toggle.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction CreateOverlayComponent_div_0_option_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const spec_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", spec_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(spec_r3);\n  }\n}\nfunction CreateOverlayComponent_div_0_option_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const g_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", g_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(g_r4);\n  }\n}\nfunction CreateOverlayComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵlistener(\"click\", function CreateOverlayComponent_div_0_Template_div_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.closeOverlay($event));\n    });\n    i0.ɵɵelementStart(1, \"div\", 2)(2, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function CreateOverlayComponent_div_0_Template_form_ngSubmit_2_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.createDoctor());\n    });\n    i0.ɵɵelementStart(3, \"div\", 4)(4, \"label\", 5);\n    i0.ɵɵtext(5, \"Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 4)(8, \"label\", 5);\n    i0.ɵɵtext(9, \"Surname:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 4)(12, \"label\", 5);\n    i0.ɵɵtext(13, \"Age:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"input\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 4)(16, \"label\", 5);\n    i0.ɵɵtext(17, \"Email Address:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(18, \"input\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 4)(20, \"label\", 5);\n    i0.ɵɵtext(21, \"Phone Number:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(22, \"input\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"div\", 4)(24, \"label\", 5);\n    i0.ɵɵtext(25, \"Home Address:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(26, \"input\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"div\", 4)(28, \"label\", 5);\n    i0.ɵɵtext(29, \"Speciality:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"select\", 12);\n    i0.ɵɵtemplate(31, CreateOverlayComponent_div_0_option_31_Template, 2, 2, \"option\", 13);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(32, \"div\", 4)(33, \"label\", 5);\n    i0.ɵɵtext(34, \"Gender:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"select\", 14);\n    i0.ɵɵtemplate(36, CreateOverlayComponent_div_0_option_36_Template, 2, 2, \"option\", 13);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(37, \"div\", 4);\n    i0.ɵɵelement(38, \"input\", 15);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.newDoctorForm);\n    i0.ɵɵadvance(29);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.specialities);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.gender);\n  }\n}\nexport class CreateOverlayComponent {\n  constructor(toggleService, fg) {\n    this.toggleService = toggleService;\n    this.fg = fg;\n    this.showOverlay = false;\n    this.specialities = ['Cardiology', 'Surgeon'];\n    this.gender = ['Male', 'Female'];\n  }\n  ngOnInit() {\n    this.toggleService.clickedEvent.subscribe(value => {\n      if (value == 2) {\n        this.showOverlay = true;\n      }\n    });\n    this.newDoctorForm = this.fg.group({\n      name: '',\n      surname: '',\n      age: '',\n      emailAddress: '',\n      phoneNumber: '',\n      homeAddress: '',\n      speciality: '',\n      gender: ''\n    });\n    this.newDoctorForm.valueChanges.subscribe();\n  }\n  closeOverlay(e) {\n    if (e == 'force-close') {\n      this.showOverlay = false;\n      return;\n    }\n    if (this.showOverlay) {\n      if (e.srcElement.className == 'overlay') {\n        this.showOverlay = false;\n      }\n    }\n  }\n  createDoctor() {\n    console.log(this.newDoctorForm.value);\n  }\n  static #_ = this.ɵfac = function CreateOverlayComponent_Factory(t) {\n    return new (t || CreateOverlayComponent)(i0.ɵɵdirectiveInject(i1.OverlayToggleService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateOverlayComponent,\n    selectors: [[\"app-create-overlay\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"overlay\", 3, \"click\", 4, \"ngIf\"], [1, \"overlay\", 3, \"click\"], [1, \"form-panel\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"txt-field\"], [1, \"field-label\"], [\"formControlName\", \"name\", \"type\", \"text\"], [\"formControlName\", \"surname\", \"type\", \"text\"], [\"formControlName\", \"age\", \"type\", \"text\"], [\"formControlName\", \"emailAddress\", \"type\", \"text\"], [\"formControlName\", \"phoneNumber\", \"type\", \"text\"], [\"formControlName\", \"homeAddress\", \"type\", \"text\"], [\"formControlName\", \"speciality\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"gender\"], [\"type\", \"submit\", \"value\", \"Add Doctor\"], [3, \"ngValue\"]],\n    template: function CreateOverlayComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, CreateOverlayComponent_div_0_Template, 39, 3, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.showOverlay);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\".overlay[_ngcontent-%COMP%] {\\n  z-index: 120;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100vw;\\n  height: 100vh;\\n  background-color: rgba(0, 0, 0, 0.5);\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n}\\n.overlay[_ngcontent-%COMP%]   .form-panel[_ngcontent-%COMP%] {\\n  display: flex;\\n  width: 50vw;\\n  min-width: 500px;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  background-color: #23232e;\\n  padding-top: 3rem;\\n  padding-bottom: 3rem;\\n  color: #edf6f7;\\n  font-size: 1.2rem;\\n}\\n.overlay[_ngcontent-%COMP%]   .form-panel[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\\n  min-width: 500px;\\n}\\n.overlay[_ngcontent-%COMP%]   .form-panel[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .txt-field[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n}\\n.overlay[_ngcontent-%COMP%]   .form-panel[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .txt-field[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  display: flex;\\n  float: left;\\n  margin-right: 0.5rem;\\n  color: #93F5FF;\\n  font-weight: 600;\\n  letter-spacing: 0.05rem;\\n}\\n.overlay[_ngcontent-%COMP%]   .form-panel[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .txt-field[_ngcontent-%COMP%]   input[type=text][_ngcontent-%COMP%] {\\n  background: none;\\n  border: none;\\n  border-bottom: 2px solid rgba(0, 0, 0, 0);\\n  transition: 300ms ease;\\n  font-size: 1.2rem;\\n  color: #edf6f7;\\n  transition: 300ms ease;\\n}\\n.overlay[_ngcontent-%COMP%]   .form-panel[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .txt-field[_ngcontent-%COMP%]   input[type=text][_ngcontent-%COMP%]::placeholder {\\n  color: #d92662;\\n}\\n.overlay[_ngcontent-%COMP%]   .form-panel[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .txt-field[_ngcontent-%COMP%]   input[type=date][_ngcontent-%COMP%] {\\n  margin-top: 0.3rem;\\n  margin-bottom: 0.3rem;\\n  padding: 0.4rem;\\n  font-size: 16px;\\n  background-color: #23232e;\\n  color: #93F5FF;\\n  transition: 300ms;\\n  border: 3px solid #93F5FF;\\n  font-family: \\\"Lato\\\", sans-serif;\\n}\\n.overlay[_ngcontent-%COMP%]   .form-panel[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .txt-field[_ngcontent-%COMP%]   input[type=date][_ngcontent-%COMP%]::-webkit-calendar-picker-indicator {\\n  background-color: #93F5FF;\\n}\\n.overlay[_ngcontent-%COMP%]   .form-panel[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .txt-field[_ngcontent-%COMP%]   input[type=date][_ngcontent-%COMP%]:focus, .overlay[_ngcontent-%COMP%]   .form-panel[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .txt-field[_ngcontent-%COMP%]   input[type=date][_ngcontent-%COMP%]:hover {\\n  border: 3px solid #d92662;\\n}\\n.overlay[_ngcontent-%COMP%]   .form-panel[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .txt-field[_ngcontent-%COMP%]   select[_ngcontent-%COMP%] {\\n  margin-top: 0.3rem;\\n  margin-bottom: 0.3rem;\\n  padding: 0.4rem;\\n  font-size: 16px;\\n  background-color: #23232e;\\n  color: #93F5FF;\\n  transition: 300ms;\\n  text-transform: uppercase;\\n  border: 3px solid #93F5FF;\\n  font-family: \\\"Lato\\\", sans-serif;\\n}\\n.overlay[_ngcontent-%COMP%]   .form-panel[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .txt-field[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]:hover, .overlay[_ngcontent-%COMP%]   .form-panel[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .txt-field[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]:focus {\\n  border: 3px solid #d92662;\\n}\\n.overlay[_ngcontent-%COMP%]   .form-panel[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .txt-field[_ngcontent-%COMP%]:hover   input[type=text][_ngcontent-%COMP%] {\\n  border-bottom: 2px solid #d92662;\\n}\\n/*# sourceURL=webpack://./src/app/create-overlay/create-overlay.component.scss */\\n/*# sourceURL=webpack://./src/utilities/variables.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY3JlYXRlLW92ZXJsYXkvY3JlYXRlLW92ZXJsYXkuY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi9zcmMvdXRpbGl0aWVzL3ZhcmlhYmxlcy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0ksWUFBQTtFQUNBLGtCQUFBO0VBQ0EsTUFBQTtFQUNBLE9BQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUNBLG9DQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtBQURKO0FBR0k7RUFDSSxhQUFBO0VBQ0EsV0FBQTtFQUNBLGdCQUFBO0VBQ0Esc0JBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EseUJDakJVO0VEa0JWLGlCQUFBO0VBQ0Esb0JBQUE7RUFDQSxjQ2pCSztFRGtCTCxpQkFBQTtBQURSO0FBR1E7RUFDSSxnQkFBQTtBQURaO0FBR1k7RUFDSSxhQUFBO0VBQ0EsdUJBQUE7QUFEaEI7QUFHZ0I7RUFDSSxhQUFBO0VBQ0EsV0FBQTtFQUNBLG9CQUFBO0VBQ0EsY0NyQ047RURzQ00sZ0JBQUE7RUFDQSx1QkFBQTtBQURwQjtBQUlnQjtFQUNJLGdCQUFBO0VBQ0EsWUFBQTtFQUNBLHlDQUFBO0VBQ0Esc0JBQUE7RUFDQSxpQkFBQTtFQUNBLGNDMUNQO0VEMkNPLHNCQUFBO0FBRnBCO0FBS2dCO0VBQ0ksY0NoREo7QUQ2Q2hCO0FBTWdCO0VBQ0ksa0JBQUE7RUFDQSxxQkFBQTtFQUNBLGVBQUE7RUFDQSxlQUFBO0VBQ0EseUJDMURGO0VEMkRFLGNDOUROO0VEK0RNLGlCQUFBO0VBQ0EseUJBQUE7RUFDQSwrQkFBQTtBQUpwQjtBQU9nQjtFQUNJLHlCQ3JFTjtBRGdFZDtBQVFnQjs7RUFFSSx5QkFBQTtBQU5wQjtBQVNnQjtFQUNJLGtCQUFBO0VBQ0EscUJBQUE7RUFDQSxlQUFBO0VBQ0EsZUFBQTtFQUNBLHlCQy9FRjtFRGdGRSxjQ25GTjtFRG9GTSxpQkFBQTtFQUNBLHlCQUFBO0VBQ0EseUJBQUE7RUFDQSwrQkFBQTtBQVBwQjtBQVVnQjs7RUFFSSx5QkFBQTtBQVJwQjtBQVlZO0VBQ0ksZ0NBQUE7QUFWaEIiLCJzb3VyY2VzQ29udGVudCI6WyIub3ZlcmxheSB7XG4gIHotaW5kZXg6IDEyMDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDB2dztcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi5vdmVybGF5IC5mb3JtLXBhbmVsIHtcbiAgZGlzcGxheTogZmxleDtcbiAgd2lkdGg6IDUwdnc7XG4gIG1pbi13aWR0aDogNTAwcHg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjMyMzJlO1xuICBwYWRkaW5nLXRvcDogM3JlbTtcbiAgcGFkZGluZy1ib3R0b206IDNyZW07XG4gIGNvbG9yOiAjZWRmNmY3O1xuICBmb250LXNpemU6IDEuMnJlbTtcbn1cbi5vdmVybGF5IC5mb3JtLXBhbmVsIGZvcm0ge1xuICBtaW4td2lkdGg6IDUwMHB4O1xufVxuLm92ZXJsYXkgLmZvcm0tcGFuZWwgZm9ybSAudHh0LWZpZWxkIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG4ub3ZlcmxheSAuZm9ybS1wYW5lbCBmb3JtIC50eHQtZmllbGQgbGFiZWwge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbG9hdDogbGVmdDtcbiAgbWFyZ2luLXJpZ2h0OiAwLjVyZW07XG4gIGNvbG9yOiAjOTNGNUZGO1xuICBmb250LXdlaWdodDogNjAwO1xuICBsZXR0ZXItc3BhY2luZzogMC4wNXJlbTtcbn1cbi5vdmVybGF5IC5mb3JtLXBhbmVsIGZvcm0gLnR4dC1maWVsZCBpbnB1dFt0eXBlPXRleHRdIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItYm90dG9tOiAycHggc29saWQgcmdiYSgwLCAwLCAwLCAwKTtcbiAgdHJhbnNpdGlvbjogMzAwbXMgZWFzZTtcbiAgZm9udC1zaXplOiAxLjJyZW07XG4gIGNvbG9yOiAjZWRmNmY3O1xuICB0cmFuc2l0aW9uOiAzMDBtcyBlYXNlO1xufVxuLm92ZXJsYXkgLmZvcm0tcGFuZWwgZm9ybSAudHh0LWZpZWxkIGlucHV0W3R5cGU9dGV4dF06OnBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNkOTI2NjI7XG59XG4ub3ZlcmxheSAuZm9ybS1wYW5lbCBmb3JtIC50eHQtZmllbGQgaW5wdXRbdHlwZT1kYXRlXSB7XG4gIG1hcmdpbi10b3A6IDAuM3JlbTtcbiAgbWFyZ2luLWJvdHRvbTogMC4zcmVtO1xuICBwYWRkaW5nOiAwLjRyZW07XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIzMjMyZTtcbiAgY29sb3I6ICM5M0Y1RkY7XG4gIHRyYW5zaXRpb246IDMwMG1zO1xuICBib3JkZXI6IDNweCBzb2xpZCAjOTNGNUZGO1xuICBmb250LWZhbWlseTogXCJMYXRvXCIsIHNhbnMtc2VyaWY7XG59XG4ub3ZlcmxheSAuZm9ybS1wYW5lbCBmb3JtIC50eHQtZmllbGQgaW5wdXRbdHlwZT1kYXRlXTo6LXdlYmtpdC1jYWxlbmRhci1waWNrZXItaW5kaWNhdG9yIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzkzRjVGRjtcbn1cbi5vdmVybGF5IC5mb3JtLXBhbmVsIGZvcm0gLnR4dC1maWVsZCBpbnB1dFt0eXBlPWRhdGVdOmZvY3VzLFxuLm92ZXJsYXkgLmZvcm0tcGFuZWwgZm9ybSAudHh0LWZpZWxkIGlucHV0W3R5cGU9ZGF0ZV06aG92ZXIge1xuICBib3JkZXI6IDNweCBzb2xpZCAjZDkyNjYyO1xufVxuLm92ZXJsYXkgLmZvcm0tcGFuZWwgZm9ybSAudHh0LWZpZWxkIHNlbGVjdCB7XG4gIG1hcmdpbi10b3A6IDAuM3JlbTtcbiAgbWFyZ2luLWJvdHRvbTogMC4zcmVtO1xuICBwYWRkaW5nOiAwLjRyZW07XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIzMjMyZTtcbiAgY29sb3I6ICM5M0Y1RkY7XG4gIHRyYW5zaXRpb246IDMwMG1zO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBib3JkZXI6IDNweCBzb2xpZCAjOTNGNUZGO1xuICBmb250LWZhbWlseTogXCJMYXRvXCIsIHNhbnMtc2VyaWY7XG59XG4ub3ZlcmxheSAuZm9ybS1wYW5lbCBmb3JtIC50eHQtZmllbGQgc2VsZWN0OmhvdmVyLFxuLm92ZXJsYXkgLmZvcm0tcGFuZWwgZm9ybSAudHh0LWZpZWxkIHNlbGVjdDpmb2N1cyB7XG4gIGJvcmRlcjogM3B4IHNvbGlkICNkOTI2NjI7XG59XG4ub3ZlcmxheSAuZm9ybS1wYW5lbCBmb3JtIC50eHQtZmllbGQ6aG92ZXIgaW5wdXRbdHlwZT10ZXh0XSB7XG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjZDkyNjYyO1xufSIsbnVsbF0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","CreateOverlayComponent","constructor","toggleService","fg","ngOnInit","clickedEvent","subscribe","value","showOverlay","newDoctorForm","group","name","surname","age","emailAddress","phoneNumber","homeAddress","speciality","gender","valueChanges","closeOverlay","e","srcElement","className","createDoctor","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Documents\\dotNet\\MyDocAppointment\\Frontend\\my-doc-appointment\\src\\app\\create-overlay\\create-overlay.component.html","C:\\Documents\\dotNet\\MyDocAppointment\\Frontend\\my-doc-appointment\\src\\app\\create-overlay\\create-overlay.component.ts"],"sourcesContent":["<div class=\"overlay\" *ngIf=\"showOverlay\" (click)=\"closeOverlay($event)\">\n    <div class=\"form-panel\">\n        <form [formGroup]=\"newDoctorForm\" (ngSubmit)=\"createDoctor()\">\n            \n            <div class=\"txt-field\">\n                <label class=\"field-label\">Name:</label>\n                <input formControlName=\"name\" type=\"text\">\n            </div>\n            <div class=\"txt-field\">\n                <label class=\"field-label\">Surname:</label>\n                <input formControlName=\"surname\" type=\"text\">\n            </div>\n            <div class=\"txt-field\">\n                <label class=\"field-label\">Age:</label>\n                <input formControlName=\"age\" type=\"text\">\n            </div>\n            <div class=\"txt-field\">\n                <label class=\"field-label\">Email Address:</label>\n                <input formControlName=\"emailAddress\" type=\"text\">\n            </div>\n            <div class=\"txt-field\">\n                <label class=\"field-label\">Phone Number:</label>\n                <input formControlName=\"phoneNumber\" type=\"text\">\n            </div>\n            <div class=\"txt-field\">\n                <label class=\"field-label\">Home Address:</label>\n                <input formControlName=\"homeAddress\" type=\"text\">\n            </div>\n            <div class=\"txt-field\">\n                <label class=\"field-label\">Speciality:</label>\n                <select formControlName=\"speciality\" >\n                    <option *ngFor=\"let spec of specialities\" [ngValue]=\"spec\">{{spec}}</option>\n                </select>\n            </div>\n            <div class=\"txt-field\">\n                <label class=\"field-label\">Gender:</label>\n                <select formControlName=\"gender\" >\n                    <option *ngFor=\"let g of gender\" [ngValue]=\"g\">{{g}}</option>\n                </select>\n            </div>\n            <div class=\"txt-field\">\n                <input type=\"submit\" value=\"Add Doctor\">\n            </div>\n          </form>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { OverlayToggleService } from '../services/overlay-toggle/overlay-toggle.service';\n\n@Component({\n  selector: 'app-create-overlay',\n  templateUrl: './create-overlay.component.html',\n  styleUrls: ['./create-overlay.component.scss']\n})\nexport class CreateOverlayComponent implements OnInit{\n  showOverlay: boolean = false;\n\n  specialities = [\n    'Cardiology',\n    'Surgeon'\n  ];\n\n  gender = [\n    'Male',\n    'Female'\n  ];\n  newDoctorForm : FormGroup;\n\n\n  constructor(private toggleService : OverlayToggleService, private fg: FormBuilder){}\n\n  ngOnInit(){\n    this.toggleService.clickedEvent.subscribe((value:number)=>{\n      if(value == 2){\n        this.showOverlay = true;\n      }\n    });\n\n    this.newDoctorForm = this.fg.group({\n      name:'',\n      surname:'',\n      age:'',\n      emailAddress: '',\n      phoneNumber:'',\n      homeAddress:'',\n      speciality:'',\n      gender:''\n    });\n    this.newDoctorForm.valueChanges.subscribe();\n  }\n\n  closeOverlay(e:any){\n    if(e == 'force-close'){\n      this.showOverlay = false;\n      return\n    }\n\n    if(this.showOverlay){\n      if(e.srcElement.className == 'overlay'){\n        this.showOverlay = false;\n      }\n    }\n  }\n\n  createDoctor(){\n    console.log(this.newDoctorForm.value);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}