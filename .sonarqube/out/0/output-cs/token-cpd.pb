×
dC:\Users\Ovidiu\source\repos\MyDocAppointmentRight\MyDocAppointment.Business\Helpers\DiscountType.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $
Helpers$ +
{ 
public 

enum 
DiscountType 
{ 

percentage 
= 
$num 
, 
amount 
= 
$num 
} 
} Ñ
eC:\Users\Ovidiu\source\repos\MyDocAppointmentRight\MyDocAppointment.Business\Helpers\PaymentMethod.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $
Helpers$ +
{ 
public 

enum 
PaymentMethod 
{ 
Card 
= 
$num 
, 
Cash 
= 
$num 
} 
} ”
dC:\Users\Ovidiu\source\repos\MyDocAppointmentRight\MyDocAppointment.Business\Helpers\PersonGender.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $
Helpers$ +
{ 
public 	
enum
 
PersonGender 
{ 
Male 
= 
$num 
, 
Female 
= 
$num 
, 
Other 
= 
$num 
} 
}		 ò
^C:\Users\Ovidiu\source\repos\MyDocAppointmentRight\MyDocAppointment.Business\Helpers\Result.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $
Helpers$ +
{ 
public 

class 
Result 
{ 
public 
string 
Error 
{ 
get !
;! "
private# *
set+ .
;. /
}0 1
=2 3
string4 :
.: ;
Empty; @
;@ A
public 
bool 
	IsSuccess 
{ 
get  #
;# $
private% ,
set- 0
;0 1
}2 3
public 
bool 
	IsFailure 
{ 
get  #
;# $
private% ,
set- 0
;0 1
}2 3
public		 
static		 
Result		 
Success		 $
(		$ %
)		% &
{

 	
return 
new 
Result 
{ 
	IsSuccess 
= 
true  
} 
; 
} 	
public 
static 
Result 
Failure $
($ %
string% +
error, 1
)1 2
{ 	
return 
new 
Result 
{ 
Error 
= 
error 
, 
	IsFailure 
= 
true  
} 
; 
} 	
} 
} ’
fC:\Users\Ovidiu\source\repos\MyDocAppointmentRight\MyDocAppointment.Business\Helpers\ResultOfEntity.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $
Helpers$ +
{ 
public 

class 
Result 
< 
TEntity 
>  
{ 
public 
TEntity 
? 
Entity 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Error 
{ 
get !
;! "
private# *
set+ .
;. /
}0 1
=2 3
string4 :
.: ;
Empty; @
;@ A
public 
bool 
	IsSuccess 
{ 
get  #
;# $
private% ,
set- 0
;0 1
}2 3
public		 
bool		 
	IsFailure		 
{		 
get		  #
;		# $
private		% ,
set		- 0
;		0 1
}		2 3
public 
static 
Result 
< 
TEntity $
>$ %
Success& -
(- .
TEntity. 5
entity6 <
)< =
{ 	
return 
new 
Result 
< 
TEntity %
>% &
{ 
Entity 
= 
entity 
,  
	IsSuccess 
= 
true  
} 
; 
} 	
public 
static 
Result 
< 
TEntity $
>$ %
Failure& -
(- .
string. 4
error5 :
): ;
{ 	
return 
new 
Result 
< 
TEntity %
>% &
{ 
Error 
= 
error 
, 
	IsFailure 
= 
true  
} 
; 
} 	
} 
} Þ
fC:\Users\Ovidiu\source\repos\MyDocAppointmentRight\MyDocAppointment.Business\Helpers\Specialization.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $
Helpers$ +
{ 
public 

enum 
Specialization 
{ 

Cardiology 
= 
$num 
, 
	Neurology 
= 
$num 
} 
} Ú
rC:\Users\Ovidiu\source\repos\MyDocAppointmentRight\MyDocAppointment.Business\Interfaces\IAppointmentsRepository.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $

Interfaces$ .
{ 
public 

	interface #
IAppointmentsRepository ,
{ 
Task 
Create 
( 
Appointment 
appointment  +
)+ ,
;, -
Task 
Delete 
( 
Appointment 
appointment  +
)+ ,
;, -
Task		 
SaveChanges		 
(		 
)		 
;		 
Task

 
<

 
IEnumerable

 
<

 
Appointment

 $
>

$ %
>

% &
GetAll

' -
(

- .
)

. /
;

/ 0
Task 
< 
Appointment 
? 
> 
GetById "
(" #
Guid# '
id( *
)* +
;+ ,
} 
} ê
oC:\Users\Ovidiu\source\repos\MyDocAppointmentRight\MyDocAppointment.Business\Interfaces\IAppointmentsService.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $

Interfaces$ .
{ 
public 

	interface  
IAppointmentsService )
{ 
Task		 
Create		 
(		 
Appointment		 
appointment		  +
)		+ ,
;		, -
Task

 
<

 
Result

 
>

 
Delete

 
(

 
Guid

  
id

! #
)

# $
;

$ %
Task 
SaveChanges 
( 
) 
; 
Task 
< 
Result 
< 
IEnumerable 
<  
Appointment  +
>+ ,
>, -
>- .
GetAll/ 5
(5 6
)6 7
;7 8
Task 
< 
Result 
< 
Appointment 
>  
>  !
GetById" )
() *
Guid* .
id/ 1
)1 2
;2 3
Task 
< 
Result 
< 
Appointment 
>  
>  !
Update" (
(( )
Appointment) 4
appointment5 @
,@ A
GuidB F
idG I
)I J
;J K
} 
} ²
mC:\Users\Ovidiu\source\repos\MyDocAppointmentRight\MyDocAppointment.Business\Interfaces\IDoctorsRepository.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $

Interfaces$ .
{ 
public 

	interface 
IDoctorsRepository '
{ 
Task 
Create 
( 
Doctor 
doctor !
)! "
;" #
Task		 
Delete		 
(		 
Doctor		 
doctor		 !
)		! "
;		" #
Task

 
SaveChanges

 
(

 
)

 
;

 
Task 
< 
IEnumerable 
< 
Doctor 
>  
>  !
GetAll" (
(( )
)) *
;* +
Task 
< 
Doctor 
? 
> 
GetById 
( 
Guid "
id# %
)% &
;& '
} 
} Ã
jC:\Users\Ovidiu\source\repos\MyDocAppointmentRight\MyDocAppointment.Business\Interfaces\IDoctorsService.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $

Interfaces$ .
{ 
public 

	interface 
IDoctorsService $
{ 
Task 
Create 
( 
Doctor 
doctor !
)! "
;" #
Task		 
<		 
Result		 
>		 
Delete		 
(		 
Guid		  
id		! #
)		# $
;		$ %
Task

 
SaveChanges

 
(

 
)

 
;

 
Task 
< 
Result 
< 
IEnumerable 
<  
Doctor  &
>& '
>' (
>( )
GetAll* 0
(0 1
)1 2
;2 3
Task 
< 
Result 
< 
Doctor 
> 
> 
GetById $
($ %
Guid% )
id* ,
), -
;- .
Task 
< 
Result 
< 
Doctor 
> 
> 
Update #
(# $
Doctor$ *
doctor+ 1
,1 2
Guid3 7
doctorId8 @
)@ A
;A B
} 
} ¢
kC:\Users\Ovidiu\source\repos\MyDocAppointmentRight\MyDocAppointment.Business\Interfaces\IDrugsRepository.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $

Interfaces$ .
{ 
public 

	interface 
IDrugsRepository %
{ 
Task 
Create 
( 
Drug 
drug 
) 
; 
Task 
Delete 
( 
Drug 
drug 
) 
; 
Task		 
SaveChanges		 
(		 
)		 
;		 
Task

 
<

 
IEnumerable

 
<

 
Drug

 
>

 
>

 
GetAll

  &
(

& '
)

' (
;

( )
Task 
< 
Drug 
? 
> 
GetById 
( 
Guid  
id! #
)# $
;$ %
} 
} ¯
hC:\Users\Ovidiu\source\repos\MyDocAppointmentRight\MyDocAppointment.Business\Interfaces\IDrugsService.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $

Interfaces$ .
{ 
public 

	interface 
IDrugsService "
{ 
Task		 
Create		 
(		 
Drug		 
drug		 
)		 
;		 
Task

 
<

 
Result

 
>

 
Delete

 
(

 
Guid

  
id

! #
)

# $
;

$ %
Task 
SaveChanges 
( 
) 
; 
Task 
< 
Result 
< 
IEnumerable 
<  
Drug  $
>$ %
>% &
>& '
GetAll( .
(. /
)/ 0
;0 1
Task 
< 
Result 
< 
Drug 
> 
> 
GetById "
(" #
Guid# '
id( *
)* +
;+ ,
Task 
< 
Result 
< 
Drug 
> 
> 
Update !
(! "
Drug" &
drug' +
,+ ,
Guid- 1
drugId2 8
)8 9
;9 :
} 
} «
nC:\Users\Ovidiu\source\repos\MyDocAppointmentRight\MyDocAppointment.Business\Interfaces\IPatientsRepository.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $

Interfaces$ .
{ 
public 

	interface 
IPatientsRepository (
{ 
Task 
Create 
( 
Patient 
patient #
)# $
;$ %
Task 
Delete 
( 
Patient 
patient #
)# $
;$ %
Task		 
SaveChanges		 
(		 
)		 
;		 
Task

 
<

 
IEnumerable

 
<

 
Patient

  
>

  !
>

! "
GetAll

# )
(

) *
)

* +
;

+ ,
Task 
< 
Patient 
> 
GetById 
( 
Guid "
id# %
)% &
;& '
} 
} Í
kC:\Users\Ovidiu\source\repos\MyDocAppointmentRight\MyDocAppointment.Business\Interfaces\IPatientsService.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $

Interfaces$ .
{ 
public 

	interface 
IPatientsService %
{ 
Task 
Create 
( 
Patient 
patient #
)# $
;$ %
Task		 
<		 
Result		 
>		 
Delete		 
(		 
Guid		  
id		! #
)		# $
;		$ %
Task

 
SaveChanges

 
(

 
)

 
;

 
Task 
< 
Result 
< 
IEnumerable 
<  
Patient  '
>' (
>( )
>) *
GetAll+ 1
(1 2
)2 3
;3 4
Task 
< 
Result 
< 
Patient 
> 
> 
GetById %
(% &
Guid& *
id+ -
)- .
;. /
Task 
< 
Result 
< 
Patient 
> 
> 
Update $
($ %
Patient% ,
patient- 4
,4 5
Guid6 :
	patientId; D
)D E
;E F
} 
} ¼
nC:\Users\Ovidiu\source\repos\MyDocAppointmentRight\MyDocAppointment.Business\Logistics\External\Appointment.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $
	Logistics$ -
.- .
External. 6
{ 
public 

class 
Appointment 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public		 
Payment		 
?		 
Payment		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
public

 
string

 
Location

 
{

  
get

! $
;

$ %
set

& )
;

) *
}

+ ,
=

- .
string

/ 5
.

5 6
Empty

6 ;
;

; <
public 
Guid 
	PatientID 
{ 
get  #
;# $
set% (
;( )
}* +
public 
Guid 
DoctorID 
{ 
get "
;" #
set$ '
;' (
}) *
public 
Specialization 
Specialization ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
public 
DateTime 
AppointmentTime '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
virtual 
Doctor 
? 
Doctor %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
virtual 
Patient 
? 
Patient  '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
} 
} ãB
lC:\Users\Ovidiu\source\repos\MyDocAppointmentRight\MyDocAppointment.Business\Logistics\External\Diagnosis.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $
	Logistics$ -
.- .
External. 6
{ 
public 

class 
	Diagnosis 
{ 
public		 
Guid		 
Id		 
{		 
get		 
;		 
set		 !
;		! "
}		# $
public

 
string

 
Name

 
{

 
get

  
;

  !
private

" )
set

* -
;

- .
}

/ 0
=

1 2
string

3 9
.

9 :
Empty

: ?
;

? @
public 
string 
Description !
{" #
get$ '
;' (
private) 0
set1 4
;4 5
}6 7
=8 9
string: @
.@ A
EmptyA F
;F G
public 
DateTime 
DiagnosisDate %
{& '
get( +
;+ ,
private- 4
set5 8
;8 9
}: ;
public 
List 
< 
Observation 
>  
?  !
Observations" .
{/ 0
get1 4
;4 5
private6 =
set> A
;A B
}C D
=E F
newG J
ListK O
<O P
ObservationP [
>[ \
(\ ]
)] ^
;^ _
public 
Guid 
	PatientId 
{ 
get  #
;# $
private% ,
set- 0
;0 1
}2 3
public 
static 
Result 
< 
	Diagnosis &
>& '
Create( .
(. /
string/ 5
name6 :
,: ;
string< B
descriptionC N
,N O
stringP V
diagnosisDateW d
)d e
{ 	
DateTime 

timeResult 
;  
try 
{ 

timeResult 
= 
DateTime %
.% &
Parse& +
(+ ,
diagnosisDate, 9
)9 :
;: ;
} 
catch 
( 
	Exception 
ex 
) 
{ 
return 
Result 
< 
	Diagnosis '
>' (
.( )
Failure) 0
(0 1
$"1 3
$str3 I
{I J
diagnosisDateJ W
}W X
$strX \
"\ ]
+^ _
ex` b
.b c
Messagec j
)j k
;k l
} 
	Diagnosis 
	diagnosis 
=  !
new" %
(% &
)& '
{ 
Id 
= 
Guid 
. 
NewGuid !
(! "
)" #
,# $
Name   
=   
name   
,   
Description!! 
=!! 
description!! )
,!!) *
DiagnosisDate"" 
="" 

timeResult""  *
}## 
;## 
return$$ 
Result$$ 
<$$ 
	Diagnosis$$ #
>$$# $
.$$$ %
Success$$% ,
($$, -
	diagnosis$$- 6
)$$6 7
;$$7 8
}&& 	
public(( 
Result(( 
AddObservation(( $
((($ %
string((% +
date((, 0
,((0 1
string((2 8
description((9 D
)((D E
{)) 	
Observations** 
.** 
Add** 
(** 
Observation** (
.**( )
Create**) /
(**/ 0
date**0 4
,**4 5
description**6 A
)**A B
.**B C
Entity**C I
)**I J
;**J K
return++ 
Result++ 
.++ 
Success++ !
(++! "
)++" #
;++# $
},, 	
public.. 
Result.. 
DeleteObservation.. '
(..' (
int..( +
id.., .
)... /
{// 	
if00 
(00 
Observations00 
.00 
Count00 "
>00# $
id00% '
)00' (
{11 
Observations22 
.22 
RemoveAt22 &
(22& '
id22' )
)22) *
;22* +
return33 
Result33 
.33 
Success33 %
(33% &
)33& '
;33' (
}44 
return55 
Result55 
.55 
Failure55 !
(55! "
$str55" K
)55K L
;55L M
}66 	
public88 
Result88 
ModifyObservation88 '
(88' (
int88( +
id88, .
,88. /
string880 6
date887 ;
,88; <
string88= C
description88D O
)88O P
{99 	
if:: 
(:: 
Observations:: 
.:: 
Count:: #
>::$ %
id::& (
)::( )
{;; 
Observations<< 
[<< 
id<<  
]<<  !
=<<" #
Observation<<$ /
.<</ 0
Create<<0 6
(<<6 7
date<<7 ;
,<<; <
description<<= H
)<<H I
.<<I J
Entity<<J P
;<<P Q
return== 
Result== 
.== 
Success== %
(==% &
)==& '
;==' (
}>> 
return?? 
Result?? 
.?? 
Failure?? !
(??! "
$str??" K
)??K L
;??L M
}@@ 	
publicBB 
ResultBB 
AssignToPatientBB %
(BB% &
PatientBB& -
patientBB. 5
)BB5 6
{CC 	
ifDD 
(DD 
patientDD 
==DD 
nullDD 
)DD 
{EE 
returnFF 
ResultFF 
.FF 
FailureFF %
(FF% &
$strFF& ?
)FF? @
;FF@ A
}GG 
	PatientIdII 
=II 
patientII 
.II  
IdII  "
;II" #
patientJJ 
.JJ 
AddDiagnosisJJ  
(JJ  !
thisJJ! %
)JJ% &
;JJ& '
returnKK 
ResultKK 
.KK 
SuccessKK !
(KK! "
)KK" #
;KK# $
}LL 	
publicNN 
ResultNN 
ModifyNN 
(NN 
stringNN #
?NN# $
nameNN% )
=NN* +
nullNN, 0
,NN0 1
stringNN2 8
?NN8 9
descriptionNN: E
=NNF G
nullNNH L
,NNL M
stringNNN T
?NNT U
diagnosisDateNNV c
=NNd e
nullNNf j
)NNj k
{OO 	
ifPP 
(PP 
namePP 
!=PP 
nullPP 
)PP 
{QQ 
NameRR 
=RR 
nameRR 
;RR 
}SS 
ifUU 
(UU 
descriptionUU 
!=UU 
nullUU "
)UU" #
{VV 
DescriptionWW 
=WW 
descriptionWW )
;WW) *
}XX 
ifZZ 
(ZZ 
diagnosisDateZZ 
!=ZZ 
nullZZ  $
)ZZ$ %
{[[ 
DateTime\\ 

timeResult\\ #
;\\# $
try^^ 
{__ 

timeResult`` 
=``  
DateTime``! )
.``) *
Parse``* /
(``/ 0
diagnosisDate``0 =
)``= >
;``> ?
}aa 
catchbb 
(bb 
	Exceptionbb  
exbb! #
)bb# $
{cc 
returndd 
Resultdd !
.dd! "
Failuredd" )
(dd) *
$"dd* ,
$strdd, B
{ddB C
diagnosisDateddC P
}ddP Q
$strddQ U
"ddU V
+ddW X
exddY [
.dd[ \
Messagedd\ c
)ddc d
;ddd e
}ee 
}ff 
returnhh 
Resulthh 
.hh 
Successhh !
(hh! "
)hh" #
;hh# $
}ii 	
}jj 
}kk ç
nC:\Users\Ovidiu\source\repos\MyDocAppointmentRight\MyDocAppointment.Business\Logistics\External\Observation.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $
	Logistics$ -
.- .
External. 6
{ 
public 

class 
Observation 
{ 
public 
Guid 
Id 
{ 
get 
; 
private %
set& )
;) *
}+ ,
public		 
DateTime		 
Date		 
{		 
get		 "
;		" #
private		$ +
set		, /
;		/ 0
}		1 2
public

 
string

 
Description

 !
{

" #
get

$ '
;

' (
private

) 0
set

1 4
;

4 5
}

6 7
=

8 9
string

: @
.

@ A
Empty

A F
;

F G
public 
static 
Result 
< 
Observation (
>( )
Create* 0
(0 1
string1 7
date8 <
,< =
string> D
descriptionE P
)P Q
{ 	
DateTime 

timeResult 
;  
try 
{ 

timeResult 
= 
DateTime %
.% &
Parse& +
(+ ,
date, 0
)0 1
;1 2
} 
catch 
( 
	Exception 
ex 
)  
{ 
return 
Result 
< 
Observation )
>) *
.* +
Failure+ 2
(2 3
$"3 5
$str5 K
{K L
dateL P
}P Q
$strQ U
"U V
+W X
exY [
.[ \
Message\ c
)c d
;d e
} 
Observation 
observation #
=$ %
new& )
() *
)* +
{ 
Id 
= 
Guid 
. 
NewGuid !
(! "
)" #
,# $
Date 
= 

timeResult !
,! "
Description 
= 
description )
} 
; 
return 
Result 
< 
Observation %
>% &
.& '
Success' .
(. /
observation/ :
): ;
;; <
}   	
}!! 
}"" »

jC:\Users\Ovidiu\source\repos\MyDocAppointmentRight\MyDocAppointment.Business\Logistics\External\Payment.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $
	Logistics$ -
.- .
External. 6
{ 
public 

class 
Payment 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
double 
Amount 
{ 
get "
;" #
set$ '
;' (
}) *
public		 
PaymentMethod		 
PaymentMethod		 *
{		+ ,
get		- 0
;		0 1
set		2 5
;		5 6
}		7 8
public

 
DateTime

 
DueDate

 
{

  !
get

" %
;

% &
set

' *
;

* +
}

, -
public 
DateTime 
EmissionDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
DateTime 
AcquittedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
} 
} ˜#
jC:\Users\Ovidiu\source\repos\MyDocAppointmentRight\MyDocAppointment.Business\Logistics\Internal\Cabinet.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $
	Logistics$ -
.- .
Internal. 6
{ 
public 

class 
Cabinet 
{ 
public 
Cabinet 
( 
List 
< 
	DrugStock %
>% &
stock' ,
), -
{ 	
Id 
= 
Guid 
. 
NewGuid 
( 
) 
;  
	Inventory		 
=		 
stock		 
;		 
TotalAmmount

 
=

 
$num

 
;

 
	Inventory 
. 
ForEach 
( 
i 
=>  "
{# $
TotalAmmount 
+= 
i  !
.! "
Quantity" *
;* +
} 
) 
; 
} 	
private 
Guid 
id 
; 
private 
List 
< 
	DrugStock 
> 
	inventory  )
;) *
private 
int 
totalAmmount  
;  !
public 
Guid 
Id 
{ 
get 
=> 
id  "
;" #
set$ '
=>( *
id+ -
=. /
value0 5
;5 6
}7 8
public 
List 
< 
	DrugStock 
> 
	Inventory (
{) *
get+ .
=>/ 1
	inventory2 ;
;; <
set= @
=>A C
	inventoryD M
=N O
valueP U
;U V
}W X
public 
int 
TotalAmmount 
{  !
get" %
=>& (
totalAmmount) 5
;5 6
set7 :
=>; =
totalAmmount> J
=K L
valueM R
;R S
}T U
public 
void 
RemoveFromInventory '
(' (
	DrugStock( 1
	drugStock2 ;
); <
{< =
int 
index 
= 
	Inventory !
.! "
	FindIndex" +
(+ ,
i, -
=>. 0
i1 2
.2 3
Id3 5
==6 8
	drugStock9 B
.B C
IdC E
)E F
;F G
if 
( 
index 
== 
- 
$num 
) 
{ 
return 
; 
} 
TotalAmmount 
-= 
	Inventory %
[% &
index& +
]+ ,
., -
Quantity- 5
;5 6
	Inventory 
. 
RemoveAt 
( 
index $
)$ %
;% &
} 	
public   
void   
RemoveFromInventory   '
(  ' (
Guid  ( ,
id  - /
)  / 0
{  0 1
int!! 
index!! 
=!! 
	Inventory!! !
.!!! "
	FindIndex!!" +
(!!+ ,
i!!, -
=>!!. 0
i!!1 2
.!!2 3
Id!!3 5
==!!6 8
id!!9 ;
)!!; <
;!!< =
if"" 
("" 
index"" 
=="" 
-"" 
$num"" 
)"" 
{"" 
return## 
;## 
}$$ 
TotalAmmount%% 
-=%% 
	Inventory%% %
[%%% &
index%%& +
]%%+ ,
.%%, -
Quantity%%- 5
;%%5 6
	Inventory&& 
.&& 
RemoveAt&& 
(&& 
index&& $
)&&$ %
;&&% &
}'' 	
public)) 
void)) 
AddStock)) 
()) 
	DrugStock)) &
	drugStock))' 0
)))0 1
{))1 2
	Inventory** 
.** 
Add** 
(** 
	drugStock** #
)**# $
;**$ %
TotalAmmount++ 
+=++ 
	drugStock++ %
.++% &
Quantity++& .
;++. /
},, 	
}// 
}00 Ú
gC:\Users\Ovidiu\source\repos\MyDocAppointmentRight\MyDocAppointment.Business\Logistics\Internal\Drug.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $
	Logistics$ -
.- .
Internal. 6
{ 
public 

class 
Drug 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}" #
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
public 
string 
Vendor 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
string- 3
.3 4
Empty4 9
;9 :
public 
string 
Category 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
string/ 5
.5 6
Empty6 ;
;; <
public		 
decimal		 
Price		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		( )
public 
void 
ChangePrice 
(  
decimal  '
newPrice( 0
)0 1
{1 2
Price 
= 
newPrice 
; 
} 	
public 
void 
ChangeCategory "
(" #
string# )
newCategory* 5
)5 6
{6 7
Category 
= 
newCategory "
;" #
} 	
} 
} —
lC:\Users\Ovidiu\source\repos\MyDocAppointmentRight\MyDocAppointment.Business\Logistics\Internal\DrugStock.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $
	Logistics$ -
.- .
Internal. 6
{ 
public 

class 
	DrugStock 
{ 
public 
	DrugStock 
( 
Drug 
item "
," #
int$ '
quantity( 0
,0 1
bool2 6
isRestricted7 C
)C D
{ 	
Id 
= 
Guid 
. 
NewGuid 
( 
) 
;  
Item		 
=		 
item		 
;		 
Quantity

 
=

 
quantity

 
;

  
IsRestricted 
= 
isRestricted '
;' (
} 	
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}" #
public 
Drug 
Item 
{ 
get 
; 
set  #
;# $
}% &
public 
int 
Quantity 
{ 
get !
;! "
set# &
;& '
}( )
public 
bool 
IsRestricted  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
void 
SwitchRestriction %
(% &
)& '
{' (
IsRestricted 
= 
! 
IsRestricted (
;( )
} 	
public 
void 

ChangeDrug 
( 
Drug #
newDrug$ +
)+ ,
{, -
Item 
= 
newDrug 
; 
} 	
public 
void 
ReplenishInventory &
(& '
int' *
quantity+ 3
)3 4
{4 5
Quantity 
+= 
quantity  
;  !
} 	
public 
bool 
	TakeItems 
( 
int !
quantity" *
)* +
{+ ,
if 
( 
! 
IsRestricted 
&& 
Quantity  (
>=) +
quantity, 4
)4 5
{5 6
Quantity   
-=   
quantity   $
;  $ %
return!! 
true!! 
;!! 
}"" 
return## 
false## 
;## 
}$$ 	
}%% 
}&& Ç
jC:\Users\Ovidiu\source\repos\MyDocAppointmentRight\MyDocAppointment.Business\Logistics\Internal\Storage.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $
	Logistics$ -
.- .
Internal. 6
{ 
public 

class 
Storage 
{ 
public 
Storage 
( 
List 
< 
Cabinet #
># $
cabinets% -
)- .
{ 	
Id		 
=		 
Guid		 
.		 
NewGuid		 
(		 
)		 
;		  
Cabinets

 
=

 
cabinets

 
;

  
} 	
public 
Guid 
Id 
{ 
private  
set! $
;$ %
get& )
;) *
}+ ,
public 
List 
< 
Cabinet 
> 
Cabinets %
{& '
private( /
set0 3
;3 4
get5 8
;8 9
}: ;
public 
Result 

AddCabinet  
(  !
Cabinet! (
cabinet) 0
)0 1
{1 2
Cabinets 
. 
Add 
( 
cabinet  
)  !
;! "
return 
Result 
. 
Success !
(! "
)" #
;# $
} 	
public 
void 
RemoveCabinet !
(! "
Cabinet" )
cabinet* 1
)1 2
{2 3
Cabinets 
. 
	RemoveAll 
( 
c  
=>! #
c$ %
.% &
Id& (
==) +
cabinet, 3
.3 4
Id4 6
)6 7
;7 8
} 	
public 
void 
RemoveCabinet !
(! "
Guid" &
id' )
)) *
{* +
Cabinets 
. 
	RemoveAll 
( 
c  
=>! #
c$ %
.% &
Id& (
==) +
id, .
). /
;/ 0
} 	
} 
} ë%
\C:\Users\Ovidiu\source\repos\MyDocAppointmentRight\MyDocAppointment.Business\Users\Doctor.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $
Users$ )
{ 
public 

class 
Doctor 
: 
Person  
{ 
public 
Specialization 

Speciality (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public		 
List		 
<		 
Appointment		 
>		  
?		  !
Appointments		" .
{		/ 0
get		1 4
;		4 5
set		6 9
;		9 :
}		; <
public 
static 
Result 
< 
Doctor #
># $
Create% +
(+ ,
string, 2
name3 7
,7 8
string9 ?
surname@ G
,G H
intI L
ageM P
,P Q
stringR X
genderY _
,_ `
string 
emailAddress 
,  
string! '
phoneNumber( 3
,3 4
string5 ;
homeAddress< G
,G H
stringI O
specializationP ^
)^ _
{ 	
PersonGender 
genderResult %
;% &
Specialization  
specializationResult /
;/ 0
if 
( 
! 
Enum 
. 
TryParse 
< 
PersonGender +
>+ ,
(, -
gender- 3
,3 4
out5 8
genderResult9 E
)E F
)F G
{ 
return 
Result 
< 
Doctor $
>$ %
.% &
Failure& -
(- .
$str. I
+J K
genderL R
)R S
;S T
} 
if 
( 
! 
Enum 
. 
TryParse 
< 
Specialization -
>- .
(. /
specialization/ =
,= >
out? B 
specializationResultC W
)W X
)X Y
{ 
return 
Result 
< 
Doctor $
>$ %
.% &
Failure& -
(- .
$str. Q
+R S
specializationT b
)b c
;c d
} 
Doctor 
doctor 
= 
new 
(  
)  !
{ 
Id 
= 
Guid 
. 
NewGuid !
(! "
)" #
,# $
Name 
= 
name 
, 
Surname 
= 
surname !
,! "
Age   
=   
age   
,   
Gender!! 
=!! 
genderResult!! %
,!!% &
EmailAddress"" 
="" 
emailAddress"" +
,""+ ,
PhoneNumber## 
=## 
phoneNumber## )
,##) *
HomeAddress$$ 
=$$ 
homeAddress$$ )
,$$) *

Speciality%% 
=%%  
specializationResult%% 1
,%%1 2
Appointments&& 
=&& 
new&& "
List&&# '
<&&' (
Appointment&&( 3
>&&3 4
(&&4 5
)&&5 6
}'' 
;'' 
return(( 
Result(( 
<(( 
Doctor((  
>((  !
.((! "
Success((" )
((() *
doctor((* 0
)((0 1
;((1 2
})) 	
public++ 
Result++ 
AddAppointment++ $
(++$ %
Appointment++% 0
appointment++1 <
)++< =
{,, 	
if-- 
(-- 
appointment-- 
==-- 
null-- #
)--# $
{.. 
return// 
Result// 
.// 
Failure// %
(//% &
$str//& C
)//C D
;//D E
}00 
if22 
(22 
Appointments22 
==22 
null22  $
)22$ %
{33 
return44 
Result44 
.44 
Failure44 %
(44% &
$str44& 5
)445 6
;446 7
}55 
Appointments77 
.77 
Add77 
(77 
appointment77 (
)77( )
;77) *
return88 
Result88 
.88 
Success88 !
(88! "
)88" #
;88# $
}99 	
}:: 
};; ­)
]C:\Users\Ovidiu\source\repos\MyDocAppointmentRight\MyDocAppointment.Business\Users\Patient.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $
Users$ )
{ 
public 

class 
Patient 
: 
Person !
{ 
public 
List 
< 
Appointment 
>  
?  !
Appointments" .
{/ 0
get1 4
;4 5
private6 =
set> A
;A B
}C D
public		 
List		 
<		 
	Diagnosis		 
>		 
?		 
	Diagnosis		  )
{		* +
get		, /
;		/ 0
private		1 8
set		9 <
;		< =
}		> ?
public 
static 
Result 
< 
Patient $
>$ %
Create& ,
(, -
string- 3
name4 8
,8 9
string: @
surnameA H
,H I
intJ M
ageN Q
,Q R
stringS Y
genderZ `
,` a
string 
emailAddress 
,  
string! '
phoneNumber( 3
,3 4
string5 ;
homeAddress< G
)G H
{ 	
PersonGender 
genderResult %
;% &
if 
( 
! 
Enum 
. 
TryParse 
< 
PersonGender +
>+ ,
(, -
gender- 3
,3 4
out5 8
genderResult9 E
)E F
)F G
{ 
return 
Result 
< 
Patient %
>% &
.& '
Failure' .
(. /
$str/ J
+K L
genderM S
)S T
;T U
} 
Patient 
patient 
= 
new !
(! "
)" #
{ 
Id 
= 
Guid 
. 
NewGuid !
(! "
)" #
,# $
Name 
= 
name 
, 
Surname 
= 
surname !
,! "
Age 
= 
age 
, 
Gender 
= 
genderResult %
,% &
EmailAddress 
= 
emailAddress +
,+ ,
PhoneNumber 
= 
phoneNumber )
,) *
HomeAddress 
= 
homeAddress )
,) *
Appointments 
= 
new "
List# '
<' (
Appointment( 3
>3 4
(4 5
)5 6
,6 7
	Diagnosis   
=   
new   
List    $
<  $ %
	Diagnosis  % .
>  . /
(  / 0
)  0 1
}!! 
;!! 
return"" 
Result"" 
<"" 
Patient"" !
>""! "
.""" #
Success""# *
(""* +
patient""+ 2
)""2 3
;""3 4
}## 	
public%% 
Result%% 
AddAppointment%% $
(%%$ %
Appointment%%% 0
appointment%%1 <
)%%< =
{&& 	
if'' 
('' 
appointment'' 
=='' 
null'' #
)''# $
{(( 
return)) 
Result)) 
.)) 
Failure)) %
())% &
$str))& C
)))C D
;))D E
}** 
if,, 
(,, 
Appointments,, 
==,, 
null,, #
),,# $
{-- 
return.. 
Result.. 
... 
Failure.. %
(..% &
$str..& 5
)..5 6
;..6 7
}// 
Appointments11 
.11 
Add11 
(11 
appointment11 (
)11( )
;11) *
return22 
Result22 
.22 
Success22 !
(22! "
)22" #
;22# $
}33 	
public55 
Result55 
AddDiagnosis55 "
(55" #
	Diagnosis55# ,
	diagnosis55- 6
)556 7
{66 	
if77 
(77 
	diagnosis77 
==77 
null77 !
)77! "
{88 
return99 
Result99 
.99 
Failure99 %
(99% &
$str99& A
)99A B
;99B C
}:: 
if<< 
(<< 
	Diagnosis<< 
==<< 
null<< !
)<<! "
{== 
return>> 
Result>> 
.>> 
Failure>> %
(>>% &
$str>>& 5
)>>5 6
;>>6 7
}?? 
	DiagnosisAA 
.AA 
AddAA 
(AA 
	diagnosisAA #
)AA# $
;AA$ %
returnBB 
ResultBB 
.BB 
SuccessBB !
(BB! "
)BB" #
;BB# $
}CC 	
}DD 
}EE Þ
\C:\Users\Ovidiu\source\repos\MyDocAppointmentRight\MyDocAppointment.Business\Users\Person.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $
Users$ )
{ 
public 

abstract 
class 
Person  
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
public		 
string		 
Surname		 
{		 
get		  #
;		# $
set		% (
;		( )
}		* +
=		, -
string		. 4
.		4 5
Empty		5 :
;		: ;
public

 
int

 
Age

 
{

 
get

 
;

 
set

 !
;

! "
}

# $
public 
PersonGender 
Gender "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
EmailAddress "
{# $
get% (
;( )
set* -
;- .
}/ 0
=1 2
string3 9
.9 :
Empty: ?
;? @
public 
string 
PhoneNumber !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
string2 8
.8 9
Empty9 >
;> ?
public 
string 
HomeAddress !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
string2 8
.8 9
Empty9 >
;> ?
} 
} 