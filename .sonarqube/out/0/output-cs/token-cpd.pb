æ
KE:\repo2\MyDocAppointment\MyDocAppointment.Business\Helpers\DiscountType.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $
Helpers$ +
{ 
public 

enum 
DiscountType 
{ 

percentage 
= 
$num 
, 
amount 
= 
$num 
} 
} ∏
LE:\repo2\MyDocAppointment\MyDocAppointment.Business\Helpers\PaymentMethod.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $
Helpers$ +
{ 
public 

enum 
PaymentMethod 
{ 
Card 
= 
$num 
, 
Cash 
= 
$num 
} 
} ˚
KE:\repo2\MyDocAppointment\MyDocAppointment.Business\Helpers\PersonGender.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $
Helpers$ +
{ 
public 	
enum
 
PersonGender 
{ 
Male 
= 
$num 
, 
Female 
= 
$num 
, 
Other 
= 
$num 
} 
}		 Ÿ
EE:\repo2\MyDocAppointment\MyDocAppointment.Business\Helpers\Result.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $
Helpers$ +
{ 
public 

class 
Result 
{ 
public 
string 
Error 
{ 
get !
;! "
private# *
set+ .
;. /
}0 1
=2 3
string4 :
.: ;
Empty; @
;@ A
public 
bool 
	IsSuccess 
{ 
get  #
;# $
private% ,
set- 0
;0 1
}2 3
public 
bool 
	IsFailure 
{ 
get  #
;# $
private% ,
set- 0
;0 1
}2 3
public		 
static		 
Result		 
Success		 $
(		$ %
)		% &
{

 	
return 
new 
Result 
{ 
	IsSuccess 
= 
true  
} 
; 
} 	
public 
static 
Result 
Failure $
($ %
string% +
error, 1
)1 2
{ 	
return 
new 
Result 
{ 
Error 
= 
error 
, 
	IsFailure 
= 
true  
} 
; 
} 	
} 
} ˘
ME:\repo2\MyDocAppointment\MyDocAppointment.Business\Helpers\ResultOfEntity.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $
Helpers$ +
{ 
public 

class 
Result 
< 
TEntity 
>  
{ 
public 
TEntity 
? 
Entity 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Error 
{ 
get !
;! "
private# *
set+ .
;. /
}0 1
=2 3
string4 :
.: ;
Empty; @
;@ A
public 
bool 
	IsSuccess 
{ 
get  #
;# $
private% ,
set- 0
;0 1
}2 3
public		 
bool		 
	IsFailure		 
{		 
get		  #
;		# $
private		% ,
set		- 0
;		0 1
}		2 3
public 
static 
Result 
< 
TEntity $
>$ %
Success& -
(- .
TEntity. 5
entity6 <
)< =
{ 	
return 
new 
Result 
< 
TEntity %
>% &
{ 
Entity 
= 
entity 
,  
	IsSuccess 
= 
true  
} 
; 
} 	
public 
static 
Result 
< 
TEntity $
>$ %
Failure& -
(- .
string. 4
error5 :
): ;
{ 	
return 
new 
Result 
< 
TEntity %
>% &
{ 
Error 
= 
error 
, 
	IsFailure 
= 
true  
} 
; 
} 	
} 
} ç
ME:\repo2\MyDocAppointment\MyDocAppointment.Business\Helpers\Specialization.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $
Helpers$ +
{ 
public 

enum 
Specialization 
{ 

Cardiology 
= 
$num 
, 
	Neurology 
= 
$num 
, 
	Radiology 
= 
$num 
, 

Pediatrics 
= 
$num 
, 
Otorhinolaryngology		 
=		 
$num		 
,		  
Orthopedics

 
=

 
$num

 
,

 

Psychiatry 
= 
$num 
, 
Dermatology 
= 
$num 
, 
Urology 
= 
$num 
, 
Gynaecology 
= 
$num 
} 
} ¡
YE:\repo2\MyDocAppointment\MyDocAppointment.Business\Interfaces\IAppointmentsRepository.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $

Interfaces$ .
{ 
public 

	interface #
IAppointmentsRepository ,
{ 
Task 
Create 
( 
Appointment 
appointment  +
)+ ,
;, -
Task 
Delete 
( 
Appointment 
appointment  +
)+ ,
;, -
Task		 
SaveChanges		 
(		 
)		 
;		 
Task

 
<

 
IEnumerable

 
<

 
Appointment

 $
>

$ %
>

% &
GetAll

' -
(

- .
)

. /
;

/ 0
Task 
< 
Appointment 
? 
> 
GetById "
(" #
Guid# '
id( *
)* +
;+ ,
} 
} —
VE:\repo2\MyDocAppointment\MyDocAppointment.Business\Interfaces\IAppointmentsService.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $

Interfaces$ .
{ 
public 

	interface  
IAppointmentsService )
{ 
Task 
Create 
( 
Appointment 
appointment  +
)+ ,
;, -
Task		 
<		 
Result		 
>		 
Delete		 
(		 
Guid		  
id		! #
)		# $
;		$ %
Task

 
SaveChanges

 
(

 
)

 
;

 
Task 
< 
Result 
< 
IEnumerable 
<  
Appointment  +
>+ ,
>, -
>- .
GetAll/ 5
(5 6
)6 7
;7 8
Task 
< 
Result 
< 
Appointment 
>  
>  !
GetById" )
() *
Guid* .
id/ 1
)1 2
;2 3
Task 
< 
Result 
< 
Appointment 
>  
>  !
Update" (
(( )
Appointment) 4
appointment5 @
,@ A
GuidB F
idG I
)I J
;J K
} 
} »	
TE:\repo2\MyDocAppointment\MyDocAppointment.Business\Interfaces\IDoctorsRepository.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $

Interfaces$ .
{ 
public 

	interface 
IDoctorsRepository '
{ 
Task 
Create 
( 
Doctor 
doctor !
)! "
;" #
Task 
< 
Doctor 
> 
AddAsync 
( 
Doctor $
doctor% +
)+ ,
;, -
Task		 
Delete		 
(		 
Doctor		 
doctor		 !
)		! "
;		" #
Task

 
SaveChanges

 
(

 
)

 
;

 
Task 
< 
IEnumerable 
< 
Doctor 
>  
>  !
GetAll" (
(( )
)) *
;* +
Task 
< 
Doctor 
? 
> 
GetById 
( 
Guid "
id# %
)% &
;& '
} 
} ™
QE:\repo2\MyDocAppointment\MyDocAppointment.Business\Interfaces\IDoctorsService.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $

Interfaces$ .
{ 
public 

	interface 
IDoctorsService $
{ 
Task 
Create 
( 
Doctor 
doctor !
)! "
;" #
Task		 
<		 
Result		 
>		 
Delete		 
(		 
Guid		  
id		! #
)		# $
;		$ %
Task

 
SaveChanges

 
(

 
)

 
;

 
Task 
< 
Result 
< 
IEnumerable 
<  
Doctor  &
>& '
>' (
>( )
GetAll* 0
(0 1
)1 2
;2 3
Task 
< 
Result 
< 
Doctor 
> 
> 
GetById $
($ %
Guid% )
id* ,
), -
;- .
Task 
< 
Result 
< 
Doctor 
> 
> 
Update #
(# $
Doctor$ *
doctor+ 1
,1 2
Guid3 7
doctorId8 @
)@ A
;A B
} 
} â
RE:\repo2\MyDocAppointment\MyDocAppointment.Business\Interfaces\IDrugsRepository.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $

Interfaces$ .
{ 
public 

	interface 
IDrugsRepository %
{ 
Task 
Create 
( 
Drug 
drug 
) 
; 
Task 
Delete 
( 
Drug 
drug 
) 
; 
Task		 
SaveChanges		 
(		 
)		 
;		 
Task

 
<

 
IEnumerable

 
<

 
Drug

 
>

 
>

 
GetAll

  &
(

& '
)

' (
;

( )
Task 
< 
Drug 
? 
> 
GetById 
( 
Guid  
id! #
)# $
;$ %
} 
} ñ
OE:\repo2\MyDocAppointment\MyDocAppointment.Business\Interfaces\IDrugsService.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $

Interfaces$ .
{ 
public 

	interface 
IDrugsService "
{ 
Task 
Create 
( 
Drug 
drug 
) 
; 
Task		 
<		 
Result		 
>		 
Delete		 
(		 
Guid		  
id		! #
)		# $
;		$ %
Task

 
SaveChanges

 
(

 
)

 
;

 
Task 
< 
Result 
< 
IEnumerable 
<  
Drug  $
>$ %
>% &
>& '
GetAll( .
(. /
)/ 0
;0 1
Task 
< 
Result 
< 
Drug 
> 
> 
GetById "
(" #
Guid# '
id( *
)* +
;+ ,
Task 
< 
Result 
< 
Drug 
> 
> 
Update !
(! "
Drug" &
drug' +
,+ ,
Guid- 1
drugId2 8
)8 9
;9 :
} 
} ì
WE:\repo2\MyDocAppointment\MyDocAppointment.Business\Interfaces\IDrugStocksRepository.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $

Interfaces$ .
{ 
public 

	interface !
IDrugEntrysRepository *
{ 
Task 
< 
	DrugEntry 
> 
AddAsync  
(  !
	DrugEntry! *
	drugStock+ 4
)4 5
;5 6
Task 
< 
IEnumerable 
< 
	DrugEntry "
>" #
># $
GetAll% +
(+ ,
), -
;- .
Task		 
<		 
	DrugEntry		 
>		 
?		 
GetDrug		  
(		  !
Guid		! %
drugId		& ,
)		, -
;		- .
}

 
} °
UE:\repo2\MyDocAppointment\MyDocAppointment.Business\Interfaces\IPatientsRepository.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $

Interfaces$ .
{ 
public 

	interface 
IPatientsRepository (
{ 
Task 
Create 
( 
Patient 
patient #
)# $
;$ %
Task 
Delete 
( 
Patient 
patient #
)# $
;$ %
Task		 
SaveChanges		 
(		 
)		 
;		 
Task

 
<

 
IEnumerable

 
<

 
Patient

  
>

  !
>

! "
GetAll

# )
(

) *
)

* +
;

+ ,
Task 
< 
Patient 
? 
> 
GetById 
( 
Guid #
id$ &
)& '
;' (
} 
} ¥
RE:\repo2\MyDocAppointment\MyDocAppointment.Business\Interfaces\IPatientsService.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $

Interfaces$ .
{ 
public 

	interface 
IPatientsService %
{ 
Task 
Create 
( 
Patient 
patient #
)# $
;$ %
Task		 
<		 
Result		 
>		 
Delete		 
(		 
Guid		  
id		! #
)		# $
;		$ %
Task

 
SaveChanges

 
(

 
)

 
;

 
Task 
< 
Result 
< 
IEnumerable 
<  
Patient  '
>' (
>( )
>) *
GetAll+ 1
(1 2
)2 3
;3 4
Task 
< 
Result 
< 
Patient 
> 
> 
GetById %
(% &
Guid& *
id+ -
)- .
;. /
Task 
< 
Result 
< 
Patient 
> 
> 
Update $
($ %
Patient% ,
patient- 4
,4 5
Guid6 :
	patientId; D
)D E
;E F
} 
} ˆ
UE:\repo2\MyDocAppointment\MyDocAppointment.Business\Logistics\External\Appointment.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $
	Logistics$ -
.- .
External. 6
{ 
public 

class 
Appointment 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public		 
Payment		 
Payment		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
=		- .
new		/ 2
Payment		3 :
(		: ;
)		; <
;		< =
public

 
string

 
Location

 
{

  
get

! $
;

$ %
set

& )
;

) *
}

+ ,
=

- .
string

/ 5
.

5 6
Empty

6 ;
;

; <
public 
Guid 
	PatientID 
{ 
get  #
;# $
set% (
;( )
}* +
public 
Guid 
DoctorID 
{ 
get "
;" #
set$ '
;' (
}) *
public 
Specialization 
Specialization ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
public 
DateTime 
AppointmentTime '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
virtual 
Doctor 
? 
Doctor %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
virtual 
Patient 
? 
Patient  '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
} 
} çO
SE:\repo2\MyDocAppointment\MyDocAppointment.Business\Logistics\External\Diagnosis.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $
	Logistics$ -
.- .
External. 6
{ 
public 

class 
	Diagnosis 
{ 
public		 
Guid		 
Id		 
{		 
get		 
;		 
set		 !
;		! "
}		# $
public

 
string

 
Name

 
{

 
get

  
;

  !
private

" )
set

* -
;

- .
}

/ 0
=

1 2
string

3 9
.

9 :
Empty

: ?
;

? @
public 
string 
Description !
{" #
get$ '
;' (
private) 0
set1 4
;4 5
}6 7
=8 9
string: @
.@ A
EmptyA F
;F G
public 
DateTime 
DiagnosisDate %
{& '
get( +
;+ ,
private- 4
set5 8
;8 9
}: ;
public 
List 
< 
Observation 
>  
?  !
Observations" .
{/ 0
get1 4
;4 5
private6 =
set> A
;A B
}C D
=E F
newG J
ListK O
<O P
ObservationP [
>[ \
(\ ]
)] ^
;^ _
public 
Guid 
	PatientId 
{ 
get  #
;# $
private% ,
set- 0
;0 1
}2 3
public 
static 
Result 
< 
	Diagnosis &
>& '
Create( .
(. /
string/ 5
name6 :
,: ;
string< B
descriptionC N
,N O
stringP V
diagnosisDateW d
)d e
{ 	
DateTime 

timeResult 
;  
try 
{ 

timeResult 
= 
DateTime %
.% &
Parse& +
(+ ,
diagnosisDate, 9
)9 :
;: ;
} 
catch 
( 
	Exception 
ex 
) 
{ 
return 
Result 
< 
	Diagnosis '
>' (
.( )
Failure) 0
(0 1
$"1 3
$str3 I
{I J
diagnosisDateJ W
}W X
$strX \
"\ ]
+^ _
ex` b
.b c
Messagec j
)j k
;k l
} 
	Diagnosis 
	diagnosis 
=  !
new" %
(% &
)& '
{ 
Id 
= 
Guid 
. 
NewGuid !
(! "
)" #
,# $
Name   
=   
name   
,   
Description!! 
=!! 
description!! )
,!!) *
DiagnosisDate"" 
="" 

timeResult""  *
}## 
;## 
return$$ 
Result$$ 
<$$ 
	Diagnosis$$ #
>$$# $
.$$$ %
Success$$% ,
($$, -
	diagnosis$$- 6
)$$6 7
;$$7 8
}&& 	
public(( 
Result(( 
AddObservation(( $
((($ %
string((% +
date((, 0
,((0 1
string((2 8
description((9 D
)((D E
{)) 	
if** 
(** 
Observations** 
==** 
null** #
)**# $
{++ 
return,, 
Result,, 
.,, 
Failure,, %
(,,% &
$str,,& 2
),,2 3
;,,3 4
}-- 
Observation// 
?// 
entity// 
=//  !
Observation//" -
.//- .
Create//. 4
(//4 5
date//5 9
,//9 :
description//; F
)//F G
.//G H
Entity//H N
;//N O
if00 
(00 
entity00 
==00 
null00 
)00 
{11 
return22 
Result22 
.22 
Failure22 %
(22% &
$str22& 5
)225 6
;226 7
}33 
Observations44 
.44 
Add44 
(44 
entity44 #
)44# $
;44$ %
return55 
Result55 
.55 
Success55 !
(55! "
)55" #
;55# $
}66 	
public88 
Result88 
DeleteObservation88 '
(88' (
int88( +
id88, .
)88. /
{99 	
if:: 
(:: 
Observations:: 
==:: 
null::  $
)::$ %
{;; 
return<< 
Result<< 
.<< 
Failure<< %
(<<% &
$str<<& 2
)<<2 3
;<<3 4
}== 
if>> 
(>> 
Observations>> 
.>> 
Count>> #
>>>$ %
id>>& (
)>>( )
{?? 
Observations@@ 
.@@ 
RemoveAt@@ &
(@@& '
id@@' )
)@@) *
;@@* +
returnAA 
ResultAA 
.AA 
SuccessAA %
(AA% &
)AA& '
;AA' (
}BB 
returnCC 
ResultCC 
.CC 
FailureCC !
(CC! "
$strCC" K
)CCK L
;CCL M
}DD 	
publicFF 
ResultFF 
ModifyObservationFF '
(FF' (
intFF( +
idFF, .
,FF. /
stringFF0 6
dateFF7 ;
,FF; <
stringFF= C
descriptionFFD O
)FFO P
{GG 	
ifHH 
(HH 
ObservationsHH 
==HH 
nullHH  $
)HH$ %
{II 
returnJJ 
ResultJJ 
.JJ 
FailureJJ %
(JJ% &
$strJJ& 2
)JJ2 3
;JJ3 4
}KK 
ifNN 
(NN 
ObservationsNN 
.NN 
CountNN #
>NN$ %
idNN& (
)NN( )
{OO 
ObservationPP 
?PP 
entityPP #
=PP$ %
ObservationPP& 1
.PP1 2
CreatePP2 8
(PP8 9
datePP9 =
,PP= >
descriptionPP? J
)PPJ K
.PPK L
EntityPPL R
;PPR S
ifQQ 
(QQ 
entityQQ 
==QQ 
nullQQ !
)QQ! "
{RR 
returnSS 
ResultSS !
.SS! "
FailureSS" )
(SS) *
$strSS* 9
)SS9 :
;SS: ;
}TT 
ObservationsUU 
[UU 
idUU 
]UU  
=UU! "
entityUU# )
;UU) *
returnVV 
ResultVV 
.VV 
SuccessVV %
(VV% &
)VV& '
;VV' (
}WW 
returnXX 
ResultXX 
.XX 
FailureXX !
(XX! "
$strXX" K
)XXK L
;XXL M
}YY 	
public[[ 
Result[[ 
AssignToPatient[[ %
([[% &
Patient[[& -
patient[[. 5
)[[5 6
{\\ 	
if]] 
(]] 
patient]] 
==]] 
null]] 
)]] 
{^^ 
return__ 
Result__ 
.__ 
Failure__ %
(__% &
$str__& ?
)__? @
;__@ A
}`` 
	PatientIdbb 
=bb 
patientbb 
.bb  
Idbb  "
;bb" #
patientcc 
.cc 
AddDiagnosiscc  
(cc  !
thiscc! %
)cc% &
;cc& '
returndd 
Resultdd 
.dd 
Successdd !
(dd! "
)dd" #
;dd# $
}ee 	
publicgg 
Resultgg 
Modifygg 
(gg 
stringgg #
?gg# $
namegg% )
=gg* +
nullgg, 0
,gg0 1
stringgg2 8
?gg8 9
descriptiongg: E
=ggF G
nullggH L
,ggL M
stringggN T
?ggT U
diagnosisDateggV c
=ggd e
nullggf j
)ggj k
{hh 	
ifii 
(ii 
nameii 
!=ii 
nullii 
)ii 
{jj 
Namekk 
=kk 
namekk 
;kk 
}ll 
ifnn 
(nn 
descriptionnn 
!=nn 
nullnn "
)nn" #
{oo 
Descriptionpp 
=pp 
descriptionpp )
;pp) *
}qq 
ifss 
(ss 
diagnosisDatess 
!=ss 
nullss  $
)ss$ %
{tt 
DateTimeuu 

timeResultuu #
;uu# $
tryww 
{xx 

timeResultyy 
=yy  
DateTimeyy! )
.yy) *
Parseyy* /
(yy/ 0
diagnosisDateyy0 =
)yy= >
;yy> ?
}zz 
catch{{ 
({{ 
	Exception{{  
ex{{! #
){{# $
{|| 
return}} 
Result}} !
.}}! "
Failure}}" )
(}}) *
$"}}* ,
$str}}, B
{}}B C
diagnosisDate}}C P
}}}P Q
$str}}Q U
"}}U V
+}}W X
ex}}Y [
.}}[ \
Message}}\ c
)}}c d
;}}d e
}~~ 
} 
return
ÅÅ 
Result
ÅÅ 
.
ÅÅ 
Success
ÅÅ !
(
ÅÅ! "
)
ÅÅ" #
;
ÅÅ# $
}
ÇÇ 	
}
ÉÉ 
}ÑÑ Œ
UE:\repo2\MyDocAppointment\MyDocAppointment.Business\Logistics\External\Observation.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $
	Logistics$ -
.- .
External. 6
{ 
public 

class 
Observation 
{ 
public 
Guid 
Id 
{ 
get 
; 
private %
set& )
;) *
}+ ,
public		 
DateTime		 
Date		 
{		 
get		 "
;		" #
private		$ +
set		, /
;		/ 0
}		1 2
public

 
string

 
Description

 !
{

" #
get

$ '
;

' (
private

) 0
set

1 4
;

4 5
}

6 7
=

8 9
string

: @
.

@ A
Empty

A F
;

F G
public 
static 
Result 
< 
Observation (
>( )
Create* 0
(0 1
string1 7
date8 <
,< =
string> D
descriptionE P
)P Q
{ 	
DateTime 

timeResult 
;  
try 
{ 

timeResult 
= 
DateTime %
.% &
Parse& +
(+ ,
date, 0
)0 1
;1 2
} 
catch 
( 
	Exception 
ex 
)  
{ 
return 
Result 
< 
Observation )
>) *
.* +
Failure+ 2
(2 3
$"3 5
$str5 K
{K L
dateL P
}P Q
$strQ U
"U V
+W X
exY [
.[ \
Message\ c
)c d
;d e
} 
Observation 
observation #
=$ %
new& )
() *
)* +
{ 
Id 
= 
Guid 
. 
NewGuid !
(! "
)" #
,# $
Date 
= 

timeResult !
,! "
Description 
= 
description )
} 
; 
return 
Result 
< 
Observation %
>% &
.& '
Success' .
(. /
observation/ :
): ;
;; <
}   	
}!! 
}"" ¢

QE:\repo2\MyDocAppointment\MyDocAppointment.Business\Logistics\External\Payment.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $
	Logistics$ -
.- .
External. 6
{ 
public 

class 
Payment 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
double 
Amount 
{ 
get "
;" #
set$ '
;' (
}) *
public		 
PaymentMethod		 
PaymentMethod		 *
{		+ ,
get		- 0
;		0 1
set		2 5
;		5 6
}		7 8
public

 
DateTime

 
DueDate

 
{

  !
get

" %
;

% &
set

' *
;

* +
}

, -
public 
DateTime 
EmissionDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
DateTime 
AcquittedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
} 
} ›
NE:\repo2\MyDocAppointment\MyDocAppointment.Business\Logistics\Internal\Drug.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $
	Logistics$ -
.- .
Internal. 6
{ 
public 

class 
Drug 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}" #
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
public		 
string		 
Vendor		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
=		+ ,
string		- 3
.		3 4
Empty		4 9
;		9 :
public

 
decimal

 
Price

 
{

 
get

 "
;

" #
set

$ '
;

' (
}

( )
public 
string 
Category 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
string/ 5
.5 6
Empty6 ;
;; <
public 
static 
Result 
< 
Drug !
>! "
Create# )
() *
string* 0
name1 5
,5 6
string7 =
vendor> D
,D E
decimalF M
priceN S
,S T
stringU [
category\ d
)d e
{ 	
if 
( 
price 
< 
$num 
) 
{ 
return 
Result 
< 
Drug "
>" #
.# $
Failure$ +
(+ ,
$str, A
)A B
;B C
} 
Drug 
drug 
= 
new 
Drug  
{ 
Id 
= 
Guid 
. 
NewGuid !
(! "
)" #
,# $
Name 
= 
name 
, 
Vendor 
= 
vendor 
,  
Price 
= 
price 
, 
Category 
= 
category #
} 
; 
return 
Result 
< 
Drug 
> 
.  
Success  '
(' (
drug( ,
), -
;- .
} 	
public   
Result   
ChangePrice   !
(  ! "
decimal  " )
newPrice  * 2
)  2 3
{  3 4
if!! 
(!! 
newPrice!! 
<!! 
$num!! 
)!! 
{"" 
return## 
Result## 
.## 
Failure## %
(##% &
$str##& C
)##C D
;##D E
}$$ 
Price&& 
=&& 
newPrice&& 
;&& 
return'' 
Result'' 
.'' 
Success'' !
(''! "
)''" #
;''# $
}(( 	
})) 
}** ˘
SE:\repo2\MyDocAppointment\MyDocAppointment.Business\Logistics\Internal\DrugEntry.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $
	Logistics$ -
.- .
Internal. 6
{ 
public 

class 
	DrugEntry 
{ 
public 
Guid 
Id 
{ 
get 
; 
private %
set& )
;) *
}+ ,
public 
Drug 
Drug 
{ 
get 
; 
private  '
set( +
;+ ,
}- .
=/ 0
new1 4
Drug5 9
(9 :
): ;
;; <
public		 
int		 
Quantity		 
{		 
get		 !
;		! "
private		# *
set		+ .
;		. /
}		0 1
public

 
DateTime

 
ExpirationDate

 &
{

' (
get

) ,
;

, -
private

. 5
set

6 9
;

9 :
}

; <
public 
static 
Result 
< 
	DrugEntry &
>& '
Create( .
(. /
Drug/ 3
drug4 8
,8 9
int: =
quantity> F
,F G
DateTimeH P
expirationDateQ _
)_ `
{ 	
if 
( 
quantity 
< 
$num 
) 
{ 
return 
Result 
< 
	DrugEntry '
>' (
.( )
Failure) 0
(0 1
$str1 O
)O P
;P Q
} 
	DrugEntry 
	drugEntry 
=  !
new" %
	DrugEntry& /
(/ 0
)0 1
{ 
Id 
= 
Guid 
. 
NewGuid !
(! "
)" #
,# $
Drug 
= 
drug 
, 
Quantity 
= 
quantity #
,# $
ExpirationDate 
=  
expirationDate! /
} 
; 
return 
Result 
< 
	DrugEntry #
># $
.$ %
Success% ,
(, -
	drugEntry- 6
)6 7
;7 8
} 	
public 
Result 
IncreaseQuantity &
(& '
int' *
quantity+ 3
)3 4
{ 	
if   
(   
quantity   
<   
$num   
)   
{!! 
return"" 
Result"" 
."" 
Failure"" %
(""% &
$str""& =
)""= >
;""> ?
}## 
Quantity%% 
+=%% 
quantity%%  
;%%  !
return&& 
Result&& 
.&& 
Success&& !
(&&! "
)&&" #
;&&# $
}'' 	
public)) 
Result)) 
DecreaseQuantity)) &
())& '
int))' *
quantity))+ 3
)))3 4
{** 	
if++ 
(++ 
quantity++ 
<++ 
$num++ 
)++ 
{,, 
return-- 
Result-- 
.-- 
Failure-- %
(--% &
$str--& C
)--C D
;--D E
}.. 
if00 
(00 
Quantity00 
<00 
quantity00 #
)00# $
{11 
return22 
Result22 
.22 
Failure22 %
(22% &
$str22& C
)22C D
;22D E
}33 
Quantity55 
-=55 
quantity55  
;55  !
return77 
Result77 
.77 
Success77 !
(77! "
)77" #
;77# $
}88 	
}99 
}:: ∂!
QE:\repo2\MyDocAppointment\MyDocAppointment.Business\Logistics\Internal\Storage.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $
	Logistics$ -
.- .
Internal. 6
{ 
public 

class 
Storage 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
List 
< 
	DrugEntry 
> 
? 
	Inventory  )
{* +
get, /
;/ 0
private1 8
set9 <
;< =
}> ?
public

 
static

 
Result

 
<

 
Storage

 $
>

$ %
Create

& ,
(

, -
)

- .
{ 	
Storage 
storage 
= 
new !
Storage" )
() *
)* +
{ 
Id 
= 
Guid 
. 
NewGuid !
(! "
)" #
,# $
	Inventory 
= 
new 
List  $
<$ %
	DrugEntry% .
>. /
(/ 0
)0 1
} 
; 
return 
Result 
< 
Storage !
>! "
." #
Success# *
(* +
storage+ 2
)2 3
;3 4
} 	
public 
Result 
RemoveEntry !
(! "
Guid" &
drugId' -
)- .
{. /
if 
( 
	Inventory 
== 
null  
)  !
{ 
return 
Result 
. 
Failure %
(% &
$str& 2
)2 3
;3 4
} 
int 
index 
= 
	Inventory !
.! "
	FindIndex" +
(+ ,
i, -
=>. 0
i1 2
.2 3
Drug3 7
.7 8
Id8 :
==; =
drugId> D
)D E
;E F
if 
( 
index 
== 
- 
$num 
) 
{ 
return 
Result 
. 
Failure %
(% &
$str& B
)B C
;C D
} 
	Inventory   
.   
RemoveAt   
(   
index   $
)  $ %
;  % &
return!! 
Result!! 
.!! 
Success!! !
(!!! "
)!!" #
;!!# $
}"" 	
public$$ 
Result$$ 
AddEntry$$ 
($$ 
Drug$$ #
drug$$$ (
,$$( )
int$$* -
quantity$$. 6
,$$6 7
DateTime$$8 @
expirationDate$$A O
)$$O P
{%% 	
if&& 
(&& 
	Inventory&& 
==&& 
null&& !
)&&! "
{'' 
return(( 
Result(( 
.(( 
Failure(( %
(((% &
$str((& 2
)((2 3
;((3 4
})) 
var** 
result** 
=** 
	DrugEntry** "
.**" #
Create**# )
(**) *
drug*** .
,**. /
quantity**0 8
,**8 9
expirationDate**: H
)**H I
;**I J
if,, 
(,, 
result,, 
.,, 
Entity,, 
==,, 
null,,  $
),,$ %
{-- 
return.. 
Result.. 
... 
Failure.. %
(..% &
result..& ,
..., -
Error..- 2
)..2 3
;..3 4
}// 
	Inventory11 
.11 
Add11 
(11 
result11  
.11  !
Entity11! '
)11' (
;11( )
return22 
Result22 
.22 
Success22 !
(22! "
)22" #
;22# $
}33 	
}44 
}55 “%
CE:\repo2\MyDocAppointment\MyDocAppointment.Business\Users\Doctor.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $
Users$ )
{ 
public 

class 
Doctor 
: 
Person  
{ 
public 
Specialization 

Speciality (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public		 
List		 
<		 
Appointment		 
>		  
?		  !
Appointments		" .
{		/ 0
get		1 4
;		4 5
set		6 9
;		9 :
}		; <
public 
static 
Result 
< 
Doctor #
># $
Create% +
(+ ,
string, 2
name3 7
,7 8
string9 ?
surname@ G
,G H
intI L
ageM P
,P Q
stringR X
genderY _
,_ `
string 
emailAddress 
,  
string! '
phoneNumber( 3
,3 4
string5 ;
homeAddress< G
,G H
stringI O
specializationP ^
)^ _
{ 	
PersonGender 
genderResult %
;% &
Specialization  
specializationResult /
;/ 0
if 
( 
! 
Enum 
. 
TryParse 
< 
PersonGender +
>+ ,
(, -
gender- 3
,3 4
out5 8
genderResult9 E
)E F
)F G
{ 
return 
Result 
< 
Doctor $
>$ %
.% &
Failure& -
(- .
$str. I
+J K
genderL R
)R S
;S T
} 
if 
( 
! 
Enum 
. 
TryParse 
< 
Specialization -
>- .
(. /
specialization/ =
,= >
out? B 
specializationResultC W
)W X
)X Y
{ 
return 
Result 
< 
Doctor $
>$ %
.% &
Failure& -
(- .
$str. Q
+R S
specializationT b
)b c
;c d
} 
Doctor 
doctor 
= 
new 
(  
)  !
{ 
Id 
= 
Guid 
. 
NewGuid !
(! "
)" #
,# $
Name 
= 
name 
, 
Surname 
= 
surname !
,! "
Age   
=   
age   
,   
Gender!! 
=!! 
genderResult!! %
,!!% &
EmailAddress"" 
="" 
emailAddress"" +
,""+ ,
PhoneNumber## 
=## 
phoneNumber## )
,##) *
HomeAddress$$ 
=$$ 
homeAddress$$ )
,$$) *

Speciality%% 
=%%  
specializationResult%% 1
,%%1 2
Appointments&& 
=&& 
new&& "
List&&# '
<&&' (
Appointment&&( 3
>&&3 4
(&&4 5
)&&5 6
}'' 
;'' 
return(( 
Result(( 
<(( 
Doctor((  
>((  !
.((! "
Success((" )
((() *
doctor((* 0
)((0 1
;((1 2
})) 	
public++ 
Result++ 
AddAppointment++ $
(++$ %
Appointment++% 0
appointment++1 <
)++< =
{,, 	
if-- 
(-- 
appointment-- 
==-- 
null-- #
)--# $
{.. 
return// 
Result// 
.// 
Failure// %
(//% &
$str//& C
)//C D
;//D E
}00 
if22 
(22 
Appointments22 
==22 
null22  $
)22$ %
{33 
return44 
Result44 
.44 
Failure44 %
(44% &
$str44& 5
)445 6
;446 7
}55 
Appointments77 
.77 
Add77 
(77 
appointment77 (
)77( )
;77) *
return88 
Result88 
.88 
Success88 !
(88! "
)88" #
;88# $
}99 	
}:: 
};; î)
DE:\repo2\MyDocAppointment\MyDocAppointment.Business\Users\Patient.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $
Users$ )
{ 
public 

class 
Patient 
: 
Person !
{ 
public 
List 
< 
Appointment 
>  
?  !
Appointments" .
{/ 0
get1 4
;4 5
private6 =
set> A
;A B
}C D
public		 
List		 
<		 
	Diagnosis		 
>		 
?		 
	Diagnosis		  )
{		* +
get		, /
;		/ 0
private		1 8
set		9 <
;		< =
}		> ?
public 
static 
Result 
< 
Patient $
>$ %
Create& ,
(, -
string- 3
name4 8
,8 9
string: @
surnameA H
,H I
intJ M
ageN Q
,Q R
stringS Y
genderZ `
,` a
string 
emailAddress 
,  
string! '
phoneNumber( 3
,3 4
string5 ;
homeAddress< G
)G H
{ 	
PersonGender 
genderResult %
;% &
if 
( 
! 
Enum 
. 
TryParse 
< 
PersonGender +
>+ ,
(, -
gender- 3
,3 4
out5 8
genderResult9 E
)E F
)F G
{ 
return 
Result 
< 
Patient %
>% &
.& '
Failure' .
(. /
$str/ J
+K L
genderM S
)S T
;T U
} 
Patient 
patient 
= 
new !
(! "
)" #
{ 
Id 
= 
Guid 
. 
NewGuid !
(! "
)" #
,# $
Name 
= 
name 
, 
Surname 
= 
surname !
,! "
Age 
= 
age 
, 
Gender 
= 
genderResult %
,% &
EmailAddress 
= 
emailAddress +
,+ ,
PhoneNumber 
= 
phoneNumber )
,) *
HomeAddress 
= 
homeAddress )
,) *
Appointments 
= 
new "
List# '
<' (
Appointment( 3
>3 4
(4 5
)5 6
,6 7
	Diagnosis   
=   
new   
List    $
<  $ %
	Diagnosis  % .
>  . /
(  / 0
)  0 1
}!! 
;!! 
return"" 
Result"" 
<"" 
Patient"" !
>""! "
.""" #
Success""# *
(""* +
patient""+ 2
)""2 3
;""3 4
}## 	
public%% 
Result%% 
AddAppointment%% $
(%%$ %
Appointment%%% 0
appointment%%1 <
)%%< =
{&& 	
if'' 
('' 
appointment'' 
=='' 
null'' #
)''# $
{(( 
return)) 
Result)) 
.)) 
Failure)) %
())% &
$str))& C
)))C D
;))D E
}** 
if,, 
(,, 
Appointments,, 
==,, 
null,, #
),,# $
{-- 
return.. 
Result.. 
... 
Failure.. %
(..% &
$str..& 5
)..5 6
;..6 7
}// 
Appointments11 
.11 
Add11 
(11 
appointment11 (
)11( )
;11) *
return22 
Result22 
.22 
Success22 !
(22! "
)22" #
;22# $
}33 	
public55 
Result55 
AddDiagnosis55 "
(55" #
	Diagnosis55# ,
	diagnosis55- 6
)556 7
{66 	
if77 
(77 
	diagnosis77 
==77 
null77 !
)77! "
{88 
return99 
Result99 
.99 
Failure99 %
(99% &
$str99& A
)99A B
;99B C
}:: 
if<< 
(<< 
	Diagnosis<< 
==<< 
null<< !
)<<! "
{== 
return>> 
Result>> 
.>> 
Failure>> %
(>>% &
$str>>& 5
)>>5 6
;>>6 7
}?? 
	DiagnosisAA 
.AA 
AddAA 
(AA 
	diagnosisAA #
)AA# $
;AA$ %
returnBB 
ResultBB 
.BB 
SuccessBB !
(BB! "
)BB" #
;BB# $
}CC 	
}DD 
}EE ≈
CE:\repo2\MyDocAppointment\MyDocAppointment.Business\Users\Person.cs
	namespace 	
MyDocAppointment
 
. 
Business #
.# $
Users$ )
{ 
public 

abstract 
class 
Person  
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
public		 
string		 
Surname		 
{		 
get		  #
;		# $
set		% (
;		( )
}		* +
=		, -
string		. 4
.		4 5
Empty		5 :
;		: ;
public

 
int

 
Age

 
{

 
get

 
;

 
set

 !
;

! "
}

# $
public 
PersonGender 
Gender "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
EmailAddress "
{# $
get% (
;( )
set* -
;- .
}/ 0
=1 2
string3 9
.9 :
Empty: ?
;? @
public 
string 
PhoneNumber !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
string2 8
.8 9
Empty9 >
;> ?
public 
string 
HomeAddress !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
string2 8
.8 9
Empty9 >
;> ?
} 
} 