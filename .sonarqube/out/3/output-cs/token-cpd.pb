­
XE:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\ConfigureServices.cs
	namespace 	
MyDocAppointment
 
. 
API 
{ 
public		 

static		 
class		 
ConfigureServices		 )
{

 
public 
static 
IServiceCollection (!
AddControllerServices) >
( 
this 
IServiceCollection $
services% -
)- .
{ 	
services 
. 
	AddScoped 
< 

IValidator )
<) * 
CreateAppointmentDto* >
>> ?
,? @)
CreateAppointmentDtoValidatorA ^
>^ _
(_ `
)` a
;a b
services 
. 
	AddScoped 
< 

IValidator )
<) *
AppointmentDto* 8
>8 9
,9 :#
AppointmentDtoValidator; R
>R S
(S T
)T U
;U V
services 
. 
	AddScoped 
< 

IValidator )
<) *
CreatePatientDto* :
>: ;
,; <%
CreatePatientDtoValidator= V
>V W
(W X
)X Y
;Y Z
services 
. 
	AddScoped 
< 

IValidator )
<) *

PatientDto* 4
>4 5
,5 6
PatientDtoValidator7 J
>J K
(K L
)L M
;M N
services 
. 
	AddScoped 
< 

IValidator )
<) *
CreateDrugDto* 7
>7 8
,8 9"
CreateDrugDtoValidator: P
>P Q
(Q R
)R S
;S T
services 
. 
	AddScoped 
< 

IValidator )
<) *
DrugDto* 1
>1 2
,2 3
DrugDtoValidator4 D
>D E
(E F
)F G
;G H
services 
. -
!AddFluentValidationAutoValidation 6
(6 7
)7 8
;8 9
services 
. %
AddValidatorsFromAssembly .
(. /
Assembly/ 7
.7 8 
GetExecutingAssembly8 L
(L M
)M N
)N O
;O P
services 
. 
AddAutoMapper "
(" #
Assembly# +
.+ , 
GetExecutingAssembly, @
(@ A
)A B
)B C
;C D
services 
. 

AddMediatR 
(  
Assembly  (
.( ) 
GetExecutingAssembly) =
(= >
)> ?
)? @
;@ A
return 
services 
; 
} 	
} 
} …
^E:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\ConfigureSwaggerOptions.cs
	namespace 	
MyDocAppointment
 
. 
API 
{ 
public 

class #
ConfigureSwaggerOptions (
:		 "
IConfigureNamedOptions		 
<		 
SwaggerGenOptions		 .
>		. /
{

 
private 
readonly *
IApiVersionDescriptionProvider 7
	_provider8 A
;A B
public #
ConfigureSwaggerOptions &
(& '*
IApiVersionDescriptionProvider *
provider+ 3
)3 4
{ 	
	_provider 
= 
provider  
;  !
} 	
public 
void 
	Configure 
( 
SwaggerGenOptions /
options0 7
)7 8
{ 	
foreach 
( 
var 
description $
in% '
	_provider( 1
.1 2"
ApiVersionDescriptions2 H
)H I
{ 
options 
. 

SwaggerDoc "
(" #
description 
.  
	GroupName  )
,) *
CreateVersionInfo %
(% &
description& 1
)1 2
)2 3
;3 4
} 
} 	
public 
void 
	Configure 
( 
string $
?$ %
name& *
,* +
SwaggerGenOptions, =
options> E
)E F
{ 	
	Configure 
( 
options 
) 
; 
}   	
private"" 
static"" 
OpenApiInfo"" "
CreateVersionInfo""# 4
(""4 5!
ApiVersionDescription## %
desc##& *
)##* +
{$$ 	
var%% 
info%% 
=%% 
new%% 
OpenApiInfo%% &
(%%& '
)%%' (
{&& 
Title'' 
='' 
$str'' 4
,''4 5
Version(( 
=(( 
desc(( 
.(( 

ApiVersion(( )
.(() *
ToString((* 2
(((2 3
)((3 4
})) 
;)) 
if++ 
(++ 
desc++ 
.++ 
IsDeprecated++ !
)++! "
{,, 
info-- 
.-- 
Description--  
+=--! #
$str	--$ ˆ
;
--ˆ ‰
}.. 
return00 
info00 
;00 
}11 	
}22 
}33 Î;
lE:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Controllers.v2\AppointmentsController.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Controllers *
.* +
v2+ -
{ 
[		 
Route		 

(		
 
$str		 3
)		3 4
]		4 5
[

 
ApiController

 
]

 
[ 

ApiVersion 
( 
$str 
) 
] 
public 

class !
AppointmentController &
:' (
ControllerBase) 7
{ 
private 
readonly  
IAppointmentsService -
_appointmentService. A
;A B
private 
readonly 
IMapper  
_mapper! (
;( )
public !
AppointmentController $
($ % 
IAppointmentsService% 9
appointmentService: L
,L M
IMapperN U
mapperV \
)\ ]
{ 	
_appointmentService 
=  !
appointmentService" 4
;4 5
_mapper 
= 
mapper 
; 
} 	
[ 	
MapToApiVersion	 
( 
$str 
) 
]  
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Get) ,
(, -
)- .
{ 	
var 
response 
= 
await  
_appointmentService! 4
.4 5
GetAll5 ;
(; <
)< =
;= >
if 
( 
! 
response 
. 
	IsSuccess #
)# $
{ 
return 
NotFound 
(  
response  (
.( )
Error) .
). /
;/ 0
} 
var!! 
models!! 
=!! 
_mapper!!  
.!!  !
Map!!! $
<!!$ %
IEnumerable!!% 0
<!!0 1
AppointmentDto!!1 ?
>!!? @
>!!@ A
(!!A B
response!!B J
.!!J K
Entity!!K Q
)!!Q R
;!!R S
return## 
Ok## 
(## 
models## 
)## 
;## 
}$$ 	
[&& 	
MapToApiVersion&&	 
(&& 
$str&& 
)&& 
]&&  
['' 	
HttpPost''	 
]'' 
public(( 
async(( 
Task(( 
<(( 
IActionResult(( '
>((' (
Create(() /
(((/ 0
[((0 1
FromBody((1 9
]((9 : 
CreateAppointmentDto((; O
dto((P S
)((S T
{)) 	
var** 
appointment** 
=** 
_mapper** %
.**% &
Map**& )
<**) *
Appointment*** 5
>**5 6
(**6 7
dto**7 :
)**: ;
;**; <
await++ 
_appointmentService++ %
.++% &
Create++& ,
(++, -
appointment++- 8
)++8 9
;++9 :
return-- 
Created-- 
(-- 
nameof-- !
(--! "
Get--" %
)--% &
,--& '
dto--( +
)--+ ,
;--, -
}.. 	
[00 	
MapToApiVersion00	 
(00 
$str00 
)00 
]00  
[11 	
HttpGet11	 
(11 
$str11 '
)11' (
]11( )
public22 
async22 
Task22 
<22 
IActionResult22 '
>22' (
GetById22) 0
(220 1
Guid221 5
appointmentId226 C
)22C D
{33 	
var44 
response44 
=44 
await44  
_appointmentService44! 4
.444 5
GetById445 <
(44< =
appointmentId44= J
)44J K
;44K L
if55 
(55 
!55 
response55 
.55 
	IsSuccess55 #
)55# $
{66 
return77 
NotFound77 
(77  
response77  (
.77( )
Error77) .
)77. /
;77/ 0
}88 
var:: 
model:: 
=:: 
_mapper:: 
.::  
Map::  #
<::# $
AppointmentDto::$ 2
>::2 3
(::3 4
response::4 <
.::< =
Entity::= C
)::C D
;::D E
return;; 
Ok;; 
(;; 
model;; 
);; 
;;; 
}<< 	
[>> 	
MapToApiVersion>>	 
(>> 
$str>> 
)>> 
]>>  
[?? 	

HttpDelete??	 
(?? 
$str?? *
)??* +
]??+ ,
public@@ 
async@@ 
Task@@ 
<@@ 
IActionResult@@ '
>@@' (
Delete@@) /
(@@/ 0
Guid@@0 4
appointmentId@@5 B
)@@B C
{AA 	
varBB 
responseBB 
=BB 
awaitBB  
_appointmentServiceBB! 4
.BB4 5
DeleteBB5 ;
(BB; <
appointmentIdBB< I
)BBI J
;BBJ K
ifCC 
(CC 
responseCC 
.CC 
	IsSuccessCC "
)CC" #
{DD 
returnEE 
OkEE 
(EE 
)EE 
;EE 
}FF 
returnHH 
NotFoundHH 
(HH 
responseHH $
.HH$ %
ErrorHH% *
)HH* +
;HH+ ,
}II 	
[KK 	
MapToApiVersionKK	 
(KK 
$strKK 
)KK 
]KK  
[LL 	
HttpPutLL	 
(LL 
$strLL '
)LL' (
]LL( )
publicMM 
asyncMM 
TaskMM 
<MM 
IActionResultMM '
>MM' (
UpdateMM) /
(MM/ 0
[MM0 1
FromBodyMM1 9
]MM9 :
AppointmentDtoMM; I
dtoMMJ M
,MMM N
GuidMMO S
appointmentIdMMT a
)MMa b
{NN 	
varOO 
appointmentOO 
=OO 
_mapperOO %
.OO% &
MapOO& )
<OO) *
AppointmentOO* 5
>OO5 6
(OO6 7
dtoOO7 :
)OO: ;
;OO; <
varQQ 
responseQQ 
=QQ 
awaitQQ  
_appointmentServiceQQ! 4
.QQ4 5
UpdateQQ5 ;
(QQ; <
appointmentQQ< G
,QQG H
appointmentIdQQI V
)QQV W
;QQW X
ifSS 
(SS 
!SS 
responseSS 
.SS 
	IsSuccessSS #
)SS# $
{TT 
returnUU 
NotFoundUU 
(UU  
responseUU  (
.UU( )
ErrorUU) .
)UU. /
;UU/ 0
}VV 
varXX 
modelXX 
=XX 
_mapperXX 
.XX  
MapXX  #
<XX# $
AppointmentDtoXX$ 2
>XX2 3
(XX3 4
responseXX4 <
.XX< =
EntityXX= C
)XXC D
;XXD E
returnYY 
OkYY 
(YY 
modelYY 
)YY 
;YY 
}ZZ 	
}[[ 
}\\ »5
fE:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Controllers.v2\DoctorController.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Controllers *
.* +
v2+ -
{ 
[ 
Route 

(
 
$str 3
)3 4
]4 5
[ 
ApiController 
] 
[ 

ApiVersion 
( 
$str 
) 
] 
public 

class 
DoctorController !
:" #
ControllerBase$ 2
{ 
private 
readonly 
	IMediator "
	_mediator# ,
;, -
private 
readonly 
IDoctorsService (
_doctorService) 7
;7 8
private 
readonly 
IMapper  
_mapper! (
;( )
public 
DoctorController 
(  
IDoctorsService  /
doctorService0 =
,= >
IMapper? F
mapperG M
,M N
	IMediatorO X
mediatorY a
)a b
{ 	
_doctorService 
= 
doctorService *
;* +
_mapper 
= 
mapper 
; 
	_mediator 
= 
mediator  
;  !
} 	
[ 	
MapToApiVersion	 
( 
$str 
) 
]  
[ 	
HttpPost	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Create 
( 
[ 
FromBody 
] 
CreateDoctorCommand 0
command1 8
)8 9
{   	
var!! 
result!! 
=!! 
await!! 
	_mediator!! (
.!!( )
Send!!) -
(!!- .
command!!. 5
)!!5 6
;!!6 7
return"" 
Ok"" 
("" 
result"" 
)"" 
;"" 
}## 	
[%% 	
MapToApiVersion%%	 
(%% 
$str%% 
)%% 
]%%  
[&& 	
HttpGet&&	 
]&& 
public'' 
async'' 
Task'' 
<'' 
List'' 
<'' 
DoctorResponse'' -
>''- .
>''. /
Get''0 3
(''3 4
)''4 5
{(( 	
return)) 
await)) 
	_mediator)) "
.))" #
Send))# '
())' (
new))( +
GetAllDoctorsQuery)), >
())> ?
)))? @
)))@ A
;))A B
}** 	
[,, 	
MapToApiVersion,,	 
(,, 
$str,, 
),, 
],,  
[-- 	
HttpGet--	 
(-- 
$str-- "
)--" #
]--# $
public.. 
async.. 
Task.. 
<.. 
IActionResult.. '
>..' (
GetById..) 0
(..0 1
Guid..1 5
doctorId..6 >
)..> ?
{// 	
var00 
response00 
=00 
await00  
_doctorService00! /
.00/ 0
GetById000 7
(007 8
doctorId008 @
)00@ A
;00A B
if11 
(11 
!11 
response11 
.11 
	IsSuccess11 #
)11# $
{22 
return33 
NotFound33 
(33  
response33  (
.33( )
Error33) .
)33. /
;33/ 0
}44 
var66 
model66 
=66 
_mapper66 
.66  
Map66  #
<66# $
	DoctorDto66$ -
>66- .
(66. /
response66/ 7
.667 8
Entity668 >
)66> ?
;66? @
return77 
Ok77 
(77 
model77 
)77 
;77 
}88 	
[:: 	
MapToApiVersion::	 
(:: 
$str:: 
):: 
]::  
[;; 	

HttpDelete;;	 
(;; 
$str;; %
);;% &
];;& '
public<< 
async<< 
Task<< 
<<< 
IActionResult<< '
><<' (
Delete<<) /
(<</ 0
Guid<<0 4
doctorId<<5 =
)<<= >
{== 	
var>> 
response>> 
=>> 
await>>  
_doctorService>>! /
.>>/ 0
Delete>>0 6
(>>6 7
doctorId>>7 ?
)>>? @
;>>@ A
if?? 
(?? 
response?? 
.?? 
	IsSuccess?? "
)??" #
{@@ 
returnAA 
OkAA 
(AA 
)AA 
;AA 
}BB 
returnDD 
NotFoundDD 
(DD 
responseDD $
.DD$ %
ErrorDD% *
)DD* +
;DD+ ,
}EE 	
[GG 	
MapToApiVersionGG	 
(GG 
$strGG 
)GG 
]GG  
[HH 	
HttpPutHH	 
(HH 
$strHH "
)HH" #
]HH# $
publicII 
asyncII 
TaskII 
<II 
IActionResultII '
>II' (
UpdateII) /
(II/ 0
[II0 1
FromBodyII1 9
]II9 :
	DoctorDtoII; D
dtoIIE H
,IIH I
GuidIIJ N
doctorIdIIO W
)IIW X
{JJ 	
varKK 
doctorKK 
=KK 
_mapperKK  
.KK  !
MapKK! $
<KK$ %
DoctorKK% +
>KK+ ,
(KK, -
dtoKK- 0
)KK0 1
;KK1 2
varMM 
responseMM 
=MM 
awaitMM  
_doctorServiceMM! /
.MM/ 0
UpdateMM0 6
(MM6 7
doctorMM7 =
,MM= >
doctorIdMM? G
)MMG H
;MMH I
ifOO 
(OO 
!OO 
responseOO 
.OO 
	IsSuccessOO #
)OO# $
{PP 
returnQQ 
NotFoundQQ 
(QQ  
responseQQ  (
.QQ( )
ErrorQQ) .
)QQ. /
;QQ/ 0
}RR 
varTT 
modelTT 
=TT 
_mapperTT 
.TT  
MapTT  #
<TT# $
	DoctorDtoTT$ -
>TT- .
(TT. /
responseTT/ 7
.TT7 8
EntityTT8 >
)TT> ?
;TT? @
returnUU 
OkUU 
(UU 
modelUU 
)UU 
;UU 
}VV 	
}WW 
}XX ô9
dE:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Controllers.v2\DrugController.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Controllers *
.* +
v2+ -
{ 
[		 
Route		 

(		
 
$str		 3
)		3 4
]		4 5
[

 
ApiController

 
]

 
[ 

ApiVersion 
( 
$str 
) 
] 
public 

class 
DrugController 
:  !
ControllerBase" 0
{ 
private 
readonly 
IDrugsService &
_drugService' 3
;3 4
private 
readonly 
IMapper  
_mapper! (
;( )
public 
DrugController 
( 
IDrugsService +
drugService, 7
,7 8
IMapper9 @
mapperA G
)G H
{ 	
_drugService 
= 
drugService &
;& '
_mapper 
= 
mapper 
; 
} 	
[ 	
MapToApiVersion	 
( 
$str 
) 
]  
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Get) ,
(, -
)- .
{ 	
var 
response 
= 
await  
_drugService! -
.- .
GetAll. 4
(4 5
)5 6
;6 7
if 
( 
! 
response 
. 
	IsSuccess #
)# $
{ 
return 
NotFound 
(  
response  (
.( )
Error) .
). /
;/ 0
} 
var!! 
models!! 
=!! 
_mapper!!  
.!!  !
Map!!! $
<!!$ %
IEnumerable!!% 0
<!!0 1
DrugDto!!1 8
>!!8 9
>!!9 :
(!!: ;
response!!; C
.!!C D
Entity!!D J
)!!J K
;!!K L
return"" 
Ok"" 
("" 
models"" 
)"" 
;"" 
}## 	
[%% 	
MapToApiVersion%%	 
(%% 
$str%% 
)%% 
]%%  
[&& 	
HttpPost&&	 
]&& 
public'' 
async'' 
Task'' 
<'' 
IActionResult'' '
>''' (
Create'') /
(''/ 0
[''0 1
FromBody''1 9
]''9 :
CreateDrugDto''; H
dto''I L
)''L M
{(( 	
var)) 
drug)) 
=)) 
_mapper)) 
.)) 
Map)) "
<))" #
Drug))# '
>))' (
())( )
dto))) ,
))), -
;))- .
await++ 
_drugService++ 
.++ 
Create++ %
(++% &
drug++& *
)++* +
;+++ ,
return-- 
Created-- 
(-- 
nameof-- !
(--! "
Get--" %
)--% &
,--& '
dto--( +
)--+ ,
;--, -
}.. 	
[00 	
MapToApiVersion00	 
(00 
$str00 
)00 
]00  
[11 	
HttpGet11	 
(11 
$str11  
)11  !
]11! "
public22 
async22 
Task22 
<22 
IActionResult22 '
>22' (
GetById22) 0
(220 1
Guid221 5
drugId226 <
)22< =
{33 	
var44 
response44 
=44 
await44  
_drugService44! -
.44- .
GetById44. 5
(445 6
drugId446 <
)44< =
;44= >
if55 
(55 
!55 
response55 
.55 
	IsSuccess55 #
)55# $
{66 
return77 
NotFound77 
(77  
response77  (
.77( )
Error77) .
)77. /
;77/ 0
}88 
var:: 
model:: 
=:: 
_mapper:: 
.::  
Map::  #
<::# $
DrugDto::$ +
>::+ ,
(::, -
response::- 5
.::5 6
Entity::6 <
)::< =
;::= >
return;; 
Ok;; 
(;; 
model;; 
);; 
;;; 
}<< 	
[>> 	
MapToApiVersion>>	 
(>> 
$str>> 
)>> 
]>>  
[?? 	

HttpDelete??	 
(?? 
$str?? #
)??# $
]??$ %
public@@ 
async@@ 
Task@@ 
<@@ 
IActionResult@@ '
>@@' (
Delete@@) /
(@@/ 0
Guid@@0 4
drugId@@5 ;
)@@; <
{AA 	
varBB 
responseBB 
=BB 
awaitBB  
_drugServiceBB! -
.BB- .
DeleteBB. 4
(BB4 5
drugIdBB5 ;
)BB; <
;BB< =
ifCC 
(CC 
responseCC 
.CC 
	IsSuccessCC "
)CC" #
{DD 
returnEE 
OkEE 
(EE 
)EE 
;EE 
}FF 
returnHH 
NotFoundHH 
(HH 
responseHH $
.HH$ %
ErrorHH% *
)HH* +
;HH+ ,
}II 	
[KK 	
MapToApiVersionKK	 
(KK 
$strKK 
)KK 
]KK  
[LL 	
HttpPutLL	 
(LL 
$strLL  
)LL  !
]LL! "
publicMM 
asyncMM 
TaskMM 
<MM 
IActionResultMM '
>MM' (
UpdateMM) /
(MM/ 0
[MM0 1
FromBodyMM1 9
]MM9 :
DrugDtoMM; B
dtoMMC F
,MMF G
GuidMMH L
drugIdMMM S
)MMS T
{NN 	
varOO 
drugOO 
=OO 
_mapperOO 
.OO 
MapOO "
<OO" #
DrugOO# '
>OO' (
(OO( )
dtoOO) ,
)OO, -
;OO- .
varQQ 
responseQQ 
=QQ 
awaitQQ  
_drugServiceQQ! -
.QQ- .
UpdateQQ. 4
(QQ4 5
drugQQ5 9
,QQ9 :
drugIdQQ; A
)QQA B
;QQB C
ifSS 
(SS 
!SS 
responseSS 
.SS 
	IsSuccessSS #
)SS# $
{TT 
returnUU 
NotFoundUU 
(UU  
responseUU  (
.UU( )
ErrorUU) .
)UU. /
;UU/ 0
}VV 
varXX 
modelXX 
=XX 
_mapperXX 
.XX  
MapXX  #
<XX# $
DrugDtoXX$ +
>XX+ ,
(XX, -
responseXX- 5
.XX5 6
EntityXX6 <
)XX< =
;XX= >
returnYY 
OkYY 
(YY 
modelYY 
)YY 
;YY 
}ZZ 	
}[[ 
}\\ ä
iE:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Controllers.v2\DrugEntryController.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Controllers *
.* +
v2+ -
{ 
[		 
Route		 

(		
 
$str		 3
)		3 4
]		4 5
[

 
ApiController

 
]

 
[ 

ApiVersion 
( 
$str 
) 
] 
public 

class 
DrugEntryController $
:% &
ControllerBase' 5
{ 
private 
readonly 
	IMediator "
	_mediator# ,
;, -
public 
DrugEntryController "
(" #
	IMediator# ,
mediator- 5
)5 6
{ 	
	_mediator 
= 
mediator  
;  !
} 	
[ 	
MapToApiVersion	 
( 
$str 
) 
]  
[ 	
HttpPost	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Create 
( 
[ 
FromBody 
] "
CreateDrugEntryCommand 3
command4 ;
); <
{ 	
var 
result 
= 
await 
	_mediator (
.( )
Send) -
(- .
command. 5
)5 6
;6 7
return 
Ok 
( 
result 
) 
; 
} 	
[ 	
MapToApiVersion	 
( 
$str 
) 
]  
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
List 
< 
DrugEntryResponse 0
>0 1
>1 2
Get3 6
(6 7
)7 8
{   	
return!! 
await!! 
	_mediator!! "
.!!" #
Send!!# '
(!!' (
new!!( +!
GetAllDrugEntrysQuery!!, A
(!!A B
)!!B C
)!!C D
;!!D E
}"" 	
}## 
}$$ Ñ:
gE:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Controllers.v2\PatientController.cs
	namespace

 	
MyDocAppointment


 
.

 
API

 
.

 
Controllers

 *
.

* +
v2

+ -
{ 
[ 
Route 

(
 
$str 3
)3 4
]4 5
[ 
ApiController 
] 
[ 

ApiVersion 
( 
$str 
) 
] 
public 

class 
PatientController "
:# $
ControllerBase% 3
{ 
private 
readonly 
IPatientsService )
_patientService* 9
;9 :
private 
readonly 
IMapper  
_mapper! (
;( )
public 
PatientController  
(  !
IPatientsService! 1
patientService2 @
,@ A
IMapperB I
mapperJ P
)P Q
{ 	
_patientService 
= 
patientService ,
;, -
_mapper 
= 
mapper 
; 
} 	
[ 	
MapToApiVersion	 
( 
$str 
) 
]  
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Get) ,
(, -
)- .
{ 	
var 
response 
= 
await  
_patientService! 0
.0 1
GetAll1 7
(7 8
)8 9
;9 :
if 
( 
! 
response 
. 
	IsSuccess #
)# $
{   
return!! 
NotFound!! 
(!!  
response!!  (
.!!( )
Error!!) .
)!!. /
;!!/ 0
}"" 
var$$ 
models$$ 
=$$ 
_mapper$$  
.$$  !
Map$$! $
<$$$ %
IEnumerable$$% 0
<$$0 1

PatientDto$$1 ;
>$$; <
>$$< =
($$= >
response$$> F
.$$F G
Entity$$G M
)$$M N
;$$N O
return%% 
Ok%% 
(%% 
models%% 
)%% 
;%% 
}&& 	
[(( 	
MapToApiVersion((	 
((( 
$str(( 
)(( 
]((  
[)) 	
HttpPost))	 
])) 
public** 
async** 
Task** 
<** 
IActionResult** '
>**' (
Create**) /
(**/ 0
[**0 1
FromBody**1 9
]**9 :
CreatePatientDto**; K
dto**L O
)**O P
{++ 	
var,, 
patient,, 
=,, 
_mapper,, !
.,,! "
Map,," %
<,,% &
Patient,,& -
>,,- .
(,,. /
dto,,/ 2
),,2 3
;,,3 4
await.. 
_patientService.. !
...! "
Create.." (
(..( )
patient..) 0
)..0 1
;..1 2
return00 
Created00 
(00 
nameof00 !
(00! "
Get00" %
)00% &
,00& '
dto00( +
)00+ ,
;00, -
}11 	
[33 	
MapToApiVersion33	 
(33 
$str33 
)33 
]33  
[44 	
HttpGet44	 
(44 
$str44 #
)44# $
]44$ %
public55 
async55 
Task55 
<55 
IActionResult55 '
>55' (
GetById55) 0
(550 1
Guid551 5
	patientId556 ?
)55? @
{66 	
var77 
response77 
=77 
await77  
_patientService77! 0
.770 1
GetById771 8
(778 9
	patientId779 B
)77B C
;77C D
if88 
(88 
!88 
response88 
.88 
	IsSuccess88 #
)88# $
{99 
return:: 
NotFound:: 
(::  
response::  (
.::( )
Error::) .
)::. /
;::/ 0
};; 
var== 
model== 
=== 
_mapper== 
.==  
Map==  #
<==# $

PatientDto==$ .
>==. /
(==/ 0
response==0 8
.==8 9
Entity==9 ?
)==? @
;==@ A
return>> 
Ok>> 
(>> 
model>> 
)>> 
;>> 
}@@ 	
[BB 	
MapToApiVersionBB	 
(BB 
$strBB 
)BB 
]BB  
[CC 	

HttpDeleteCC	 
(CC 
$strCC &
)CC& '
]CC' (
publicDD 
asyncDD 
TaskDD 
<DD 
IActionResultDD '
>DD' (
DeleteDD) /
(DD/ 0
GuidDD0 4
	patientIdDD5 >
)DD> ?
{EE 	
varFF 
responseFF 
=FF 
awaitFF  
_patientServiceFF! 0
.FF0 1
DeleteFF1 7
(FF7 8
	patientIdFF8 A
)FFA B
;FFB C
ifGG 
(GG 
responseGG 
.GG 
	IsSuccessGG "
)GG" #
{HH 
returnII 
OkII 
(II 
)II 
;II 
}JJ 
returnLL 
NotFoundLL 
(LL 
responseLL $
.LL$ %
ErrorLL% *
)LL* +
;LL+ ,
}MM 	
[OO 	
MapToApiVersionOO	 
(OO 
$strOO 
)OO 
]OO  
[PP 	
HttpPutPP	 
(PP 
$strPP #
)PP# $
]PP$ %
publicQQ 
asyncQQ 
TaskQQ 
<QQ 
IActionResultQQ '
>QQ' (
UpdateQQ) /
(QQ/ 0
[QQ0 1
FromBodyQQ1 9
]QQ9 :

PatientDtoQQ; E
dtoQQF I
,QQI J
GuidQQK O
	patientIdQQP Y
)QQY Z
{RR 	
varSS 
patientSS 
=SS 
_mapperSS !
.SS! "
MapSS" %
<SS% &
PatientSS& -
>SS- .
(SS. /
dtoSS/ 2
)SS2 3
;SS3 4
varUU 
responseUU 
=UU 
awaitUU  
_patientServiceUU! 0
.UU0 1
UpdateUU1 7
(UU7 8
patientUU8 ?
,UU? @
	patientIdUUA J
)UUJ K
;UUK L
ifWW 
(WW 
!WW 
responseWW 
.WW 
	IsSuccessWW #
)WW# $
{XX 
returnYY 
NotFoundYY 
(YY  
responseYY  (
.YY( )
ErrorYY) .
)YY. /
;YY/ 0
}ZZ 
var\\ 
model\\ 
=\\ 
_mapper\\ 
.\\  
Map\\  #
<\\# $

PatientDto\\$ .
>\\. /
(\\/ 0
response\\0 8
.\\8 9
Entity\\9 ?
)\\? @
;\\@ A
return]] 
Ok]] 
(]] 
model]] 
)]] 
;]] 
}^^ 	
}__ 
}`` ¬;
iE:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Controllers\AppointmentsController.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Controllers *
{ 
[		 
Route		 

(		
 
$str		 3
)		3 4
]		4 5
[

 
ApiController

 
]

 
[ 

ApiVersion 
( 
$str 
) 
] 
public 

class !
AppointmentController &
:' (
ControllerBase) 7
{ 
private 
readonly  
IAppointmentsService -
_appointmentService. A
;A B
private 
readonly 
IMapper  
_mapper! (
;( )
public !
AppointmentController $
($ % 
IAppointmentsService% 9
appointmentService: L
,L M
IMapperN U
mapperV \
)\ ]
{ 	
_appointmentService 
=  !
appointmentService" 4
;4 5
_mapper 
= 
mapper 
; 
} 	
[ 	
MapToApiVersion	 
( 
$str 
) 
]  
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Get) ,
(, -
)- .
{ 	
var 
response 
= 
await  
_appointmentService! 4
.4 5
GetAll5 ;
(; <
)< =
;= >
if 
( 
! 
response 
. 
	IsSuccess #
)# $
{ 
return 
NotFound 
(  
response  (
.( )
Error) .
). /
;/ 0
} 
var   
models   
=   
_mapper    
.    !
Map  ! $
<  $ %
IEnumerable  % 0
<  0 1
AppointmentDto  1 ?
>  ? @
>  @ A
(  A B
response  B J
.  J K
Entity  K Q
)  Q R
;  R S
return"" 
Ok"" 
("" 
models"" 
)"" 
;"" 
}## 	
[%% 	
MapToApiVersion%%	 
(%% 
$str%% 
)%% 
]%%  
[&& 	
HttpPost&&	 
]&& 
public'' 
async'' 
Task'' 
<'' 
IActionResult'' '
>''' (
Create'') /
(''/ 0
[''0 1
FromBody''1 9
]''9 : 
CreateAppointmentDto''; O
dto''P S
)''S T
{(( 	
var)) 
appointment)) 
=)) 
_mapper)) %
.))% &
Map))& )
<))) *
Appointment))* 5
>))5 6
())6 7
dto))7 :
))): ;
;)); <
await** 
_appointmentService** %
.**% &
Create**& ,
(**, -
appointment**- 8
)**8 9
;**9 :
return,, 
Created,, 
(,, 
nameof,, !
(,,! "
Get,," %
),,% &
,,,& '
dto,,( +
),,+ ,
;,,, -
}-- 	
[// 	
MapToApiVersion//	 
(// 
$str// 
)// 
]//  
[00 	
HttpGet00	 
(00 
$str00 '
)00' (
]00( )
public11 
async11 
Task11 
<11 
IActionResult11 '
>11' (
GetById11) 0
(110 1
Guid111 5
appointmentId116 C
)11C D
{22 	
var33 
response33 
=33 
await33  
_appointmentService33! 4
.334 5
GetById335 <
(33< =
appointmentId33= J
)33J K
;33K L
if44 
(44 
!44 
response44 
.44 
	IsSuccess44 #
)44# $
{55 
return66 
NotFound66 
(66  
response66  (
.66( )
Error66) .
)66. /
;66/ 0
}77 
var99 
model99 
=99 
_mapper99 
.99  
Map99  #
<99# $
AppointmentDto99$ 2
>992 3
(993 4
response994 <
.99< =
Entity99= C
)99C D
;99D E
return:: 
Ok:: 
(:: 
model:: 
):: 
;:: 
};; 	
[== 	
MapToApiVersion==	 
(== 
$str== 
)== 
]==  
[>> 	

HttpDelete>>	 
(>> 
$str>> *
)>>* +
]>>+ ,
public?? 
async?? 
Task?? 
<?? 
IActionResult?? '
>??' (
Delete??) /
(??/ 0
Guid??0 4
appointmentId??5 B
)??B C
{@@ 	
varAA 
responseAA 
=AA 
awaitAA  
_appointmentServiceAA! 4
.AA4 5
DeleteAA5 ;
(AA; <
appointmentIdAA< I
)AAI J
;AAJ K
ifBB 
(BB 
responseBB 
.BB 
	IsSuccessBB "
)BB" #
{CC 
returnDD 
OkDD 
(DD 
)DD 
;DD 
}EE 
returnGG 
NotFoundGG 
(GG 
responseGG $
.GG$ %
ErrorGG% *
)GG* +
;GG+ ,
}HH 	
[JJ 	
MapToApiVersionJJ	 
(JJ 
$strJJ 
)JJ 
]JJ  
[KK 	
HttpPutKK	 
(KK 
$strKK '
)KK' (
]KK( )
publicLL 
asyncLL 
TaskLL 
<LL 
IActionResultLL '
>LL' (
UpdateLL) /
(LL/ 0
[LL0 1
FromBodyLL1 9
]LL9 :
AppointmentDtoLL; I
dtoLLJ M
,LLM N
GuidLLO S
appointmentIdLLT a
)LLa b
{MM 	
varNN 
appointmentNN 
=NN 
_mapperNN %
.NN% &
MapNN& )
<NN) *
AppointmentNN* 5
>NN5 6
(NN6 7
dtoNN7 :
)NN: ;
;NN; <
varPP 
responsePP 
=PP 
awaitPP  
_appointmentServicePP! 4
.PP4 5
UpdatePP5 ;
(PP; <
appointmentPP< G
,PPG H
appointmentIdPPI V
)PPV W
;PPW X
ifRR 
(RR 
!RR 
responseRR 
.RR 
	IsSuccessRR #
)RR# $
{SS 
returnTT 
NotFoundTT 
(TT  
responseTT  (
.TT( )
ErrorTT) .
)TT. /
;TT/ 0
}UU 
varWW 
modelWW 
=WW 
_mapperWW 
.WW  
MapWW  #
<WW# $
AppointmentDtoWW$ 2
>WW2 3
(WW3 4
responseWW4 <
.WW< =
EntityWW= C
)WWC D
;WWD E
returnXX 
OkXX 
(XX 
modelXX 
)XX 
;XX 
}YY 	
}ZZ 
}[[ ™5
cE:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Controllers\DoctorController.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Controllers *
{ 
[ 
Route 

(
 
$str 3
)3 4
]4 5
[ 
ApiController 
] 
[ 

ApiVersion 
( 
$str 
) 
] 
public 

class 
DoctorController !
:" #
ControllerBase$ 2
{ 
private 
readonly 
	IMediator "
	_mediator# ,
;, -
private 
readonly 
IDoctorsService (
_doctorService) 7
;7 8
private 
readonly 
IMapper  
_mapper! (
;( )
public 
DoctorController 
(  
IDoctorsService  /
doctorService0 =
,= >
IMapper? F
mapperG M
,M N
	IMediatorO X
mediatorY a
)a b
{ 	
_doctorService 
= 
doctorService *
;* +
_mapper 
= 
mapper 
; 
	_mediator 
= 
mediator  
;  !
} 	
[ 	
MapToApiVersion	 
( 
$str 
) 
]  
[ 	
HttpPost	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Create 
( 
[ 
FromBody 
] 
CreateDoctorCommand 0
command1 8
)8 9
{ 	
var   
result   
=   
await   
	_mediator   (
.  ( )
Send  ) -
(  - .
command  . 5
)  5 6
;  6 7
return!! 
Ok!! 
(!! 
result!! 
)!! 
;!! 
}"" 	
[$$ 	
MapToApiVersion$$	 
($$ 
$str$$ 
)$$ 
]$$  
[%% 	
HttpGet%%	 
]%% 
public&& 
async&& 
Task&& 
<&& 
List&& 
<&& 
DoctorResponse&& -
>&&- .
>&&. /
Get&&0 3
(&&3 4
)&&4 5
{'' 	
return(( 
await(( 
	_mediator(( "
.((" #
Send((# '
(((' (
new((( +
GetAllDoctorsQuery((, >
(((> ?
)((? @
)((@ A
;((A B
})) 	
[++ 	
MapToApiVersion++	 
(++ 
$str++ 
)++ 
]++  
[,, 	
HttpGet,,	 
(,, 
$str,, "
),," #
],,# $
public-- 
async-- 
Task-- 
<-- 
IActionResult-- '
>--' (
GetById--) 0
(--0 1
Guid--1 5
doctorId--6 >
)--> ?
{.. 	
var// 
response// 
=// 
await//  
_doctorService//! /
./// 0
GetById//0 7
(//7 8
doctorId//8 @
)//@ A
;//A B
if00 
(00 
!00 
response00 
.00 
	IsSuccess00 #
)00# $
{11 
return22 
NotFound22 
(22  
response22  (
.22( )
Error22) .
)22. /
;22/ 0
}33 
var55 
model55 
=55 
_mapper55 
.55  
Map55  #
<55# $
	DoctorDto55$ -
>55- .
(55. /
response55/ 7
.557 8
Entity558 >
)55> ?
;55? @
return66 
Ok66 
(66 
model66 
)66 
;66 
}77 	
[99 	
MapToApiVersion99	 
(99 
$str99 
)99 
]99  
[:: 	

HttpDelete::	 
(:: 
$str:: %
)::% &
]::& '
public;; 
async;; 
Task;; 
<;; 
IActionResult;; '
>;;' (
Delete;;) /
(;;/ 0
Guid;;0 4
doctorId;;5 =
);;= >
{<< 	
var== 
response== 
=== 
await==  
_doctorService==! /
.==/ 0
Delete==0 6
(==6 7
doctorId==7 ?
)==? @
;==@ A
if>> 
(>> 
response>> 
.>> 
	IsSuccess>> "
)>>" #
{?? 
return@@ 
Ok@@ 
(@@ 
)@@ 
;@@ 
}AA 
returnCC 
NotFoundCC 
(CC 
responseCC $
.CC$ %
ErrorCC% *
)CC* +
;CC+ ,
}DD 	
[FF 	
MapToApiVersionFF	 
(FF 
$strFF 
)FF 
]FF  
[GG 	
HttpPutGG	 
(GG 
$strGG "
)GG" #
]GG# $
publicHH 
asyncHH 
TaskHH 
<HH 
IActionResultHH '
>HH' (
UpdateHH) /
(HH/ 0
[HH0 1
FromBodyHH1 9
]HH9 :
	DoctorDtoHH; D
dtoHHE H
,HHH I
GuidHHJ N
doctorIdHHO W
)HHW X
{II 	
varJJ 
doctorJJ 
=JJ 
_mapperJJ  
.JJ  !
MapJJ! $
<JJ$ %
DoctorJJ% +
>JJ+ ,
(JJ, -
dtoJJ- 0
)JJ0 1
;JJ1 2
varLL 
responseLL 
=LL 
awaitLL  
_doctorServiceLL! /
.LL/ 0
UpdateLL0 6
(LL6 7
doctorLL7 =
,LL= >
doctorIdLL? G
)LLG H
;LLH I
ifNN 
(NN 
!NN 
responseNN 
.NN 
	IsSuccessNN #
)NN# $
{OO 
returnPP 
NotFoundPP 
(PP  
responsePP  (
.PP( )
ErrorPP) .
)PP. /
;PP/ 0
}QQ 
varSS 
modelSS 
=SS 
_mapperSS 
.SS  
MapSS  #
<SS# $
	DoctorDtoSS$ -
>SS- .
(SS. /
responseSS/ 7
.SS7 8
EntitySS8 >
)SS> ?
;SS? @
returnTT 
OkTT 
(TT 
modelTT 
)TT 
;TT 
}UU 	
}VV 
}WW Ò9
aE:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Controllers\DrugController.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Controllers *
{ 
[		 
Route		 

(		
 
$str		 3
)		3 4
]		4 5
[

 
ApiController

 
]

 
[ 

ApiVersion 
( 
$str 
) 
] 
public 

class 
DrugController 
:  !
ControllerBase" 0
{ 
private 
readonly 
IDrugsService &
_drugService' 3
;3 4
private 
readonly 
IMapper  
_mapper! (
;( )
public 
DrugController 
( 
IDrugsService +
drugService, 7
,7 8
IMapper9 @
mapperA G
)G H
{ 	
_drugService 
= 
drugService &
;& '
_mapper 
= 
mapper 
; 
} 	
[ 	
MapToApiVersion	 
( 
$str 
) 
]  
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Get) ,
(, -
)- .
{ 	
var 
response 
= 
await  
_drugService! -
.- .
GetAll. 4
(4 5
)5 6
;6 7
if 
( 
! 
response 
. 
	IsSuccess #
)# $
{ 
return 
NotFound 
(  
response  (
.( )
Error) .
). /
;/ 0
} 
var   
models   
=   
_mapper    
.    !
Map  ! $
<  $ %
IEnumerable  % 0
<  0 1
DrugDto  1 8
>  8 9
>  9 :
(  : ;
response  ; C
.  C D
Entity  D J
)  J K
;  K L
return!! 
Ok!! 
(!! 
models!! 
)!! 
;!! 
}"" 	
[$$ 	
MapToApiVersion$$	 
($$ 
$str$$ 
)$$ 
]$$  
[%% 	
HttpPost%%	 
]%% 
public&& 
async&& 
Task&& 
<&& 
IActionResult&& '
>&&' (
Create&&) /
(&&/ 0
[&&0 1
FromBody&&1 9
]&&9 :
CreateDrugDto&&; H
dto&&I L
)&&L M
{'' 	
var(( 
drug(( 
=(( 
_mapper(( 
.(( 
Map(( "
<((" #
Drug((# '
>((' (
(((( )
dto(() ,
)((, -
;((- .
await** 
_drugService** 
.** 
Create** %
(**% &
drug**& *
)*** +
;**+ ,
return,, 
Created,, 
(,, 
nameof,, !
(,,! "
Get,," %
),,% &
,,,& '
dto,,( +
),,+ ,
;,,, -
}-- 	
[// 	
MapToApiVersion//	 
(// 
$str// 
)// 
]//  
[00 	
HttpGet00	 
(00 
$str00  
)00  !
]00! "
public11 
async11 
Task11 
<11 
IActionResult11 '
>11' (
GetById11) 0
(110 1
Guid111 5
drugId116 <
)11< =
{22 	
var33 
response33 
=33 
await33  
_drugService33! -
.33- .
GetById33. 5
(335 6
drugId336 <
)33< =
;33= >
if44 
(44 
!44 
response44 
.44 
	IsSuccess44 #
)44# $
{55 
return66 
NotFound66 
(66  
response66  (
.66( )
Error66) .
)66. /
;66/ 0
}77 
var99 
model99 
=99 
_mapper99 
.99  
Map99  #
<99# $
DrugDto99$ +
>99+ ,
(99, -
response99- 5
.995 6
Entity996 <
)99< =
;99= >
return:: 
Ok:: 
(:: 
model:: 
):: 
;:: 
};; 	
[== 	
MapToApiVersion==	 
(== 
$str== 
)== 
]==  
[>> 	

HttpDelete>>	 
(>> 
$str>> #
)>># $
]>>$ %
public?? 
async?? 
Task?? 
<?? 
IActionResult?? '
>??' (
Delete??) /
(??/ 0
Guid??0 4
drugId??5 ;
)??; <
{@@ 	
varAA 
responseAA 
=AA 
awaitAA  
_drugServiceAA! -
.AA- .
DeleteAA. 4
(AA4 5
drugIdAA5 ;
)AA; <
;AA< =
ifBB 
(BB 
responseBB 
.BB 
	IsSuccessBB "
)BB" #
{CC 
returnDD 
OkDD 
(DD 
)DD 
;DD 
}EE 
returnGG 
NotFoundGG 
(GG 
responseGG $
.GG$ %
ErrorGG% *
)GG* +
;GG+ ,
}HH 	
[JJ 	
MapToApiVersionJJ	 
(JJ 
$strJJ 
)JJ 
]JJ  
[KK 	
HttpPutKK	 
(KK 
$strKK  
)KK  !
]KK! "
publicLL 
asyncLL 
TaskLL 
<LL 
IActionResultLL '
>LL' (
UpdateLL) /
(LL/ 0
[LL0 1
FromBodyLL1 9
]LL9 :
DrugDtoLL; B
dtoLLC F
,LLF G
GuidLLH L
drugIdLLM S
)LLS T
{MM 	
varNN 
drugNN 
=NN 
_mapperNN 
.NN 
MapNN "
<NN" #
DrugNN# '
>NN' (
(NN( )
dtoNN) ,
)NN, -
;NN- .
varPP 
responsePP 
=PP 
awaitPP  
_drugServicePP! -
.PP- .
UpdatePP. 4
(PP4 5
drugPP5 9
,PP9 :
drugIdPP; A
)PPA B
;PPB C
ifRR 
(RR 
!RR 
responseRR 
.RR 
	IsSuccessRR #
)RR# $
{SS 
returnTT 
NotFoundTT 
(TT  
responseTT  (
.TT( )
ErrorTT) .
)TT. /
;TT/ 0
}UU 
varWW 
modelWW 
=WW 
_mapperWW 
.WW  
MapWW  #
<WW# $
DrugDtoWW$ +
>WW+ ,
(WW, -
responseWW- 5
.WW5 6
EntityWW6 <
)WW< =
;WW= >
returnXX 
OkXX 
(XX 
modelXX 
)XX 
;XX 
}YY 	
}ZZ 
}[[ Â
fE:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Controllers\DrugEntryController.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Controllers *
{ 
[		 
Route		 

(		
 
$str		 3
)		3 4
]		4 5
[

 
ApiController

 
]

 
[ 

ApiVersion 
( 
$str 
) 
] 
public 

class 
DrugEntryController $
:% &
ControllerBase' 5
{ 
private 
readonly 
	IMediator "
	_mediator# ,
;, -
public 
DrugEntryController "
(" #
	IMediator# ,
mediator- 5
)5 6
{ 	
	_mediator 
= 
mediator  
;  !
} 	
[ 	
MapToApiVersion	 
( 
$str 
) 
]  
[ 	
HttpPost	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Create 
( 
[ 
FromBody 
] "
CreateDrugEntryCommand 3
command4 ;
); <
{ 	
var 
result 
= 
await 
	_mediator (
.( )
Send) -
(- .
command. 5
)5 6
;6 7
return 
Ok 
( 
result 
) 
; 
} 	
[ 	
MapToApiVersion	 
( 
$str 
) 
]  
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
List 
< 
DrugEntryResponse 0
>0 1
>1 2
Get3 6
(6 7
)7 8
{   	
return!! 
await!! 
	_mediator!! "
.!!" #
Send!!# '
(!!' (
new!!( +!
GetAllDrugEntrysQuery!!, A
(!!A B
)!!B C
)!!C D
;!!D E
}"" 	
}## 
}$$ ¯:
dE:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Controllers\PatientController.cs
	namespace

 	
MyDocAppointment


 
.

 
API

 
.

 
Controllers

 *
{ 
[ 
Route 

(
 
$str 3
)3 4
]4 5
[ 
ApiController 
] 
[ 

ApiVersion 
( 
$str 
) 
] 
public 

class 
PatientController "
:# $
ControllerBase% 3
{ 
private 
readonly 
IPatientsService )
_patientService* 9
;9 :
private 
readonly 
IMapper  
_mapper! (
;( )
public 
PatientController  
(  !
IPatientsService! 1
patientService2 @
,@ A
IMapperB I
mapperJ P
)P Q
{ 	
_patientService 
= 
patientService ,
;, -
_mapper 
= 
mapper 
; 
} 	
[ 	
MapToApiVersion	 
( 
$str 
) 
]  
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Get) ,
(, -
)- .
{ 	
var 
response 
= 
await  
_patientService! 0
.0 1
GetAll1 7
(7 8
)8 9
;9 :
if 
( 
! 
response 
. 
	IsSuccess #
)# $
{ 
return   
NotFound   
(    
response    (
.  ( )
Error  ) .
)  . /
;  / 0
}!! 
var## 
models## 
=## 
_mapper##  
.##  !
Map##! $
<##$ %
IEnumerable##% 0
<##0 1

PatientDto##1 ;
>##; <
>##< =
(##= >
response##> F
.##F G
Entity##G M
)##M N
;##N O
return$$ 
Ok$$ 
($$ 
models$$ 
)$$ 
;$$ 
}%% 	
['' 	
MapToApiVersion''	 
('' 
$str'' 
)'' 
]''  
[(( 	
HttpPost((	 
](( 
public)) 
async)) 
Task)) 
<)) 
IActionResult)) '
>))' (
Create))) /
())/ 0
[))0 1
FromBody))1 9
]))9 :
CreatePatientDto)); K
dto))L O
)))O P
{** 	
var++ 
patient++ 
=++ 
_mapper++ !
.++! "
Map++" %
<++% &
Patient++& -
>++- .
(++. /
dto++/ 2
)++2 3
;++3 4
await-- 
_patientService-- !
.--! "
Create--" (
(--( )
patient--) 0
)--0 1
;--1 2
return// 
Created// 
(// 
nameof// !
(//! "
Get//" %
)//% &
,//& '
dto//( +
)//+ ,
;//, -
}00 	
[22 	
MapToApiVersion22	 
(22 
$str22 
)22 
]22  
[33 	
HttpGet33	 
(33 
$str33 #
)33# $
]33$ %
public44 
async44 
Task44 
<44 
IActionResult44 '
>44' (
GetById44) 0
(440 1
Guid441 5
	patientId446 ?
)44? @
{55 	
var66 
response66 
=66 
await66  
_patientService66! 0
.660 1
GetById661 8
(668 9
	patientId669 B
)66B C
;66C D
if77 
(77 
!77 
response77 
.77 
	IsSuccess77 #
)77# $
{88 
return99 
NotFound99 
(99  
response99  (
.99( )
Error99) .
)99. /
;99/ 0
}:: 
var<< 
model<< 
=<< 
_mapper<< 
.<<  
Map<<  #
<<<# $

PatientDto<<$ .
><<. /
(<</ 0
response<<0 8
.<<8 9
Entity<<9 ?
)<<? @
;<<@ A
return== 
Ok== 
(== 
model== 
)== 
;== 
}?? 	
[AA 	
MapToApiVersionAA	 
(AA 
$strAA 
)AA 
]AA  
[BB 	

HttpDeleteBB	 
(BB 
$strBB &
)BB& '
]BB' (
publicCC 
asyncCC 
TaskCC 
<CC 
IActionResultCC '
>CC' (
DeleteCC) /
(CC/ 0
GuidCC0 4
	patientIdCC5 >
)CC> ?
{DD 	
varEE 
responseEE 
=EE 
awaitEE  
_patientServiceEE! 0
.EE0 1
DeleteEE1 7
(EE7 8
	patientIdEE8 A
)EEA B
;EEB C
ifFF 
(FF 
responseFF 
.FF 
	IsSuccessFF "
)FF" #
{GG 
returnHH 
OkHH 
(HH 
)HH 
;HH 
}II 
returnKK 
NotFoundKK 
(KK 
responseKK $
.KK$ %
ErrorKK% *
)KK* +
;KK+ ,
}LL 	
[NN 	
MapToApiVersionNN	 
(NN 
$strNN 
)NN 
]NN  
[OO 	
HttpPutOO	 
(OO 
$strOO #
)OO# $
]OO$ %
publicPP 
asyncPP 
TaskPP 
<PP 
IActionResultPP '
>PP' (
UpdatePP) /
(PP/ 0
[PP0 1
FromBodyPP1 9
]PP9 :

PatientDtoPP; E
dtoPPF I
,PPI J
GuidPPK O
	patientIdPPP Y
)PPY Z
{QQ 	
varRR 
patientRR 
=RR 
_mapperRR !
.RR! "
MapRR" %
<RR% &
PatientRR& -
>RR- .
(RR. /
dtoRR/ 2
)RR2 3
;RR3 4
varTT 
responseTT 
=TT 
awaitTT  
_patientServiceTT! 0
.TT0 1
UpdateTT1 7
(TT7 8
patientTT8 ?
,TT? @
	patientIdTTA J
)TTJ K
;TTK L
ifVV 
(VV 
!VV 
responseVV 
.VV 
	IsSuccessVV #
)VV# $
{WW 
returnXX 
NotFoundXX 
(XX  
responseXX  (
.XX( )
ErrorXX) .
)XX. /
;XX/ 0
}YY 
var[[ 
model[[ 
=[[ 
_mapper[[ 
.[[  
Map[[  #
<[[# $

PatientDto[[$ .
>[[. /
([[/ 0
response[[0 8
.[[8 9
Entity[[9 ?
)[[? @
;[[@ A
return\\ 
Ok\\ 
(\\ 
model\\ 
)\\ 
;\\ 
}]] 	
}^^ 
}__ õ
ZE:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\AppointmentDto.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class 
AppointmentDto 
{ 
public 
string 
Id 
{ 
get 
; 
set  #
;# $
}% &
=' (
string) /
./ 0
Empty0 5
;5 6
public 
string 
Location 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
string/ 5
.5 6
Empty6 ;
;; <
public 
string 
	PatientID 
{  !
get" %
;% &
set' *
;* +
}, -
=. /
string0 6
.6 7
Empty7 <
;< =
public 
string 
DoctorID 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
string/ 5
.5 6
Empty6 ;
;; <
public		 
string		 
Specialization		 $
{		% &
get		' *
;		* +
set		, /
;		/ 0
}		1 2
=		3 4
string		5 ;
.		; <
Empty		< A
;		A B
public

 
string

 
AppointmentTime

 %
{

& '
get

( +
;

+ ,
set

- 0
;

0 1
}

2 3
=

4 5
string

6 <
.

< =
Empty

= B
;

B C
public 
string 
PaymentMethod #
{$ %
get& )
;) *
set+ .
;. /
}0 1
=2 3
string4 :
.: ;
Empty; @
;@ A
public 
string 
PaymentDate !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
string2 8
.8 9
Empty9 >
;> ?
public 
double 
Amount 
{ 
get "
;" #
set$ '
;' (
}( )
} 
} ±
cE:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\AppointmentDtoValidator.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class #
AppointmentDtoValidator (
:( )
AbstractValidator* ;
<; <
AppointmentDto< J
>J K
{ 
public #
AppointmentDtoValidator &
(& '
)' (
{ 	
RuleFor		 
(		 
x		 
=>		 
x		 
.		 
Location		 #
)		# $
.		$ %
Length		% +
(		+ ,
$num		, -
,		- .
$num		/ 1
)		1 2
;		2 3
RuleFor

 
(

 
x

 
=>

 
x

 
.

 
	PatientID

 $
)

$ %
.

% &
NotEmpty

& .
(

. /
)

/ 0
;

0 1
RuleFor 
( 
x 
=> 
x 
. 
DoctorID #
)# $
.$ %
NotEmpty% -
(- .
). /
;/ 0
RuleFor 
( 
x 
=> 
x 
. 
Specialization )
)) *
.* +
NotEmpty+ 3
(3 4
)4 5
;5 6
RuleFor 
( 
x 
=> 
x 
. 
AppointmentTime *
)* +
.+ ,
NotEmpty, 4
(4 5
)5 6
;6 7
} 	
} 
} É
`E:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\CreateAppointmentDto.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class  
CreateAppointmentDto %
{ 
public 
string 
Location 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
string/ 5
.5 6
Empty6 ;
;; <
public 
string 
	PatientID 
{  !
get" %
;% &
set' *
;* +
}, -
=. /
string0 6
.6 7
Empty7 <
;< =
public 
string 
DoctorID 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
string/ 5
.5 6
Empty6 ;
;; <
public 
string 
Specialization $
{% &
get' *
;* +
set, /
;/ 0
}1 2
=3 4
string5 ;
.; <
Empty< A
;A B
public		 
string		 
AppointmentTime		 %
{		& '
get		( +
;		+ ,
set		- 0
;		0 1
}		2 3
=		4 5
string		6 <
.		< =
Empty		= B
;		B C
public

 
CreatePaymentDto

 
?

  
Payment

! (
{

) *
get

+ .
;

. /
set

0 3
;

3 4
}

5 6
} 
} É
iE:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\CreateAppointmentDtoValidator.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class )
CreateAppointmentDtoValidator .
:. /
AbstractValidator0 A
<A B 
CreateAppointmentDtoB V
>V W
{ 
public )
CreateAppointmentDtoValidator ,
(, -
)- .
{ 	
RuleFor		 
(		 
x		 
=>		 
x		 
.		 
Location		 #
)		# $
.		$ %
Length		% +
(		+ ,
$num		, -
,		- .
$num		/ 1
)		1 2
;		2 3
RuleFor

 
(

 
x

 
=>

 
x

 
.

 
	PatientID

 $
)

$ %
.

% &
NotEmpty

& .
(

. /
)

/ 0
;

0 1
RuleFor 
( 
x 
=> 
x 
. 
DoctorID #
)# $
.$ %
NotEmpty% -
(- .
). /
;/ 0
RuleFor 
( 
x 
=> 
x 
. 
Specialization )
)) *
.* +
NotEmpty+ 3
(3 4
)4 5
;5 6
RuleFor 
( 
x 
=> 
x 
. 
AppointmentTime *
)* +
.+ ,
NotEmpty, 4
(4 5
)5 6
;6 7
} 	
} 
} ö
[E:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\CreateDoctorDto.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class 
CreateDoctorDto  
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
public 
string 
Surname 
{ 
get  #
;# $
set% (
;( )
}* +
=, -
string. 4
.4 5
Empty5 :
;: ;
public 
int 
Age 
{ 
get 
; 
set !
;! "
}# $
public 
string 
Gender 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
string- 3
.3 4
Empty4 9
;9 :
public		 
string		 
EmailAddress		 "
{		# $
get		% (
;		( )
set		* -
;		- .
}		/ 0
=		1 2
string		3 9
.		9 :
Empty		: ?
;		? @
public

 
string

 
PhoneNumber

 !
{

" #
get

$ '
;

' (
set

) ,
;

, -
}

. /
=

0 1
string

2 8
.

8 9
Empty

9 >
;

> ?
public 
string 
HomeAddress !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
string2 8
.8 9
Empty9 >
;> ?
public 
string 

Speciality  
{! "
get# &
;& '
set( +
;+ ,
}- .
=/ 0
string1 7
.7 8
Empty8 =
;= >
} 
} ­	
YE:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\CreateDrugDto.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class 
CreateDrugDto 
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
public 
string 
Vendor 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
string- 3
.3 4
Empty4 9
;9 :
public 
string 
Category 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
string/ 5
.5 6
Empty6 ;
;; <
public 
decimal 
Price 
{ 
get "
;" #
set$ '
;' (
}) *
}		 
}

  
bE:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\CreateDrugDtoValidator.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class "
CreateDrugDtoValidator '
:( )
AbstractValidator* ;
<; <
CreateDrugDto< I
>I J
{ 
public "
CreateDrugDtoValidator %
(% &
)& '
{ 	
RuleFor		 
(		 
x		 
=>		 
x		 
.		 
Name		 
)		  
.		  !
Length		! '
(		' (
$num		( )
,		) *
$num		+ -
)		- .
;		. /
RuleFor

 
(

 
x

 
=>

 
x

 
.

 
Vendor

 !
)

! "
.

" #
Length

# )
(

) *
$num

* +
,

+ ,
$num

- /
)

/ 0
;

0 1
RuleFor 
( 
x 
=> 
x 
. 
Price  
)  !
.! "
NotEmpty" *
(* +
)+ ,
;, -
RuleFor 
( 
x 
=> 
x 
. 
Category #
)# $
.$ %
Length% +
(+ ,
$num, -
,- .
$num/ 1
)1 2
;2 3
} 	
} 
} †
\E:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\CreatePatientDto.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class 
CreatePatientDto !
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
public 
string 
Surname 
{ 
get  #
;# $
set% (
;( )
}* +
=, -
string. 4
.4 5
Empty5 :
;: ;
public 
int 
Age 
{ 
get 
; 
set !
;! "
}# $
public 
string 
Gender 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
string- 3
.3 4
Empty4 9
;9 :
public		 
string		 
EmailAddress		 "
{		# $
get		% (
;		( )
set		* -
;		- .
}		/ 0
=		1 2
string		3 9
.		9 :
Empty		: ?
;		? @
public

 
string

 
PhoneNumber

 !
{

" #
get

$ '
;

' (
set

) ,
;

, -
}

. /
=

0 1
string

2 8
.

8 9
Empty

9 >
;

> ?
public 
string 
HomeAddress !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
string2 8
.8 9
Empty9 >
;> ?
} 
} ù
eE:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\CreatePatientDtoValidator.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class %
CreatePatientDtoValidator *
:+ ,
AbstractValidator- >
<> ?
CreatePatientDto? O
>O P
{ 
public %
CreatePatientDtoValidator (
(( )
)) *
{ 	
RuleFor		 
(		 
x		 
=>		 
x		 
.		 
Name		 
)		  
.		  !
Length		! '
(		' (
$num		( )
,		) *
$num		+ -
)		- .
;		. /
RuleFor

 
(

 
x

 
=>

 
x

 
.

 
Surname

 "
)

" #
.

# $
Length

$ *
(

* +
$num

+ ,
,

, -
$num

. 0
)

0 1
;

1 2
RuleFor 
( 
x 
=> 
x 
. 
EmailAddress '
)' (
.( )
EmailAddress) 5
(5 6
)6 7
;7 8
RuleFor 
( 
x 
=> 
x 
. 
Age 
) 
.  
NotEmpty  (
(( )
)) *
;* +
RuleFor 
( 
x 
=> 
x 
. 
PhoneNumber &
)& '
.' (
Length( .
(. /
$num/ 1
)1 2
;2 3
RuleFor 
( 
x 
=> 
x 
. 
HomeAddress &
)& '
.' (
Length( .
(. /
$num/ 0
,0 1
$num2 4
)4 5
;5 6
} 	
} 
} Þ
\E:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\CreatePaymentDto.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class 
CreatePaymentDto !
{ 
public 
double 
Amount 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
PaymentMethod #
{$ %
get& )
;) *
set+ .
;. /
}0 1
=2 3
string4 :
.: ;
Empty; @
;@ A
} 
} þ
UE:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\DoctorDto.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class 
	DoctorDto 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
public 
string 
Surname 
{ 
get  #
;# $
set% (
;( )
}* +
=, -
string. 4
.4 5
Empty5 :
;: ;
public 
int 
Age 
{ 
get 
; 
set !
;! "
}# $
public		 
string		 
Gender		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
=		+ ,
string		- 3
.		3 4
Empty		4 9
;		9 :
public

 
string

 
EmailAddress

 "
{

# $
get

% (
;

( )
set

* -
;

- .
}

/ 0
=

1 2
string

3 9
.

9 :
Empty

: ?
;

? @
public 
string 
PhoneNumber !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
string2 8
.8 9
Empty9 >
;> ?
public 
string 
HomeAddress !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
string2 8
.8 9
Empty9 >
;> ?
public 
string 

Speciality  
{! "
get# &
;& '
set( +
;+ ,
}- .
=/ 0
string1 7
.7 8
Empty8 =
;= >
} 
} µ

SE:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\DrugDto.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class 
DrugDto 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
public 
string 
Vendor 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
string- 3
.3 4
Empty4 9
;9 :
public 
string 
Category 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
string/ 5
.5 6
Empty6 ;
;; <
public		 
decimal		 
Price		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
}

 
} ˆ
\E:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\DrugDtoValidator.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class 
DrugDtoValidator !
:" #
AbstractValidator$ 5
<5 6
DrugDto6 =
>= >
{ 
public 
DrugDtoValidator 
(  
)  !
{ 	
RuleFor		 
(		 
x		 
=>		 
x		 
.		 
Name		 
)		  
.		  !
Length		! '
(		' (
$num		( )
,		) *
$num		+ -
)		- .
;		. /
RuleFor

 
(

 
x

 
=>

 
x

 
.

 
Vendor

 !
)

! "
.

" #
Length

# )
(

) *
$num

* +
,

+ ,
$num

- /
)

/ 0
;

0 1
RuleFor 
( 
x 
=> 
x 
. 
Price  
)  !
.! "
NotEmpty" *
(* +
)+ ,
;, -
RuleFor 
( 
x 
=> 
x 
. 
Category #
)# $
.$ %
Length% +
(+ ,
$num, -
,- .
$num/ 1
)1 2
;2 3
} 	
} 
} Þ
XE:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\DrugStockDto.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class 
DrugEntryDto 
{ 
public 
string 
DrugName 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
string/ 5
.5 6
Empty6 ;
;; <
public 
Guid 
DrugId 
{ 
get  
;  !
set" %
;% &
}' (
public 
int 
Quantity 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
ExpirationDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
=3 4
string5 ;
.; <
Empty< A
;A B
}		 
}

 Ž
VE:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\PatientDto.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class 

PatientDto 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
public 
string 
Surname 
{ 
get  #
;# $
set% (
;( )
}* +
=, -
string. 4
.4 5
Empty5 :
;: ;
public 
int 
Age 
{ 
get 
; 
set !
;! "
}# $
public		 
string		 
Gender		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
=		+ ,
string		- 3
.		3 4
Empty		4 9
;		9 :
public

 
string

 
EmailAddress

 "
{

# $
get

% (
;

( )
set

* -
;

- .
}

/ 0
=

1 2
string

3 9
.

9 :
Empty

: ?
;

? @
public 
string 
PhoneNumber !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
string2 8
.8 9
Empty9 >
;> ?
public 
string 
HomeAddress !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
string2 8
.8 9
Empty9 >
;> ?
} 
} á
_E:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\PatientDtoValidator.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class 
PatientDtoValidator $
:% &
AbstractValidator' 8
<8 9

PatientDto9 C
>C D
{ 
public 
PatientDtoValidator "
(" #
)# $
{ 	
RuleFor		 
(		 
x		 
=>		 
x		 
.		 
Name		 
)		  
.		  !
Length		! '
(		' (
$num		( )
,		) *
$num		+ -
)		- .
;		. /
RuleFor

 
(

 
x

 
=>

 
x

 
.

 
Surname

 "
)

" #
.

# $
Length

$ *
(

* +
$num

+ ,
,

, -
$num

. 0
)

0 1
;

1 2
RuleFor 
( 
x 
=> 
x 
. 
EmailAddress '
)' (
.( )
EmailAddress) 5
(5 6
)6 7
;7 8
RuleFor 
( 
x 
=> 
x 
. 
Age 
) 
.  
NotEmpty  (
(( )
)) *
;* +
RuleFor 
( 
x 
=> 
x 
. 
PhoneNumber &
)& '
.' (
Length( .
(. /
$num/ 1
)1 2
;2 3
RuleFor 
( 
x 
=> 
x 
. 
HomeAddress &
)& '
.' (
Length( .
(. /
$num/ 0
,0 1
$num2 4
)4 5
;5 6
} 	
} 
} È

VE:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\PaymentDto.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class 

PaymentDto 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
double 
Amount 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
PaymentMethod #
{$ %
get& )
;) *
set+ .
;. /
}0 1
=2 3
string4 :
.: ;
Empty; @
;@ A
public 
DateTime 
DueDate 
{  !
get" %
;% &
set' *
;* +
}, -
public		 
DateTime		 
EmissionDate		 $
{		% &
get		' *
;		* +
set		, /
;		/ 0
}		1 2
public

 
DateTime

 
AcquittedDate

 %
{

& '
get

( +
;

+ ,
set

- 0
;

0 1
}

2 3
} 
} á
\E:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Mapping\DoctorProfile.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Mapping &
{ 
public 

class 
DoctorProfile 
:  
Profile! (
{ 
public		 
DoctorProfile		 
(		 
)		 
{

 	
	CreateMap 
< 
Doctor 
, 
	DoctorDto '
>' (
(( )
)) *
.* +

ReverseMap+ 5
(5 6
)6 7
;7 8
	CreateMap 
< 
CreateDoctorDto %
,% &
Doctor' -
>- .
(. /
)/ 0
;0 1
} 	
} 
} Ç#
^E:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Mapping\ExternalProfile.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Mapping &
{ 
public 

class 
ExternalProfile  
:! "
Profile# *
{ 
public		 
ExternalProfile		 
(		 
)		  
{

 	
	CreateMap 
< 
Appointment !
,! "
AppointmentDto# 1
>1 2
(2 3
)3 4
. 
	ForMember 
( 
dest 
=>  "
dest# '
.' (
AppointmentTime( 7
,7 8
opt 
=> 
opt 
. 
MapFrom "
(" #
src# &
=>' )
src* -
.- .
AppointmentTime. =
.= >
ToString> F
(F G
$strG [
)[ \
)\ ]
)] ^
. 
	ForMember 
( 
dest 
=>  "
dest# '
.' (
PaymentMethod( 5
,5 6
opt 
=> 
opt 
. 
MapFrom "
(" #
src# &
=>' )
src* -
.- .
Payment. 5
.5 6
PaymentMethod6 C
.C D
ToStringD L
(L M
)M N
)N O
)O P
. 
	ForMember 
( 
dest 
=>  "
dest# '
.' (
PaymentDate( 3
,3 4
opt 
=> 
opt 
. 
MapFrom "
(" #
src# &
=>' )
src* -
.- .
Payment. 5
.5 6
AcquittedDate6 C
.C D
ToStringD L
(L M
$strM a
)a b
)b c
)c d
. 
	ForMember 
( 
dest 
=>  "
dest# '
.' (
Amount( .
,. /
opt 
=> 
opt 
. 
MapFrom "
(" #
src# &
=>' )
src* -
.- .
Payment. 5
.5 6
Amount6 <
)< =
)= >
. 

ReverseMap 
( 
) 
; 
	CreateMap 
<  
CreateAppointmentDto *
,* +
Appointment, 7
>7 8
(8 9
)9 :
;: ;
	CreateMap 
< 
Payment 
, 

PaymentDto )
>) *
(* +
)+ ,
. 
	ForMember 
( 
dest 
=>  "
dest# '
.' (
DueDate( /
,/ 0
opt 
=> 
opt 
. 
MapFrom "
(" #
src# &
=>' )
src* -
.- .
DueDate. 5
.5 6
ToString6 >
(> ?
$str? S
)S T
)T U
)U V
. 
	ForMember 
( 
dest 
=>  "
dest# '
.' (
EmissionDate( 4
,4 5
opt 
=> 
opt 
. 
MapFrom "
(" #
src# &
=>' )
src* -
.- .
EmissionDate. :
.: ;
ToString; C
(C D
$strD X
)X Y
)Y Z
)Z [
. 
	ForMember 
( 
dest 
=>  "
dest# '
.' (
AcquittedDate( 5
,5 6
opt 
=> 
opt 
. 
MapFrom "
(" #
src# &
=>' )
src* -
.- .
AcquittedDate. ;
.; <
ToString< D
(D E
$strE Y
)Y Z
)Z [
)[ \
. 

ReverseMap 
( 
) 
; 
	CreateMap 
< 
CreatePaymentDto &
,& '
Payment( /
>/ 0
(0 1
)1 2
;2 3
}   	
}!! 
}"" Æ
^E:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Mapping\InternalProfile.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Mapping &
{ 
public 

class 
InternalProfile  
:! "
Profile# *
{ 
public		 
InternalProfile		 
(		 
)		  
{

 	
	CreateMap 
< 
Drug 
, 
DrugDto #
># $
($ %
)% &
.& '

ReverseMap' 1
(1 2
)2 3
;3 4
	CreateMap 
< 
CreateDrugDto #
,# $
Drug% )
>) *
(* +
)+ ,
;, -
	CreateMap 
< 
	DrugEntry 
,  
DrugEntryDto! -
>- .
(. /
)/ 0
.0 1

ReverseMap1 ;
(; <
)< =
;= >
} 	
} 
} è
]E:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Mapping\PatientProfile.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Mapping &
{ 
public 

class 
PatientProfile 
:  !
Profile" )
{ 
public		 
PatientProfile		 
(		 
)		 
{

 	
	CreateMap 
< 
Patient 
, 

PatientDto )
>) *
(* +
)+ ,
., -

ReverseMap- 7
(7 8
)8 9
;9 :
	CreateMap 
< 
CreatePatientDto &
,& '
Patient( /
>/ 0
(0 1
)1 2
;2 3
} 	
} 
} “0
NE:\repo2\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
builder 
. 
Services 
. 
AddControllers 
(  
)  !
;! "
builder 
. 
Services 
. 
AddApiVersioning !
(! "
opt" %
=>& (
{ 
opt 
. 
DefaultApiVersion 
= 
new 

ApiVersion  *
(* +
$num+ ,
,, -
$num. /
)/ 0
;0 1
opt 
. /
#AssumeDefaultVersionWhenUnspecified +
=, -
true. 2
;2 3
opt 
. 
ReportApiVersions 
= 
true  
;  !
opt 
. 
ApiVersionReader 
= 
ApiVersionReader +
.+ ,
Combine, 3
(3 4
new4 7&
UrlSegmentApiVersionReader8 R
(R S
)S T
,T U
new4 7"
HeaderApiVersionReader8 N
(N O
$strO ^
)^ _
,_ `
new4 7%
MediaTypeApiVersionReader8 Q
(Q R
$strR a
)a b
)b c
;c d
} 
) 
; 
builder!! 
.!! 
Services!! 
.!! #
AddVersionedApiExplorer!! (
(!!( )
setup!!) .
=>!!/ 1
{"" 
setup## 	
.##	 

GroupNameFormat##
 
=## 
$str## $
;##$ %
setup$$ 	
.$$	 
%
SubstituteApiVersionInUrl$$
 #
=$$$ %
true$$& *
;$$* +
}%% 
)%% 
;%% 
builder(( 
.(( 
Services(( 
.(( #
AddEndpointsApiExplorer(( (
(((( )
)(() *
;((* +
builder)) 
.)) 
Services)) 
.)) 
AddSwaggerGen)) 
()) 
)))  
;))  !
builder++ 
.++ 
Services++ 
.++ 
ConfigureOptions++ !
<++! "#
ConfigureSwaggerOptions++" 9
>++9 :
(++: ;
)++; <
;++< =
builder-- 
.-- 
Services-- 
.-- !
AddControllerServices-- &
(--& '
)--' (
;--( )
builder.. 
... 
Services.. 
... "
AddApplicationServices.. '
(..' (
)..( )
;..) *
builder// 
.// 
Services// 
.// $
AddInfrastrutureServices// )
(//) *
builder//* 1
.//1 2
Configuration//2 ?
)//? @
;//@ A
builder11 
.11 
Services11 
.11 
AddCors11 
(11 
options11  
=>11! #
{22 
options33 
.33 
	AddPolicy33 
(33 
$str33 $
,33$ %
policy33& ,
=>33- /
{44 
policy55 
.55 
AllowAnyOrigin55 
(55 
)55 
.55  
AllowAnyHeader55  .
(55. /
)55/ 0
.550 1
AllowAnyMethod551 ?
(55? @
)55@ A
;55A B
}66 
)66 
;66 
}77 
)77 
;77 
builder99 
.99 
Services99 
.99 
AddHealthChecks99  
(99  !
)99! "
;99" #
var;; 
app;; 
=;; 	
builder;;
 
.;; 
Build;; 
(;; 
);; 
;;; 
app<< 
.<< 
UseHealthChecks<< 
(<< 
$str<< 
)<< 
;<< 
var>> )
apiVersionDescriptionProvider>> !
=>>" #
app>>$ '
.>>' (
Services>>( 0
.>>0 1
GetRequiredService>>1 C
<>>C D*
IApiVersionDescriptionProvider>>D b
>>>b c
(>>c d
)>>d e
;>>e f
ifAA 
(AA 
appAA 
.AA 
EnvironmentAA 
.AA 
IsDevelopmentAA !
(AA! "
)AA" #
)AA# $
{BB 
appCC 
.CC 

UseSwaggerCC 
(CC 
)CC 
;CC 
appDD 
.DD 
UseSwaggerUIDD 
(DD 
optionsDD 
=>DD 
{EE 
foreachFF 
(FF 
varFF 
descriptionFF  
inFF! #)
apiVersionDescriptionProviderFF$ A
.FFA B"
ApiVersionDescriptionsFFB X
.FFX Y
SelectFFY _
(FF_ `
descriptionFF` k
=>FFl n
descriptionFFo z
.FFz {
	GroupName	FF{ „
)
FF„ …
)
FF… †
{GG 	
optionsHH 
.HH 
SwaggerEndpointHH #
(HH# $
$"HH$ &
$strHH& /
{HH/ 0
descriptionHH0 ;
}HH; <
$strHH< I
"HHI J
,HHJ K
descriptionII 
.II 
ToUpperInvariantII ,
(II, -
)II- .
)II. /
;II/ 0
}JJ 	
}KK 
)KK 
;KK 
}LL 
appNN 
.NN 
UseHttpsRedirectionNN 
(NN 
)NN 
;NN 
appOO 
.OO 
UseCorsOO 
(OO 
$strOO 
)OO 
;OO 
appPP 
.PP 
UseAuthorizationPP 
(PP 
)PP 
;PP 
appRR 
.RR 
MapControllersRR 
(RR 
)RR 
;RR 
appTT 
.TT 
RunTT 
(TT 
)TT 	
;TT	 
