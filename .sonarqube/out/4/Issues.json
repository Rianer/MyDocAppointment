{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.4.0.0",
        "fileVersion": "4.4.0-4.22520.11 (9e075f03)",
        "semanticVersion": "4.4.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'value' in 'IReturnsResult<IDrugsService> IReturns<IDrugsService, Task<Result<Drug>>>.Returns(Task<Result<Drug>> value)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/repo2/MyDocAppointment/MyDocAppointment.Tests/DrugControllerShould.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 26,
                  "endLine": 28,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'value' in 'IReturnsResult<IDrugsService> IReturns<IDrugsService, Task<Result<Drug>>>.Returns(Task<Result<Drug>> value)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/repo2/MyDocAppointment/MyDocAppointment.Tests/DrugControllerShould.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 27,
                  "endLine": 38,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/repo2/MyDocAppointment/MyDocAppointment.Tests/AppointmentControllerShould.cs",
                "region": {
                  "startLine": 126,
                  "startColumn": 43,
                  "endLine": 126,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/repo2/MyDocAppointment/MyDocAppointment.Tests/PatientControllerShould.cs",
                "region": {
                  "startLine": 133,
                  "startColumn": 43,
                  "endLine": 133,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/repo2/MyDocAppointment/MyDocAppointment.Tests/DoctorControllerShould.cs",
                "region": {
                  "startLine": 127,
                  "startColumn": 43,
                  "endLine": 127,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'entity' in 'Result<Drug> Result<Drug>.Success(Drug entity)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/repo2/MyDocAppointment/MyDocAppointment.Tests/DrugControllerShould.cs",
                "region": {
                  "startLine": 127,
                  "startColumn": 41,
                  "endLine": 127,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/repo2/MyDocAppointment/MyDocAppointment.Tests/PatientControllerShould.cs",
                "region": {
                  "startLine": 138,
                  "startColumn": 43,
                  "endLine": 138,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/repo2/MyDocAppointment/MyDocAppointment.Tests/DrugControllerShould.cs",
                "region": {
                  "startLine": 129,
                  "startColumn": 43,
                  "endLine": 129,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/repo2/MyDocAppointment/MyDocAppointment.Tests/DoctorControllerShould.cs",
                "region": {
                  "startLine": 131,
                  "startColumn": 43,
                  "endLine": 131,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/repo2/MyDocAppointment/MyDocAppointment.Tests/AppointmentControllerShould.cs",
                "region": {
                  "startLine": 134,
                  "startColumn": 56,
                  "endLine": 134,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/repo2/MyDocAppointment/MyDocAppointment.Tests/DrugControllerShould.cs",
                "region": {
                  "startLine": 133,
                  "startColumn": 43,
                  "endLine": 133,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/repo2/MyDocAppointment/MyDocAppointment.Tests/PatientControllerShould.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 52,
                  "endLine": 143,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/repo2/MyDocAppointment/MyDocAppointment.Tests/DoctorControllerShould.cs",
                "region": {
                  "startLine": 135,
                  "startColumn": 51,
                  "endLine": 135,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/repo2/MyDocAppointment/MyDocAppointment.Tests/DrugControllerShould.cs",
                "region": {
                  "startLine": 137,
                  "startColumn": 50,
                  "endLine": 137,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CS1998": {
          "id": "CS1998",
          "shortDescription": "Async method lacks 'await' operators and will run synchronously",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS1998)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8604": {
          "id": "CS8604",
          "shortDescription": "Possible null reference argument.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8604)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        }
      }
    }
  ]
}