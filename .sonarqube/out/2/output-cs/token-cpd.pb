Ï<
ME:\repo2\MyDocAppointment\MyDocAppointment.Application\AppointmentsService.cs
	namespace 	
MyDocAppointment
 
. 
Application &
{ 
public 

class 
AppointmentsService $
:% & 
IAppointmentsService' ;
{ 
private		 
readonly		 #
IAppointmentsRepository		 0#
_appointmentsRepository		1 H
;		H I
public

 
AppointmentsService

 "
(

" ##
IAppointmentsRepository

# :"
appointmentsRepository

; Q
)

Q R
{ 	#
_appointmentsRepository #
=$ %"
appointmentsRepository& <
;< =
} 	
public 
async 
Task 
Create  
(  !
Appointment! ,
appointment- 8
)8 9
{ 	
appointment 
. 
Id 
= 
Guid  
.  !
NewGuid! (
(( )
)) *
;* +
appointment 
. 
Payment 
=  !
new" %
Payment& -
(- .
). /
;/ 0
appointment 
. 
Payment 
.  
Id  "
=# $
Guid% )
.) *
NewGuid* 1
(1 2
)2 3
;3 4
appointment 
. 
Payment 
.  
DueDate  '
=( )
DateTime* 2
.2 3
Now3 6
;6 7
appointment 
. 
Payment 
.  
AcquittedDate  -
=. /
DateTime0 8
.8 9
Now9 <
;< =
appointment 
. 
Payment 
.  
EmissionDate  ,
=- .
DateTime/ 7
.7 8
Now8 ;
;; <
await #
_appointmentsRepository )
.) *
Create* 0
(0 1
appointment1 <
)< =
;= >
} 	
public 
async 
Task 
< 
Result  
>  !
Delete" (
(( )
Guid) -
id. 0
)0 1
{ 	
Appointment 
? 
appointment $
=% &
await' ,#
_appointmentsRepository- D
.D E
GetByIdE L
(L M
idM O
)O P
;P Q
if 
( 
appointment 
== 
null "
)" #
{ 
return   
Result   
.   
Failure   %
(  % &
$"  & (
$str  ( <
{  < =
id  = ?
}  ? @
$str  @ K
"  K L
)  L M
;  M N
}!! 
await"" #
_appointmentsRepository"" )
."") *
Delete""* 0
(""0 1
appointment""1 <
)""< =
;""= >
return## 
Result## 
.## 
Success## !
(##! "
)##" #
;### $
}$$ 	
public&& 
async&& 
Task&& 
<&& 
Result&&  
<&&  !
IEnumerable&&! ,
<&&, -
Appointment&&- 8
>&&8 9
>&&9 :
>&&: ;
GetAll&&< B
(&&B C
)&&C D
{'' 	
var(( 
appointments(( 
=(( 
await(( $#
_appointmentsRepository((% <
.((< =
GetAll((= C
(((C D
)((D E
;((E F
if)) 
()) 
!)) 
appointments)) 
.)) 
Any)) !
())! "
)))" #
)))# $
{** 
return++ 
Result++ 
<++ 
IEnumerable++ )
<++) *
Appointment++* 5
>++5 6
>++6 7
.++7 8
Failure++8 ?
(++? @
$"++@ B
$str++B X
"++X Y
)++Y Z
;++Z [
},, 
return-- 
Result-- 
<-- 
IEnumerable-- %
<--% &
Appointment--& 1
>--1 2
>--2 3
.--3 4
Success--4 ;
(--; <
appointments--< H
)--H I
;--I J
}.. 	
public00 
async00 
Task00 
<00 
Result00  
<00  !
Appointment00! ,
>00, -
>00- .
GetById00/ 6
(006 7
Guid007 ;
id00< >
)00> ?
{11 	
var22 
appointment22 
=22 
await22 ##
_appointmentsRepository22$ ;
.22; <
GetById22< C
(22C D
id22D F
)22F G
;22G H
if33 
(33 
appointment33 
==33 
null33 "
)33" #
{44 
return55 
Result55 
<55 
Appointment55 )
>55) *
.55* +
Failure55+ 2
(552 3
$"553 5
$str555 J
{55J K
id55K M
}55M N
$str55N ^
"55^ _
)55_ `
;55` a
}66 
return77 
Result77 
<77 
Appointment77 %
>77% &
.77& '
Success77' .
(77. /
appointment77/ :
)77: ;
;77; <
}88 	
public:: 
async:: 
Task:: 
SaveChanges:: %
(::% &
)::& '
{;; 	
await<< #
_appointmentsRepository<< )
.<<) *
SaveChanges<<* 5
(<<5 6
)<<6 7
;<<7 8
}== 	
public?? 
async?? 
Task?? 
<?? 
Result??  
<??  !
Appointment??! ,
>??, -
>??- .
Update??/ 5
(??5 6
Appointment??6 A
appointment??B M
,??M N
Guid??O S
id??T V
)??V W
{@@ 	
varAA 
currentAppointmentAA "
=AA# $
awaitAA% *#
_appointmentsRepositoryAA+ B
.AAB C
GetByIdAAC J
(AAJ K
idAAK M
)AAM N
;AAN O
ifBB 
(BB 
currentAppointmentBB "
==BB# %
nullBB& *
)BB* +
{CC 
returnDD 
ResultDD 
<DD 
AppointmentDD )
>DD) *
.DD* +
FailureDD+ 2
(DD2 3
$"DD3 5
$strDD5 J
{DDJ K
idDDK M
}DDM N
$strDDN ^
"DD^ _
)DD_ `
;DD` a
}FF 
currentAppointmentHH 
.HH 
LocationHH '
=HH( )
appointmentHH* 5
.HH5 6
LocationHH6 >
;HH> ?
currentAppointmentII 
.II 
SpecializationII -
=II. /
appointmentII0 ;
.II; <
SpecializationII< J
;IIJ K
currentAppointmentJJ 
.JJ 
AppointmentTimeJJ .
=JJ/ 0
appointmentJJ1 <
.JJ< =
AppointmentTimeJJ= L
;JJL M
awaitLL #
_appointmentsRepositoryLL )
.LL) *
SaveChangesLL* 5
(LL5 6
)LL6 7
;LL7 8
returnNN 
ResultNN 
<NN 
AppointmentNN %
>NN% &
.NN& '
SuccessNN' .
(NN. /
currentAppointmentNN/ A
)NNA B
;NNB C
}OO 	
}PP 
}QQ à
VE:\repo2\MyDocAppointment\MyDocAppointment.Application\Commands\CreateDoctorCommand.cs
	namespace 	
MyDocAppointment
 
. 
Application &
.& '
Commands' /
{ 
public 

class 
CreateDoctorCommand $
:% &
IRequest' /
</ 0
DoctorResponse0 >
>> ?
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
public		 
string		 
Surname		 
{		 
get		  #
;		# $
set		% (
;		( )
}		* +
=		, -
string		. 4
.		4 5
Empty		5 :
;		: ;
public

 
int

 
Age

 
{

 
get

 
;

 
set

 !
;

! "
}

# $
public 
string 
Gender 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
string- 3
.3 4
Empty4 9
;9 :
public 
string 
EmailAddress "
{# $
get% (
;( )
set* -
;- .
}/ 0
=1 2
string3 9
.9 :
Empty: ?
;? @
public 
string 
PhoneNumber !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
string2 8
.8 9
Empty9 >
;> ?
public 
string 
HomeAddress !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
string2 8
.8 9
Empty9 >
;> ?
public 
string 

Speciality  
{! "
get# &
;& '
set( +
;+ ,
}- .
=/ 0
string1 7
.7 8
Empty8 =
;= >
} 
} 
_E:\repo2\MyDocAppointment\MyDocAppointment.Application\Commands\CreateDoctorCommandValidator.cs
	namespace 	
MyDocAppointment
 
. 
Application &
.& '
Commands' /
{ 
public 

class (
CreateDoctorCommandValidator -
:. /
AbstractValidator0 A
<A B
CreateDoctorCommandB U
>U V
{ 
public (
CreateDoctorCommandValidator +
(+ ,
), -
{ 	
RuleFor		 
(		 
x		 
=>		 
x		 
.		 
Name		 
)		  
.		  !
Length		! '
(		' (
$num		( )
,		) *
$num		+ -
)		- .
;		. /
RuleFor

 
(

 
x

 
=>

 
x

 
.

 
Surname

 "
)

" #
.

# $
Length

$ *
(

* +
$num

+ ,
,

, -
$num

. 0
)

0 1
;

1 2
RuleFor 
( 
x 
=> 
x 
. 
EmailAddress '
)' (
.( )
EmailAddress) 5
(5 6
)6 7
;7 8
RuleFor 
( 
x 
=> 
x 
. 
Age 
) 
.  
InclusiveBetween  0
(0 1
$num1 3
,3 4
$num5 7
)7 8
;8 9
RuleFor 
( 
x 
=> 
x 
. 
PhoneNumber &
)& '
.' (
Length( .
(. /
$num/ 1
)1 2
;2 3
RuleFor 
( 
x 
=> 
x 
. 
HomeAddress &
)& '
.' (
Length( .
(. /
$num/ 0
,0 1
$num2 4
)4 5
;5 6
RuleFor 
( 
x 
=> 
x 
. 

Speciality %
)% &
.& '
NotNull' .
(. /
)/ 0
;0 1
} 	
} 
} Í
YE:\repo2\MyDocAppointment\MyDocAppointment.Application\Commands\CreateDrugStockCommand.cs
	namespace 	
MyDocAppointment
 
. 
Application &
.& '
Commands' /
{ 
public 

class "
CreateDrugEntryCommand '
:( )
IRequest* 2
<2 3
DrugEntryResponse3 D
>D E
{ 
public 
Guid 
DrugId 
{ 
get  
;  !
set" %
;% &
}' (
public		 
string		 
?		 
DrugName		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
public

 
int

 
Quantity

 
{

 
get

 !
;

! "
set

# &
;

& '
}

( )
public 
string 
? 
ExpirationDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
} 
} «
bE:\repo2\MyDocAppointment\MyDocAppointment.Application\Commands\CreateDrugStockCommandValidator.cs
	namespace 	
MyDocAppointment
 
. 
Application &
.& '
Commands' /
{ 
public 

class +
CreateDrugEntryCommandValidator 0
:1 2
AbstractValidator3 D
<D E"
CreateDrugEntryCommandE [
>[ \
{ 
public +
CreateDrugEntryCommandValidator .
(. /
)/ 0
{ 	
RuleFor		 
(		 
x		 
=>		 
x		 
.		 
DrugId		 !
)		! "
.		" #
NotNull		# *
(		* +
)		+ ,
;		, -
RuleFor

 
(

 
x

 
=>

 
x

 
.

 
DrugName

 #
)

# $
.

$ %
Length

% +
(

+ ,
$num

, -
,

- .
$num

/ 1
)

1 2
;

2 3
RuleFor 
( 
x 
=> 
x 
. 
Quantity #
)# $
.$ %
InclusiveBetween% 5
(5 6
$num6 7
,7 8
$num9 <
)< =
;= >
RuleFor 
( 
x 
=> 
x 
. 
ExpirationDate )
)) *
.* +
NotNull+ 2
(2 3
)3 4
;4 5
} 	
} 
} ¦
KE:\repo2\MyDocAppointment\MyDocAppointment.Application\ConfigureServices.cs
	namespace 	
MyDocAppointment
 
. 
Application &
{ 
public		 

static		 
class		 
ConfigureServices		 )
{

 
public 
static 
IServiceCollection ("
AddApplicationServices) ?
( 
this 
IServiceCollection $
services% -
)- .
{ 	
services 
. %
AddValidatorsFromAssembly .
(. /
Assembly/ 7
.7 8 
GetExecutingAssembly8 L
(L M
)M N
)N O
;O P
services 
. 
	AddScoped 
< 
IDoctorsService .
,. /
DoctorsService0 >
>> ?
(? @
)@ A
;A B
services 
. 
	AddScoped 
< 
IPatientsService /
,/ 0
PatientsService1 @
>@ A
(A B
)B C
;C D
services 
. 
	AddScoped 
< 
IDrugsService ,
,, -
DrugsService. :
>: ;
(; <
)< =
;= >
services 
. 
	AddScoped 
<  
IAppointmentsService 3
,3 4
AppointmentsService5 H
>H I
(I J
)J K
;K L
services 
. 
AddAutoMapper "
(" #
Assembly# +
.+ , 
GetExecutingAssembly, @
(@ A
)A B
)B C
;C D
services 
. 

AddMediatR 
(  
Assembly  (
.( ) 
GetExecutingAssembly) =
(= >
)> ?
)? @
;@ A
return 
services 
; 
} 	
} 
} ù7
GE:\repo2\MyDocAppointment\MyDocAppointment.Application\DoctorService.cs
	namespace 	
MyDocAppointment
 
. 
Application &
{ 
public 

class 
DoctorsService 
:  !
IDoctorsService" 1
{ 
private		 
readonly		 
IDoctorsRepository		 +
_doctorsRepository		, >
;		> ?
public

 
DoctorsService

 
(

 
IDoctorsRepository

 0
doctorsRepository

1 B
)

B C
{ 	
_doctorsRepository 
=  
doctorsRepository! 2
;2 3
} 	
public 
async 
Task 
Create  
(  !
Doctor! '
doctor( .
). /
{ 	
await 
_doctorsRepository $
.$ %
Create% +
(+ ,
doctor, 2
)2 3
;3 4
} 	
public 
async 
Task 
< 
Result  
>  !
Delete" (
(( )
Guid) -
id. 0
)0 1
{ 	
Doctor 
? 
doctor 
= 
await "
_doctorsRepository# 5
.5 6
GetById6 =
(= >
id> @
)@ A
;A B
if 
( 
doctor 
== 
null 
) 
{ 
return 
Result 
. 
Failure %
(% &
$"& (
$str( 7
{7 8
id8 :
}: ;
$str; F
"F G
)G H
;H I
} 
await 
_doctorsRepository $
.$ %
Delete% +
(+ ,
doctor, 2
)2 3
;3 4
return 
Result 
. 
Success !
(! "
)" #
;# $
} 	
public 
async 
Task 
< 
Result  
<  !
IEnumerable! ,
<, -
Doctor- 3
>3 4
>4 5
>5 6
GetAll7 =
(= >
)> ?
{   	
var!! 
doctors!! 
=!! 
await!! 
_doctorsRepository!!  2
.!!2 3
GetAll!!3 9
(!!9 :
)!!: ;
;!!; <
if"" 
("" 
!"" 
doctors"" 
."" 
Any"" 
("" 
)"" 
)"" 
{## 
return$$ 
Result$$ 
<$$ 
IEnumerable$$ )
<$$) *
Doctor$$* 0
>$$0 1
>$$1 2
.$$2 3
Failure$$3 :
($$: ;
$"$$; =
$str$$= N
"$$N O
)$$O P
;$$P Q
}%% 
return&& 
Result&& 
<&& 
IEnumerable&& %
<&&% &
Doctor&&& ,
>&&, -
>&&- .
.&&. /
Success&&/ 6
(&&6 7
doctors&&7 >
)&&> ?
;&&? @
}'' 	
public)) 
async)) 
Task)) 
<)) 
Result))  
<))  !
Doctor))! '
>))' (
>))( )
GetById))* 1
())1 2
Guid))2 6
id))7 9
)))9 :
{** 	
var++ 
doctor++ 
=++ 
await++ 
_doctorsRepository++ 1
.++1 2
GetById++2 9
(++9 :
id++: <
)++< =
;++= >
if,, 
(,, 
doctor,, 
==,, 
null,, 
),, 
{-- 
return.. 
Result.. 
<.. 
Doctor.. $
>..$ %
...% &
Failure..& -
(..- .
$"... 0
$str..0 @
{..@ A
id..A C
}..C D
$str..D T
"..T U
)..U V
;..V W
}// 
return00 
Result00 
<00 
Doctor00  
>00  !
.00! "
Success00" )
(00) *
doctor00* 0
)000 1
;001 2
}11 	
public33 
async33 
Task33 
SaveChanges33 %
(33% &
)33& '
{44 	
await55 
_doctorsRepository55 $
.55$ %
SaveChanges55% 0
(550 1
)551 2
;552 3
}66 	
public88 
async88 
Task88 
<88 
Result88  
<88  !
Doctor88! '
>88' (
>88( )
Update88* 0
(880 1
Doctor881 7
doctor888 >
,88> ?
Guid88@ D
doctorId88E M
)88M N
{99 	
var:: 
currentDoctor:: 
=:: 
await::  %
_doctorsRepository::& 8
.::8 9
GetById::9 @
(::@ A
doctorId::A I
)::I J
;::J K
if;; 
(;; 
currentDoctor;; 
==;;  
null;;! %
);;% &
{<< 
return== 
Result== 
<== 
Doctor== $
>==$ %
.==% &
Failure==& -
(==- .
$"==. 0
$str==0 @
{==@ A
doctorId==A I
}==I J
$str==J Z
"==Z [
)==[ \
;==\ ]
}?? 
currentDoctorAA 
.AA 
NameAA 
=AA  
doctorAA! '
.AA' (
NameAA( ,
;AA, -
currentDoctorBB 
.BB 
SurnameBB !
=BB" #
doctorBB$ *
.BB* +
SurnameBB+ 2
;BB2 3
currentDoctorCC 
.CC 
AgeCC 
=CC 
doctorCC  &
.CC& '
AgeCC' *
;CC* +
currentDoctorDD 
.DD 
GenderDD  
=DD! "
doctorDD# )
.DD) *
GenderDD* 0
;DD0 1
currentDoctorEE 
.EE 
EmailAddressEE &
=EE' (
doctorEE) /
.EE/ 0
EmailAddressEE0 <
;EE< =
currentDoctorFF 
.FF 
PhoneNumberFF %
=FF& '
doctorFF( .
.FF. /
PhoneNumberFF/ :
;FF: ;
currentDoctorGG 
.GG 
HomeAddressGG %
=GG& '
doctorGG( .
.GG. /
HomeAddressGG/ :
;GG: ;
currentDoctorHH 
.HH 

SpecialityHH $
=HH% &
doctorHH' -
.HH- .

SpecialityHH. 8
;HH8 9
awaitJJ 
_doctorsRepositoryJJ $
.JJ$ %
SaveChangesJJ% 0
(JJ0 1
)JJ1 2
;JJ2 3
returnLL 
ResultLL 
<LL 
DoctorLL  
>LL  !
.LL! "
SuccessLL" )
(LL) *
currentDoctorLL* 7
)LL7 8
;LL8 9
}MM 	
}NN 
}OO 2
FE:\repo2\MyDocAppointment\MyDocAppointment.Application\DrugsService.cs
	namespace 	
MyDocAppointment
 
. 
Application &
{ 
public 

class 
DrugsService 
: 
IDrugsService  -
{ 
private		 
readonly		 
IDrugsRepository		 )
_drugsRepository		* :
;		: ;
public

 
DrugsService

 
(

 
IDrugsRepository

 ,
drugsRepository

- <
)

< =
{ 	
_drugsRepository 
= 
drugsRepository .
;. /
} 	
public 
async 
Task 
Create  
(  !
Drug! %
drug& *
)* +
{ 	
await 
_drugsRepository "
." #
Create# )
() *
drug* .
). /
;/ 0
} 	
public 
async 
Task 
< 
Result  
>  !
Delete" (
(( )
Guid) -
id. 0
)0 1
{ 	
var 
drug 
= 
await 
_drugsRepository -
.- .
GetById. 5
(5 6
id6 8
)8 9
;9 :
if 
( 
drug 
== 
null 
) 
{ 
return 
Result 
. 
Failure %
(% &
$"& (
$str( 5
{5 6
id6 8
}8 9
$str9 D
"D E
)E F
;F G
} 
await 
_drugsRepository "
." #
Delete# )
() *
drug* .
). /
;/ 0
return 
Result 
. 
Success !
(! "
)" #
;# $
} 	
public 
async 
Task 
< 
Result  
<  !
IEnumerable! ,
<, -
Drug- 1
>1 2
>2 3
>3 4
GetAll5 ;
(; <
)< =
{   	
var!! 
drugs!! 
=!! 
await!! 
_drugsRepository!! .
.!!. /
GetAll!!/ 5
(!!5 6
)!!6 7
;!!7 8
if"" 
("" 
!"" 
drugs"" 
."" 
Any"" 
("" 
)"" 
)"" 
{## 
return$$ 
Result$$ 
<$$ 
IEnumerable$$ )
<$$) *
Drug$$* .
>$$. /
>$$/ 0
.$$0 1
Failure$$1 8
($$8 9
$"$$9 ;
$str$$; J
"$$J K
)$$K L
;$$L M
}%% 
return&& 
Result&& 
<&& 
IEnumerable&& %
<&&% &
Drug&&& *
>&&* +
>&&+ ,
.&&, -
Success&&- 4
(&&4 5
drugs&&5 :
)&&: ;
;&&; <
}'' 	
public)) 
async)) 
Task)) 
<)) 
Result))  
<))  !
Drug))! %
>))% &
>))& '
GetById))( /
())/ 0
Guid))0 4
id))5 7
)))7 8
{** 	
var++ 
drug++ 
=++ 
await++ 
_drugsRepository++ -
.++- .
GetById++. 5
(++5 6
id++6 8
)++8 9
;++9 :
if,, 
(,, 
drug,, 
==,, 
null,, 
),, 
{-- 
return.. 
Result.. 
<.. 
Drug.. "
>.." #
...# $
Failure..$ +
(..+ ,
$".., .
$str... <
{..< =
id..= ?
}..? @
$str..@ P
"..P Q
)..Q R
;..R S
}// 
return00 
Result00 
<00 
Drug00 
>00 
.00  
Success00  '
(00' (
drug00( ,
)00, -
;00- .
}11 	
public33 
async33 
Task33 
SaveChanges33 %
(33% &
)33& '
{44 	
await55 
_drugsRepository55 "
.55" #
SaveChanges55# .
(55. /
)55/ 0
;550 1
}66 	
public88 
async88 
Task88 
<88 
Result88  
<88  !
Drug88! %
>88% &
>88& '
Update88( .
(88. /
Drug88/ 3
drug884 8
,888 9
Guid88: >
drugId88? E
)88E F
{99 	
var:: 
currentDrug:: 
=:: 
await:: #
_drugsRepository::$ 4
.::4 5
GetById::5 <
(::< =
drugId::= C
)::C D
;::D E
if;; 
(;; 
currentDrug;; 
==;; 
null;; #
);;# $
{<< 
return== 
Result== 
<== 
Drug== "
>==" #
.==# $
Failure==$ +
(==+ ,
$"==, .
$str==. <
{==< =
drugId=== C
}==C D
$str==D T
"==T U
)==U V
;==V W
}?? 
currentDrugAA 
.AA 
NameAA 
=AA 
drugAA #
.AA# $
NameAA$ (
;AA( )
currentDrugBB 
.BB 
VendorBB 
=BB  
drugBB! %
.BB% &
VendorBB& ,
;BB, -
currentDrugCC 
.CC 
CategoryCC  
=CC! "
drugCC# '
.CC' (
CategoryCC( 0
;CC0 1
currentDrugDD 
.DD 
PriceDD 
=DD 
drugDD  $
.DD$ %
PriceDD% *
;DD* +
awaitFF 
_drugsRepositoryFF "
.FF" #
SaveChangesFF# .
(FF. /
)FF/ 0
;FF0 1
returnHH 
ResultHH 
<HH 
DrugHH 
>HH 
.HH  
SuccessHH  '
(HH' (
currentDrugHH( 3
)HH3 4
;HH4 5
}II 	
}JJ 
}KK  
]E:\repo2\MyDocAppointment\MyDocAppointment.Application\Handlers\CreateDoctorCommandHandler.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Handlers '
{		 
public

 

class

 &
CreateDoctorCommandHandler

 +
:

, -
IRequestHandler 
< 
CreateDoctorCommand +
,+ ,
DoctorResponse 
> 
{ 
private 
readonly 
IDoctorsRepository +

repository, 6
;6 7
public &
CreateDoctorCommandHandler )
() *
IDoctorsRepository* <

repository= G
)G H
{ 	
this 
. 

repository 
= 

repository (
;( )
} 	
public 
async 
Task 
< 
DoctorResponse (
>( )
Handle 
( 
CreateDoctorCommand &
request' .
,. /
CancellationToken 
cancellationToken /
)/ 0
{ 	
var 
doctorEntity 
= 
DoctorMapper +
.+ ,
Mapper, 2
.2 3
Map3 6
<6 7
Doctor7 =
>= >
(> ?
request? F
)F G
;G H
if 
( 
doctorEntity 
== 
null  $
)$ %
{ 
throw 
new  
ApplicationException .
(. /
$str/ F
)F G
;G H
} 
var 
	newDoctor 
= 
await !

repository" ,
., -
AddAsync- 5
(5 6
doctorEntity6 B
)B C
;C D
return 
DoctorMapper 
.  
Mapper  &
.& '
Map' *
<* +
DoctorResponse+ 9
>9 :
(: ;
	newDoctor; D
)D E
;E F
} 	
}   
}!! ¢
aE:\repo2\MyDocAppointment\MyDocAppointment.Application\Handlers\CreateDrugStocksCommandHandler.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Handlers '
{		 
public

 

class

 *
CreateDrugEntrysCommandHandler

 /
:

0 1
IRequestHandler 
< "
CreateDrugEntryCommand .
,. /
DrugEntryResponse 
> 
{ 
private 
readonly !
IDrugEntrysRepository .
_repository/ :
;: ;
public *
CreateDrugEntrysCommandHandler -
(- .!
IDrugEntrysRepository. C

repositoryD N
)N O
{ 	
_repository 
= 

repository $
;$ %
} 	
public 
async 
Task 
< 
DrugEntryResponse +
>+ ,
Handle 
( "
CreateDrugEntryCommand )
request* 1
,1 2
CancellationToken 
cancellationToken /
)/ 0
{ 	
var 
drugStockEntity 
=  !
DrugEntryMapper" 1
.1 2
Mapper2 8
.8 9
Map9 <
<< =
	DrugEntry= F
>F G
(G H
requestH O
)O P
;P Q
if 
( 
drugStockEntity 
==  "
null# '
)' (
{ 
throw 
new  
ApplicationException .
(. /
$str/ F
)F G
;G H
} 
	DrugEntry 
drugItem 
=  
await! &
_repository' 2
.2 3
GetDrug3 :
(: ;
drugStockEntity; J
.J K
DrugK O
.O P
IdP R
)R S
;S T
drugStockEntity 
= 
drugItem &
;& '
var   
newDrugEntry   
=   
await   $
_repository  % 0
.  0 1
AddAsync  1 9
(  9 :
drugStockEntity  : I
)  I J
;  J K
return!! 
DrugEntryMapper!! "
.!!" #
Mapper!!# )
.!!) *
Map!!* -
<!!- .
DrugEntryResponse!!. ?
>!!? @
(!!@ A
newDrugEntry!!A M
)!!M N
;!!N O
}"" 	
}## 
}$$ ê
NE:\repo2\MyDocAppointment\MyDocAppointment.Application\Mappers\DoctorMapper.cs
	namespace 	
MyDocAppointment
 
. 
Application &
.& '
Mappers' .
{ 
public 

static 
class 
DoctorMapper $
{ 
private 
static 
Lazy 
< 
IMapper #
># $
Lazy% )
=* +
new 
Lazy 
< 
IMapper 
> 
( 
( 
) 
=>  "
{		 
var

 
config

 
=

 
new

 
MapperConfiguration

  3
(

3 4
cfg

4 7
=>

8 :
{ 
cfg 
. 
ShouldMapProperty (
=) *
p+ ,
=>- /
{0 1
System 
. 

Reflection (
.( )

MethodInfo) 3
?3 4
	getMethod5 >
=? @
pA B
.B C
	GetMethodC L
;L M
return 
	getMethod '
.' (
IsPublic( 0
||1 3
p* +
.+ ,
	GetMethod, 5
.5 6

IsAssembly6 @
;@ A
} 
; 
cfg 
. 

AddProfile !
<! " 
DoctorMappingProfile" 6
>6 7
(7 8
)8 9
;9 :
} 
) 
; 
var 
mapper 
= 
config "
." #
CreateMapper# /
(/ 0
)0 1
;1 2
return 
mapper 
; 
} 
) 
; 
public 
static 
IMapper 
Mapper $
=>% '
Lazy( ,
., -
Value- 2
;2 3
} 
} ¿
VE:\repo2\MyDocAppointment\MyDocAppointment.Application\Mappers\DoctorMappingProfile.cs
	namespace 	
MyDocAppointment
 
. 
Application &
.& '
Mappers' .
{ 
public 

class  
DoctorMappingProfile %
:& '
Profile( /
{		 
public

  
DoctorMappingProfile

 #
(

# $
)

$ %
{ 	
	CreateMap 
< 
Doctor 
, 
DoctorResponse ,
>, -
(- .
). /
./ 0

ReverseMap0 :
(: ;
); <
;< =
	CreateMap 
< 
Doctor 
, 
CreateDoctorCommand 1
>1 2
(2 3
)3 4
.4 5

ReverseMap5 ?
(? @
)@ A
;A B
} 	
} 
} ó
QE:\repo2\MyDocAppointment\MyDocAppointment.Application\Mappers\DrugStockMapper.cs
	namespace 	
MyDocAppointment
 
. 
Application &
.& '
Mappers' .
{ 
public 

static 
class 
DrugEntryMapper '
{ 
private 
static 
Lazy 
< 
IMapper #
># $
Lazy% )
=* +
new 
Lazy 
< 
IMapper 
> 
( 
( 
) 
=>  "
{		 
var

 
config

 
=

 
new

 
MapperConfiguration

  3
(

3 4
cfg

4 7
=>

8 :
{ 
cfg 
. 
ShouldMapProperty (
=) *
p+ ,
=>- /
{0 1
System 
. 

Reflection (
.( )

MethodInfo) 3
?3 4
	getMethod5 >
=? @
pA B
.B C
	GetMethodC L
;L M
return 
	getMethod '
.' (
IsPublic( 0
||1 3
p* +
.+ ,
	GetMethod, 5
.5 6

IsAssembly6 @
;@ A
} 
; 
cfg 
. 

AddProfile !
<! "#
DrugEntryMappingProfile" 9
>9 :
(: ;
); <
;< =
} 
) 
; 
var 
mapper 
= 
config "
." #
CreateMapper# /
(/ 0
)0 1
;1 2
return 
mapper 
; 
} 
) 
; 
public 
static 
IMapper 
Mapper $
=>% '
Lazy( ,
., -
Value- 2
;2 3
} 
} 
YE:\repo2\MyDocAppointment\MyDocAppointment.Application\Mappers\DrugStockMappingProfile.cs
	namespace 	
MyDocAppointment
 
. 
Application &
.& '
Mappers' .
{ 
public 

class #
DrugEntryMappingProfile (
:) *
Profile+ 2
{		 
public

 #
DrugEntryMappingProfile

 &
(

& '
)

' (
{ 	
	CreateMap 
< 
	DrugEntry 
,  
DrugEntryResponse! 2
>2 3
(3 4
)4 5
. 
	ForMember 
( 
dest 
=>  "
dest# '
.' (
DrugId( .
,. /
opt 
=> 
opt 
. 
MapFrom "
(" #
src# &
=>' )
src* -
.- .
Drug. 2
.2 3
Id3 5
)5 6
)6 7
. 
	ForMember 
( 
dest 
=>  "
dest# '
.' (
DrugName( 0
,0 1
opt 
=> 
opt 
. 
MapFrom "
(" #
src# &
=>' )
src* -
.- .
Drug. 2
.2 3
Name3 7
)7 8
)8 9
. 

ReverseMap 
( 
) 
; 
	CreateMap 
< 
	DrugEntry 
,  "
CreateDrugEntryCommand! 7
>7 8
(8 9
)9 :
. 
	ForMember 
( 
dest  
=>! #
dest$ (
.( )
DrugId) /
,/ 0
opt 
=> 
opt 
. 
MapFrom "
(" #
src# &
=>' )
src* -
.- .
Drug. 2
.2 3
Id3 5
)5 6
)6 7
. 
	ForMember 
( 
dest  
=>! #
dest$ (
.( )
DrugName) 1
,1 2
opt 
=> 
opt 
. 
MapFrom "
(" #
src# &
=>' )
src* -
.- .
Drug. 2
.2 3
Name3 7
)7 8
)8 9
. 

ReverseMap 
( 
) 
; 
} 	
} 
} 7
IE:\repo2\MyDocAppointment\MyDocAppointment.Application\PatientsService.cs
	namespace 	
MyDocAppointment
 
. 
Application &
{ 
public 

class 
PatientsService  
:! "
IPatientsService# 3
{ 
private		 
readonly		 
IPatientsRepository		 ,
_patientsRepository		- @
;		@ A
public

 
PatientsService

 
(

 
IPatientsRepository

 2
patientsRepository

3 E
)

E F
{ 	
_patientsRepository 
=  !
patientsRepository" 4
;4 5
} 	
public 
async 
Task 
Create  
(  !
Patient! (
patient) 0
)0 1
{ 	
await 
_patientsRepository %
.% &
Create& ,
(, -
patient- 4
)4 5
;5 6
} 	
public 
async 
Task 
< 
Result  
>  !
Delete" (
(( )
Guid) -
id. 0
)0 1
{ 	
var 
patient 
= 
await 
_patientsRepository  3
.3 4
GetById4 ;
(; <
id< >
)> ?
;? @
if 
( 
patient 
== 
null 
)  
{ 
return 
Result 
. 
Failure %
(% &
$"& (
$str( 9
{9 :
id: <
}< =
$str= M
"M N
)N O
;O P
} 
await 
_patientsRepository %
.% &
Delete& ,
(, -
patient- 4
)4 5
;5 6
return 
Result 
. 
Success !
(! "
)" #
;# $
} 	
public 
async 
Task 
< 
Result  
<  !
IEnumerable! ,
<, -
Patient- 4
>4 5
>5 6
>6 7
GetAll8 >
(> ?
)? @
{   	
var!! 
patients!! 
=!! 
await!!  
_patientsRepository!!! 4
.!!4 5
GetAll!!5 ;
(!!; <
)!!< =
;!!= >
if"" 
("" 
!"" 
patients"" 
."" 
Any"" 
("" 
)"" 
)""  
{## 
return$$ 
Result$$ 
<$$ 
IEnumerable$$ )
<$$) *
Patient$$* 1
>$$1 2
>$$2 3
.$$3 4
Failure$$4 ;
($$; <
$"$$< >
$str$$> N
"$$N O
)$$O P
;$$P Q
}%% 
return&& 
Result&& 
<&& 
IEnumerable&& %
<&&% &
Patient&&& -
>&&- .
>&&. /
.&&/ 0
Success&&0 7
(&&7 8
patients&&8 @
)&&@ A
;&&A B
}'' 	
public)) 
async)) 
Task)) 
<)) 
Result))  
<))  !
Patient))! (
>))( )
>))) *
GetById))+ 2
())2 3
Guid))3 7
id))8 :
))): ;
{** 	
var++ 
patient++ 
=++ 
await++ 
_patientsRepository++  3
.++3 4
GetById++4 ;
(++; <
id++< >
)++> ?
;++? @
if,, 
(,, 
patient,, 
==,, 
null,, 
),, 
{-- 
return.. 
Result.. 
<.. 
Patient.. %
>..% &
...& '
Failure..' .
(... /
$"../ 1
$str..1 B
{..B C
id..C E
}..E F
$str..F V
"..V W
)..W X
;..X Y
}// 
return00 
Result00 
<00 
Patient00 !
>00! "
.00" #
Success00# *
(00* +
patient00+ 2
)002 3
;003 4
}11 	
public33 
async33 
Task33 
SaveChanges33 %
(33% &
)33& '
{44 	
await55 
_patientsRepository55 %
.55% &
SaveChanges55& 1
(551 2
)552 3
;553 4
}66 	
public88 
async88 
Task88 
<88 
Result88  
<88  !
Patient88! (
>88( )
>88) *
Update88+ 1
(881 2
Patient882 9
patient88: A
,88A B
Guid88C G
	patientId88H Q
)88Q R
{99 	
var:: 
currentPatient:: 
=::  
await::! &
_patientsRepository::' :
.::: ;
GetById::; B
(::B C
	patientId::C L
)::L M
;::M N
if;; 
(;; 
currentPatient;; 
==;; !
null;;" &
);;& '
{<< 
return== 
Result== 
<== 
Patient== %
>==% &
.==& '
Failure==' .
(==. /
$"==/ 1
$str==1 B
{==B C
	patientId==C L
}==L M
$str==M ]
"==] ^
)==^ _
;==_ `
}>> 
currentPatient@@ 
.@@ 
Name@@ 
=@@  !
patient@@" )
.@@) *
Name@@* .
;@@. /
currentPatientAA 
.AA 
SurnameAA "
=AA# $
patientAA% ,
.AA, -
SurnameAA- 4
;AA4 5
currentPatientBB 
.BB 
AgeBB 
=BB  
patientBB! (
.BB( )
AgeBB) ,
;BB, -
currentPatientCC 
.CC 
GenderCC !
=CC" #
patientCC$ +
.CC+ ,
GenderCC, 2
;CC2 3
currentPatientDD 
.DD 
EmailAddressDD '
=DD( )
patientDD* 1
.DD1 2
EmailAddressDD2 >
;DD> ?
currentPatientEE 
.EE 
PhoneNumberEE &
=EE' (
patientEE) 0
.EE0 1
PhoneNumberEE1 <
;EE< =
currentPatientFF 
.FF 
HomeAddressFF &
=FF' (
patientFF) 0
.FF0 1
HomeAddressFF1 <
;FF< =
awaitHH 
_patientsRepositoryHH %
.HH% &
SaveChangesHH& 1
(HH1 2
)HH2 3
;HH3 4
returnJJ 
ResultJJ 
<JJ 
PatientJJ !
>JJ! "
.JJ" #
SuccessJJ# *
(JJ* +
currentPatientJJ+ 9
)JJ9 :
;JJ: ;
}KK 	
}LL 
}MM ã
TE:\repo2\MyDocAppointment\MyDocAppointment.Application\Queries\GetAllDoctorsQuery.cs
	namespace 	
MyDocAppointment
 
. 
Application &
.& '
Queries' .
{ 
public 

class 
GetAllDoctorsQuery #
:$ %
IRequest& .
<. /
List/ 3
<3 4
DoctorResponse4 B
>B C
>C D
{ 
} 
}		 Ù
[E:\repo2\MyDocAppointment\MyDocAppointment.Application\Queries\GetAllDoctorsQueryHandler.cs
	namespace 	
MyDocAppointment
 
. 
Application &
.& '
Queries' .
{ 
public 

class %
GetAllDoctorsQueryHandler *
:+ ,
IRequestHandler- <
<< =
GetAllDoctorsQuery= O
,O P
ListQ U
<U V
DoctorResponseV d
>d e
>e f
{		 
private

 
readonly

 
IDoctorsRepository

 +
_repository

, 7
;

7 8
public %
GetAllDoctorsQueryHandler (
(( )
IDoctorsRepository) ;

repository< F
)F G
{ 	
_repository 
= 

repository $
;$ %
} 	
public 
async 
Task 
< 
List 
< 
DoctorResponse -
>- .
>. /
Handle0 6
(6 7
GetAllDoctorsQuery7 I
requestJ Q
,Q R
CancellationTokenS d
cancellationTokene v
)v w
{ 	
var 
result 
= 
DoctorMapper %
.% &
Mapper& ,
., -
Map- 0
<0 1
List1 5
<5 6
DoctorResponse6 D
>D E
>E F
( 
await 
_repository "
." #
GetAll# )
() *
)* +
)+ ,
;, -
return 
result 
; 
} 	
} 
} ì
WE:\repo2\MyDocAppointment\MyDocAppointment.Application\Queries\GetAllDrugStocksQuery.cs
	namespace 	
MyDocAppointment
 
. 
Application &
.& '
Queries' .
{ 
public 

class !
GetAllDrugEntrysQuery &
:' (
IRequest) 1
<1 2
List2 6
<6 7
DrugEntryResponse7 H
>H I
>I J
{ 
} 
}		 ú
^E:\repo2\MyDocAppointment\MyDocAppointment.Application\Queries\GetAllDrugStocksQueryHandler.cs
	namespace 	
MyDocAppointment
 
. 
Application &
.& '
Queries' .
{ 
public 

class (
GetAllDrugEntrysQueryHandler -
:. /
IRequestHandler0 ?
<? @!
GetAllDrugEntrysQuery@ U
,U V
ListW [
<[ \
DrugEntryResponse\ m
>m n
>n o
{		 
private

 
readonly

 !
IDrugEntrysRepository

 .
_repository

/ :
;

: ;
public (
GetAllDrugEntrysQueryHandler +
(+ ,!
IDrugEntrysRepository, A

repositoryB L
)L M
{ 	
_repository 
= 

repository $
;$ %
} 	
public 
async 
Task 
< 
List 
< 
DrugEntryResponse 0
>0 1
>1 2
Handle3 9
(9 :!
GetAllDrugEntrysQuery: O
requestP W
,W X
CancellationTokenY j
cancellationTokenk |
)| }
{ 	
var 
result 
= 
DrugEntryMapper (
.( )
Mapper) /
./ 0
Map0 3
<3 4
List4 8
<8 9
DrugEntryResponse9 J
>J K
>K L
( 
await 
_repository "
." #
GetAll# )
() *
)* +
)+ ,
;, -
return 
result 
; 
} 	
} 
} ¨
QE:\repo2\MyDocAppointment\MyDocAppointment.Application\Response\DoctorResponse.cs
	namespace 	
MyDocAppointment
 
. 
Application &
.& '
Response' /
{ 
public 

class 
DoctorResponse 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
string 
? 
Name 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
? 
Surname 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
int 
Age 
{ 
get 
; 
set !
;! "
}# $
public		 
string		 
?		 
Gender		 
{		 
get		  #
;		# $
set		% (
;		( )
}		* +
public

 
string

 
?

 
EmailAddress

 #
{

$ %
get

& )
;

) *
set

+ .
;

. /
}

0 1
public 
string 
? 
PhoneNumber "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
? 
HomeAddress "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
? 

Speciality !
{" #
get$ '
;' (
set) ,
;, -
}. /
} 
} à
SE:\repo2\MyDocAppointment\MyDocAppointment.Application\Response\DrugSockResponse.cs
	namespace 	
MyDocAppointment
 
. 
Application &
.& '
Response' /
{ 
public 

class 
DrugEntryResponse "
{ 
public 
string 
? 
DrugName 
{  !
get" %
;% &
set' *
;* +
}, -
public 
Guid 
DrugId 
{ 
get  
;  !
set" %
;% &
}' (
public 
int 
Quantity 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
? 
ExpirationDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
}		 
}

 