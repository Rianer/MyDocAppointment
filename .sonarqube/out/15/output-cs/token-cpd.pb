Æ
dF:\Documents\faculta\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\ConfigureServices.cs
public 
static 
class 
ConfigureServices %
{ 
public		 

static		 
IServiceCollection		 $!
AddControllerServices		% :
(

 	
this

	 
IServiceCollection

  
services

! )
)

) *
{ 
services 
. 
	AddScoped 
< 

IValidator %
<% & 
CreateAppointmentDto& :
>: ;
,; <)
CreateAppointmentDtoValidator= Z
>Z [
([ \
)\ ]
;] ^
services 
. 
	AddScoped 
< 

IValidator %
<% &
AppointmentDto& 4
>4 5
,5 6#
AppointmentDtoValidator7 N
>N O
(O P
)P Q
;Q R
services 
. 
	AddScoped 
< 

IValidator %
<% &
CreatePatientDto& 6
>6 7
,7 8%
CreatePatientDtoValidator9 R
>R S
(S T
)T U
;U V
services 
. 
	AddScoped 
< 

IValidator %
<% &

PatientDto& 0
>0 1
,1 2
PatientDtoValidator3 F
>F G
(G H
)H I
;I J
services 
. 
	AddScoped 
< 

IValidator %
<% &
CreateDrugDto& 3
>3 4
,4 5"
CreateDrugDtoValidator6 L
>L M
(M N
)N O
;O P
services 
. 
	AddScoped 
< 

IValidator %
<% &
DrugDto& -
>- .
,. /
DrugDtoValidator0 @
>@ A
(A B
)B C
;C D
services 
. -
!AddFluentValidationAutoValidation 2
(2 3
)3 4
;4 5
services 
. %
AddValidatorsFromAssembly *
(* +
Assembly+ 3
.3 4 
GetExecutingAssembly4 H
(H I
)I J
)J K
;K L
services 
. 
AddAutoMapper 
( 
Assembly '
.' ( 
GetExecutingAssembly( <
(< =
)= >
)> ?
;? @
services 
. 

AddMediatR 
( 
Assembly $
.$ % 
GetExecutingAssembly% 9
(9 :
): ;
); <
;< =
return 
services 
; 
} 
} »6
uF:\Documents\faculta\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Controllers\AppointmentsController.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Controllers *
{		 
[

 
Route

 

(


 
$str

 
)

 
]

 
[ 
ApiController 
] 
public 

class !
AppointmentController &
:' (
ControllerBase) 7
{ 
private 
readonly  
IAppointmentsService -
_appointmentService. A
;A B
private 
readonly 
IMapper  
_mapper! (
;( )
public !
AppointmentController $
($ % 
IAppointmentsService% 9
appointmentService: L
,L M
IMapperN U
mapperV \
)\ ]
{ 	
_appointmentService 
=  !
appointmentService" 4
;4 5
_mapper 
= 
mapper 
; 
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Get) ,
(, -
)- .
{ 	
var 
response 
= 
await  
_appointmentService! 4
.4 5
GetAll5 ;
(; <
)< =
;= >
if 
( 
! 
response 
. 
	IsSuccess #
)# $
{ 
return 
NotFound 
(  
response  (
.( )
Error) .
). /
;/ 0
} 
var   
models   
=   
_mapper    
.    !
Map  ! $
<  $ %
IEnumerable  % 0
<  0 1
AppointmentDto  1 ?
>  ? @
>  @ A
(  A B
response  B J
.  J K
Entity  K Q
)  Q R
;  R S
return"" 
Ok"" 
("" 
models"" 
)"" 
;"" 
}## 	
[%% 	
HttpPost%%	 
]%% 
public&& 
async&& 
Task&& 
<&& 
IActionResult&& '
>&&' (
Create&&) /
(&&/ 0
[&&0 1
FromBody&&1 9
]&&9 : 
CreateAppointmentDto&&; O
dto&&P S
)&&S T
{'' 	
var(( 
appointment(( 
=(( 
_mapper(( %
.((% &
Map((& )
<(() *
Appointment((* 5
>((5 6
(((6 7
dto((7 :
)((: ;
;((; <
await)) 
_appointmentService)) %
.))% &
Create))& ,
()), -
appointment))- 8
)))8 9
;))9 :
return++ 
Created++ 
(++ 
nameof++ !
(++! "
Get++" %
)++% &
,++& '
dto++( +
)+++ ,
;++, -
},, 	
[.. 	
HttpGet..	 
(.. 
$str.. '
)..' (
]..( )
public// 
async// 
Task// 
<// 
IActionResult// '
>//' (
GetById//) 0
(//0 1
Guid//1 5
appointmentId//6 C
)//C D
{00 	
var11 
response11 
=11 
await11  
_appointmentService11! 4
.114 5
GetById115 <
(11< =
appointmentId11= J
)11J K
;11K L
if22 
(22 
!22 
response22 
.22 
	IsSuccess22 #
)22# $
{33 
return44 
NotFound44 
(44  
response44  (
.44( )
Error44) .
)44. /
;44/ 0
}55 
var77 
model77 
=77 
_mapper77 
.77  
Map77  #
<77# $
AppointmentDto77$ 2
>772 3
(773 4
response774 <
.77< =
Entity77= C
)77C D
;77D E
return88 
Ok88 
(88 
model88 
)88 
;88 
}99 	
[;; 	

HttpDelete;;	 
(;; 
$str;; *
);;* +
];;+ ,
public<< 
async<< 
Task<< 
<<< 
IActionResult<< '
><<' (
Delete<<) /
(<</ 0
Guid<<0 4
appointmentId<<5 B
)<<B C
{== 	
var>> 
response>> 
=>> 
await>>  
_appointmentService>>! 4
.>>4 5
Delete>>5 ;
(>>; <
appointmentId>>< I
)>>I J
;>>J K
if?? 
(?? 
response?? 
.?? 
	IsSuccess?? "
)??" #
{@@ 
returnAA 
OkAA 
(AA 
)AA 
;AA 
}BB 
returnDD 
NotFoundDD 
(DD 
responseDD $
.DD$ %
ErrorDD% *
)DD* +
;DD+ ,
}EE 	
[GG 	
HttpPutGG	 
(GG 
$strGG '
)GG' (
]GG( )
publicHH 
asyncHH 
TaskHH 
<HH 
IActionResultHH '
>HH' (
UpdateHH) /
(HH/ 0
[HH0 1
FromBodyHH1 9
]HH9 :
AppointmentDtoHH; I
dtoHHJ M
,HHM N
GuidHHO S
appointmentIdHHT a
)HHa b
{II 	
varJJ 
appointmentJJ 
=JJ 
_mapperJJ %
.JJ% &
MapJJ& )
<JJ) *
AppointmentJJ* 5
>JJ5 6
(JJ6 7
dtoJJ7 :
)JJ: ;
;JJ; <
varLL 
responseLL 
=LL 
awaitLL  
_appointmentServiceLL! 4
.LL4 5
UpdateLL5 ;
(LL; <
appointmentLL< G
,LLG H
appointmentIdLLI V
)LLV W
;LLW X
ifNN 
(NN 
!NN 
responseNN 
.NN 
	IsSuccessNN #
)NN# $
{OO 
returnPP 
NotFoundPP 
(PP  
responsePP  (
.PP( )
ErrorPP) .
)PP. /
;PP/ 0
}QQ 
varSS 
modelSS 
=SS 
_mapperSS 
.SS  
MapSS  #
<SS# $
AppointmentDtoSS$ 2
>SS2 3
(SS3 4
responseSS4 <
.SS< =
EntitySS= C
)SSC D
;SSD E
returnTT 
OkTT 
(TT 
modelTT 
)TT 
;TT 
}UU 	
}VV 
}WW ¨0
oF:\Documents\faculta\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Controllers\DoctorController.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Controllers *
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
public 

class 
DoctorController !
:" #
ControllerBase$ 2
{ 
private 
readonly 
	IMediator "
	_mediator# ,
;, -
private 
readonly 
IDoctorsService (
_doctorService) 7
;7 8
private 
readonly 
IMapper  
_mapper! (
;( )
public 
DoctorController 
(  
IDoctorsService  /
doctorService0 =
,= >
IMapper? F
mapperG M
,M N
	IMediatorO X
mediatorY a
)a b
{ 	
_doctorService 
= 
doctorService *
;* +
_mapper 
= 
mapper 
; 
	_mediator 
= 
mediator  
;  !
} 	
[ 	
HttpPost	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Create 
( 
[ 
FromBody 
] 
CreateDoctorCommand 0
command1 8
)8 9
{ 	
var 
result 
= 
await 
	_mediator (
.( )
Send) -
(- .
command. 5
)5 6
;6 7
return   
Ok   
(   
result   
)   
;   
}!! 	
[## 	
HttpGet##	 
]## 
public$$ 
async$$ 
Task$$ 
<$$ 
List$$ 
<$$ 
DoctorResponse$$ -
>$$- .
>$$. /
Get$$0 3
($$3 4
)$$4 5
{%% 	
return&& 
await&& 
	_mediator&& "
.&&" #
Send&&# '
(&&' (
new&&( +
GetAllDoctorsQuery&&, >
(&&> ?
)&&? @
)&&@ A
;&&A B
}'' 	
[)) 	
HttpGet))	 
()) 
$str)) "
)))" #
]))# $
public** 
async** 
Task** 
<** 
IActionResult** '
>**' (
GetById**) 0
(**0 1
Guid**1 5
doctorId**6 >
)**> ?
{++ 	
var,, 
response,, 
=,, 
await,,  
_doctorService,,! /
.,,/ 0
GetById,,0 7
(,,7 8
doctorId,,8 @
),,@ A
;,,A B
if-- 
(-- 
!-- 
response-- 
.-- 
	IsSuccess-- #
)--# $
{.. 
return// 
NotFound// 
(//  
response//  (
.//( )
Error//) .
)//. /
;/// 0
}00 
var22 
model22 
=22 
_mapper22 
.22  
Map22  #
<22# $
	DoctorDto22$ -
>22- .
(22. /
response22/ 7
.227 8
Entity228 >
)22> ?
;22? @
return33 
Ok33 
(33 
model33 
)33 
;33 
}44 	
[66 	

HttpDelete66	 
(66 
$str66 %
)66% &
]66& '
public77 
async77 
Task77 
<77 
IActionResult77 '
>77' (
Delete77) /
(77/ 0
Guid770 4
doctorId775 =
)77= >
{88 	
var99 
response99 
=99 
await99  
_doctorService99! /
.99/ 0
Delete990 6
(996 7
doctorId997 ?
)99? @
;99@ A
if:: 
(:: 
response:: 
.:: 
	IsSuccess:: "
)::" #
{;; 
return<< 
Ok<< 
(<< 
)<< 
;<< 
}== 
return?? 
NotFound?? 
(?? 
response?? $
.??$ %
Error??% *
)??* +
;??+ ,
}@@ 	
[BB 	
HttpPutBB	 
(BB 
$strBB "
)BB" #
]BB# $
publicCC 
asyncCC 
TaskCC 
<CC 
IActionResultCC '
>CC' (
UpdateCC) /
(CC/ 0
[CC0 1
FromBodyCC1 9
]CC9 :
	DoctorDtoCC; D
dtoCCE H
,CCH I
GuidCCJ N
doctorIdCCO W
)CCW X
{DD 	
varEE 
doctorEE 
=EE 
_mapperEE  
.EE  !
MapEE! $
<EE$ %
DoctorEE% +
>EE+ ,
(EE, -
dtoEE- 0
)EE0 1
;EE1 2
varGG 
responseGG 
=GG 
awaitGG  
_doctorServiceGG! /
.GG/ 0
UpdateGG0 6
(GG6 7
doctorGG7 =
,GG= >
doctorIdGG? G
)GGG H
;GGH I
ifII 
(II 
!II 
responseII 
.II 
	IsSuccessII #
)II# $
{JJ 
returnKK 
NotFoundKK 
(KK  
responseKK  (
.KK( )
ErrorKK) .
)KK. /
;KK/ 0
}LL 
varNN 
modelNN 
=NN 
_mapperNN 
.NN  
MapNN  #
<NN# $
	DoctorDtoNN$ -
>NN- .
(NN. /
responseNN/ 7
.NN7 8
EntityNN8 >
)NN> ?
;NN? @
returnOO 
OkOO 
(OO 
modelOO 
)OO 
;OO 
}PP 	
}QQ 
}RR á4
mF:\Documents\faculta\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Controllers\DrugController.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Controllers *
{ 
[		 
Route		 

(		
 
$str		 
)		 
]		 
[

 
ApiController

 
]

 
public 

class 
DrugController 
:  !
ControllerBase" 0
{ 
private 
readonly 
IDrugsService &
_drugService' 3
;3 4
private 
readonly 
IMapper  
_mapper! (
;( )
public 
DrugController 
( 
IDrugsService +
drugService, 7
,7 8
IMapper9 @
mapperA G
)G H
{ 	
_drugService 
= 
drugService &
;& '
_mapper 
= 
mapper 
; 
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Get) ,
(, -
)- .
{ 	
var 
response 
= 
await  
_drugService! -
.- .
GetAll. 4
(4 5
)5 6
;6 7
if 
( 
! 
response 
. 
	IsSuccess #
)# $
{ 
return 
NotFound 
(  
response  (
.( )
Error) .
). /
;/ 0
} 
var 
models 
= 
_mapper  
.  !
Map! $
<$ %
IEnumerable% 0
<0 1
DrugDto1 8
>8 9
>9 :
(: ;
response; C
.C D
EntityD J
)J K
;K L
return   
Ok   
(   
models   
)   
;   
}!! 	
[## 	
HttpPost##	 
]## 
public$$ 
async$$ 
Task$$ 
<$$ 
IActionResult$$ '
>$$' (
Create$$) /
($$/ 0
[$$0 1
FromBody$$1 9
]$$9 :
CreateDrugDto$$; H
dto$$I L
)$$L M
{%% 	
var&& 
drug&& 
=&& 
_mapper&& 
.&& 
Map&& "
<&&" #
Drug&&# '
>&&' (
(&&( )
dto&&) ,
)&&, -
;&&- .
await(( 
_drugService(( 
.(( 
Create(( %
(((% &
drug((& *
)((* +
;((+ ,
return** 
Created** 
(** 
nameof** !
(**! "
Get**" %
)**% &
,**& '
dto**( +
)**+ ,
;**, -
}++ 	
[-- 	
HttpGet--	 
(-- 
$str--  
)--  !
]--! "
public.. 
async.. 
Task.. 
<.. 
IActionResult.. '
>..' (
GetById..) 0
(..0 1
Guid..1 5
drugId..6 <
)..< =
{// 	
var00 
response00 
=00 
await00  
_drugService00! -
.00- .
GetById00. 5
(005 6
drugId006 <
)00< =
;00= >
if11 
(11 
!11 
response11 
.11 
	IsSuccess11 #
)11# $
{22 
return33 
NotFound33 
(33  
response33  (
.33( )
Error33) .
)33. /
;33/ 0
}44 
var66 
model66 
=66 
_mapper66 
.66  
Map66  #
<66# $
DrugDto66$ +
>66+ ,
(66, -
response66- 5
.665 6
Entity666 <
)66< =
;66= >
return77 
Ok77 
(77 
model77 
)77 
;77 
}88 	
[:: 	

HttpDelete::	 
(:: 
$str:: #
)::# $
]::$ %
public;; 
async;; 
Task;; 
<;; 
IActionResult;; '
>;;' (
Delete;;) /
(;;/ 0
Guid;;0 4
drugId;;5 ;
);;; <
{<< 	
var== 
response== 
=== 
await==  
_drugService==! -
.==- .
Delete==. 4
(==4 5
drugId==5 ;
)==; <
;==< =
if>> 
(>> 
response>> 
.>> 
	IsSuccess>> "
)>>" #
{?? 
return@@ 
Ok@@ 
(@@ 
)@@ 
;@@ 
}AA 
returnCC 
NotFoundCC 
(CC 
responseCC $
.CC$ %
ErrorCC% *
)CC* +
;CC+ ,
}DD 	
[FF 	
HttpPutFF	 
(FF 
$strFF  
)FF  !
]FF! "
publicGG 
asyncGG 
TaskGG 
<GG 
IActionResultGG '
>GG' (
UpdateGG) /
(GG/ 0
[GG0 1
FromBodyGG1 9
]GG9 :
DrugDtoGG; B
dtoGGC F
,GGF G
GuidGGH L
drugIdGGM S
)GGS T
{HH 	
varII 
drugII 
=II 
_mapperII 
.II 
MapII "
<II" #
DrugII# '
>II' (
(II( )
dtoII) ,
)II, -
;II- .
varKK 
responseKK 
=KK 
awaitKK  
_drugServiceKK! -
.KK- .
UpdateKK. 4
(KK4 5
drugKK5 9
,KK9 :
drugIdKK; A
)KKA B
;KKB C
ifMM 
(MM 
!MM 
responseMM 
.MM 
	IsSuccessMM #
)MM# $
{NN 
returnOO 
NotFoundOO 
(OO  
responseOO  (
.OO( )
ErrorOO) .
)OO. /
;OO/ 0
}PP 
varRR 
modelRR 
=RR 
_mapperRR 
.RR  
MapRR  #
<RR# $
DrugDtoRR$ +
>RR+ ,
(RR, -
responseRR- 5
.RR5 6
EntityRR6 <
)RR< =
;RR= >
returnSS 
OkSS 
(SS 
modelSS 
)SS 
;SS 
}TT 	
}UU 
}VV 
rF:\Documents\faculta\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Controllers\DrugStockController.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Controllers *
{ 
[		 
Route		 

(		
 
$str		 
)		 
]		 
[

 
ApiController

 
]

 
public 

class 
DrugStockController $
:% &
ControllerBase' 5
{ 
private 
readonly 
	IMediator "
	_mediator# ,
;, -
public 
DrugStockController "
(" #
	IMediator# ,
mediator- 5
)5 6
{ 	
	_mediator 
= 
mediator  
;  !
} 	
[ 	
HttpPost	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Create 
( 
[ 
FromBody 
] "
CreateDrugStockCommand 3
command4 ;
); <
{ 	
var 
result 
= 
await 
	_mediator (
.( )
Send) -
(- .
command. 5
)5 6
;6 7
return 
Ok 
( 
result 
) 
; 
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
List 
< 
DrugStockResponse 0
>0 1
>1 2
Get3 6
(6 7
)7 8
{ 	
return 
await 
	_mediator "
." #
Send# '
(' (
new( +!
GetAllDrugStocksQuery, A
(A B
)B C
)C D
;D E
} 	
}II 
}JJ ¾5
pF:\Documents\faculta\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Controllers\PatientController.cs
	namespace

 	
MyDocAppointment


 
.

 
API

 
.

 
Controllers

 *
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
public 

class 
PatientController "
:# $
ControllerBase% 3
{ 
private 
readonly 
IPatientsService )
_patientService* 9
;9 :
private 
readonly 
IMapper  
_mapper! (
;( )
public 
PatientController  
(  !
IPatientsService! 1
patientService2 @
,@ A
IMapperB I
mapperJ P
)P Q
{ 	
_patientService 
= 
patientService ,
;, -
_mapper 
= 
mapper 
; 
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Get) ,
(, -
)- .
{ 	
var 
response 
= 
await  
_patientService! 0
.0 1
GetAll1 7
(7 8
)8 9
;9 :
if 
( 
! 
response 
. 
	IsSuccess #
)# $
{ 
return 
NotFound 
(  
response  (
.( )
Error) .
). /
;/ 0
}   
var"" 
models"" 
="" 
_mapper""  
.""  !
Map""! $
<""$ %
IEnumerable""% 0
<""0 1

PatientDto""1 ;
>""; <
>""< =
(""= >
response""> F
.""F G
Entity""G M
)""M N
;""N O
return## 
Ok## 
(## 
models## 
)## 
;## 
}$$ 	
[&& 	
HttpPost&&	 
]&& 
public'' 
async'' 
Task'' 
<'' 
IActionResult'' '
>''' (
Create'') /
(''/ 0
[''0 1
FromBody''1 9
]''9 :
CreatePatientDto''; K
dto''L O
)''O P
{(( 	
var)) 
patient)) 
=)) 
_mapper)) !
.))! "
Map))" %
<))% &
Patient))& -
>))- .
()). /
dto))/ 2
)))2 3
;))3 4
await++ 
_patientService++ !
.++! "
Create++" (
(++( )
patient++) 0
)++0 1
;++1 2
return-- 
Created-- 
(-- 
nameof-- !
(--! "
Get--" %
)--% &
,--& '
dto--( +
)--+ ,
;--, -
}.. 	
[00 	
HttpGet00	 
(00 
$str00 #
)00# $
]00$ %
public11 
async11 
Task11 
<11 
IActionResult11 '
>11' (
GetById11) 0
(110 1
Guid111 5
	patientId116 ?
)11? @
{22 	
var33 
response33 
=33 
await33  
_patientService33! 0
.330 1
GetById331 8
(338 9
	patientId339 B
)33B C
;33C D
if44 
(44 
!44 
response44 
.44 
	IsSuccess44 #
)44# $
{55 
return66 
NotFound66 
(66  
response66  (
.66( )
Error66) .
)66. /
;66/ 0
}77 
var99 
model99 
=99 
_mapper99 
.99  
Map99  #
<99# $

PatientDto99$ .
>99. /
(99/ 0
response990 8
.998 9
Entity999 ?
)99? @
;99@ A
return:: 
Ok:: 
(:: 
model:: 
):: 
;:: 
}<< 	
[>> 	

HttpDelete>>	 
(>> 
$str>> &
)>>& '
]>>' (
public?? 
async?? 
Task?? 
<?? 
IActionResult?? '
>??' (
Delete??) /
(??/ 0
Guid??0 4
	patientId??5 >
)??> ?
{@@ 	
varAA 
responseAA 
=AA 
awaitAA  
_patientServiceAA! 0
.AA0 1
DeleteAA1 7
(AA7 8
	patientIdAA8 A
)AAA B
;AAB C
ifBB 
(BB 
responseBB 
.BB 
	IsSuccessBB "
)BB" #
{CC 
returnDD 
OkDD 
(DD 
)DD 
;DD 
}EE 
returnGG 
NotFoundGG 
(GG 
responseGG $
.GG$ %
ErrorGG% *
)GG* +
;GG+ ,
}HH 	
[JJ 	
HttpPutJJ	 
(JJ 
$strJJ #
)JJ# $
]JJ$ %
publicKK 
asyncKK 
TaskKK 
<KK 
IActionResultKK '
>KK' (
UpdateKK) /
(KK/ 0
[KK0 1
FromBodyKK1 9
]KK9 :

PatientDtoKK; E
dtoKKF I
,KKI J
GuidKKK O
	patientIdKKP Y
)KKY Z
{LL 	
varMM 
patientMM 
=MM 
_mapperMM !
.MM! "
MapMM" %
<MM% &
PatientMM& -
>MM- .
(MM. /
dtoMM/ 2
)MM2 3
;MM3 4
varOO 
responseOO 
=OO 
awaitOO  
_patientServiceOO! 0
.OO0 1
UpdateOO1 7
(OO7 8
patientOO8 ?
,OO? @
	patientIdOOA J
)OOJ K
;OOK L
ifQQ 
(QQ 
!QQ 
responseQQ 
.QQ 
	IsSuccessQQ #
)QQ# $
{RR 
returnSS 
NotFoundSS 
(SS  
responseSS  (
.SS( )
ErrorSS) .
)SS. /
;SS/ 0
}TT 
varVV 
modelVV 
=VV 
_mapperVV 
.VV  
MapVV  #
<VV# $

PatientDtoVV$ .
>VV. /
(VV/ 0
responseVV0 8
.VV8 9
EntityVV9 ?
)VV? @
;VV@ A
returnWW 
OkWW 
(WW 
modelWW 
)WW 
;WW 
}XX 	
}YY 
}ZZ 
fF:\Documents\faculta\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\AppointmentDto.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class 
AppointmentDto 
{ 
public 
string 
Id 
{ 
get 
; 
set  #
;# $
}% &
=' (
string) /
./ 0
Empty0 5
;5 6
public 
string 
Location 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
string/ 5
.5 6
Empty6 ;
;; <
public 
string 
	PatientID 
{  !
get" %
;% &
set' *
;* +
}, -
=. /
string0 6
.6 7
Empty7 <
;< =
public 
string 
DoctorID 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
string/ 5
.5 6
Empty6 ;
;; <
public		 
string		 
Specialization		 $
{		% &
get		' *
;		* +
set		, /
;		/ 0
}		1 2
=		3 4
string		5 ;
.		; <
Empty		< A
;		A B
public

 
string

 
AppointmentTime

 %
{

& '
get

( +
;

+ ,
set

- 0
;

0 1
}

2 3
=

4 5
string

6 <
.

< =
Empty

= B
;

B C
public 
string 
PaymentMethod #
{$ %
get& )
;) *
set+ .
;. /
}0 1
=2 3
string4 :
.: ;
Empty; @
;@ A
public 
string 
PaymentDate !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
string2 8
.8 9
Empty9 >
;> ?
public 
double 
Amount 
{ 
get "
;" #
set$ '
;' (
}( )
} 
} ½
oF:\Documents\faculta\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\AppointmentDtoValidator.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class #
AppointmentDtoValidator (
:( )
AbstractValidator* ;
<; <
AppointmentDto< J
>J K
{ 
public #
AppointmentDtoValidator &
(& '
)' (
{ 	
RuleFor		 
(		 
x		 
=>		 
x		 
.		 
Location		 #
)		# $
.		$ %
Length		% +
(		+ ,
$num		, -
,		- .
$num		/ 1
)		1 2
;		2 3
RuleFor

 
(

 
x

 
=>

 
x

 
.

 
	PatientID

 $
)

$ %
.

% &
NotEmpty

& .
(

. /
)

/ 0
;

0 1
RuleFor 
( 
x 
=> 
x 
. 
DoctorID #
)# $
.$ %
NotEmpty% -
(- .
). /
;/ 0
RuleFor 
( 
x 
=> 
x 
. 
Specialization )
)) *
.* +
NotEmpty+ 3
(3 4
)4 5
;5 6
RuleFor 
( 
x 
=> 
x 
. 
AppointmentTime *
)* +
.+ ,
NotEmpty, 4
(4 5
)5 6
;6 7
} 	
} 
} Õ
lF:\Documents\faculta\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\CreateAppointmentDto.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class  
CreateAppointmentDto %
{ 
public 
string 
Location 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
string/ 5
.5 6
Empty6 ;
;; <
public 
string 
	PatientID 
{  !
get" %
;% &
set' *
;* +
}, -
=. /
string0 6
.6 7
Empty7 <
;< =
public		 
string		 
DoctorID		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
=		- .
string		/ 5
.		5 6
Empty		6 ;
;		; <
public

 
string

 
Specialization

 $
{

% &
get

' *
;

* +
set

, /
;

/ 0
}

1 2
=

3 4
string

5 ;
.

; <
Empty

< A
;

A B
public 
string 
AppointmentTime %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
=4 5
string6 <
.< =
Empty= B
;B C
public 
CreatePaymentDto 
?  
Payment! (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
} 
} Õ
uF:\Documents\faculta\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\CreateAppointmentDtoValidator.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class )
CreateAppointmentDtoValidator .
:. /
AbstractValidator0 A
<A B 
CreateAppointmentDtoB V
>V W
{ 
public )
CreateAppointmentDtoValidator ,
(, -
)- .
{ 	
RuleFor		 
(		 
x		 
=>		 
x		 
.		 
Location		 #
)		# $
.		$ %
Length		% +
(		+ ,
$num		, -
,		- .
$num		/ 1
)		1 2
;		2 3
RuleFor

 
(

 
x

 
=>

 
x

 
.

 
	PatientID

 $
)

$ %
.

% &
NotEmpty

& .
(

. /
)

/ 0
;

0 1
RuleFor 
( 
x 
=> 
x 
. 
DoctorID #
)# $
.$ %
NotEmpty% -
(- .
). /
;/ 0
RuleFor 
( 
x 
=> 
x 
. 
Specialization )
)) *
.* +
NotEmpty+ 3
(3 4
)4 5
;5 6
RuleFor 
( 
x 
=> 
x 
. 
AppointmentTime *
)* +
.+ ,
NotEmpty, 4
(4 5
)5 6
;6 7
} 	
} 
} ¶
gF:\Documents\faculta\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\CreateDoctorDto.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class 
CreateDoctorDto  
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Surname 
{ 
get  #
;# $
set% (
;( )
}* +
public		 
int		 
Age		 
{		 
get		 
;		 
set		 !
;		! "
}		# $
public

 
string

 
Gender

 
{

 
get

 "
;

" #
set

$ '
;

' (
}

) *
public 
string 
EmailAddress "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
PhoneNumber !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
HomeAddress !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 

Speciality  
{! "
get# &
;& '
set( +
;+ ,
}- .
} 
} ¹	
eF:\Documents\faculta\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\CreateDrugDto.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class 
CreateDrugDto 
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
public 
string 
Vendor 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
string- 3
.3 4
Empty4 9
;9 :
public 
string 
Category 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
string/ 5
.5 6
Empty6 ;
;; <
public 
decimal 
Price 
{ 
get "
;" #
set$ '
;' (
}) *
}		 
}

 ¬
nF:\Documents\faculta\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\CreateDrugDtoValidator.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class "
CreateDrugDtoValidator '
:( )
AbstractValidator* ;
<; <
CreateDrugDto< I
>I J
{ 
public "
CreateDrugDtoValidator %
(% &
)& '
{ 	
RuleFor		 
(		 
x		 
=>		 
x		 
.		 
Name		 
)		  
.		  !
Length		! '
(		' (
$num		( )
,		) *
$num		+ -
)		- .
;		. /
RuleFor

 
(

 
x

 
=>

 
x

 
.

 
Vendor

 !
)

! "
.

" #
Length

# )
(

) *
$num

* +
,

+ ,
$num

- /
)

/ 0
;

0 1
RuleFor 
( 
x 
=> 
x 
. 
Price  
)  !
.! "
NotEmpty" *
(* +
)+ ,
;, -
RuleFor 
( 
x 
=> 
x 
. 
Category #
)# $
.$ %
Length% +
(+ ,
$num, -
,- .
$num/ 1
)1 2
;2 3
} 	
} 
} 
hF:\Documents\faculta\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\CreatePatientDto.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class 
CreatePatientDto !
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Surname 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
Age 
{ 
get 
; 
set !
;! "
}# $
public 
string 
Gender 
{ 
get "
;" #
set$ '
;' (
}) *
public		 
string		 
EmailAddress		 "
{		# $
get		% (
;		( )
set		* -
;		- .
}		/ 0
public

 
string

 
PhoneNumber

 !
{

" #
get

$ '
;

' (
set

) ,
;

, -
}

. /
public 
string 
HomeAddress !
{" #
get$ '
;' (
set) ,
;, -
}. /
} 
} 
qF:\Documents\faculta\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\CreatePatientDtoValidator.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class %
CreatePatientDtoValidator *
:+ ,
AbstractValidator- >
<> ?
CreatePatientDto? O
>O P
{ 
public %
CreatePatientDtoValidator (
(( )
)) *
{ 	
RuleFor		 
(		 
x		 
=>		 
x		 
.		 
Name		 
)		  
.		  !
Length		! '
(		' (
$num		( )
,		) *
$num		+ -
)		- .
;		. /
RuleFor

 
(

 
x

 
=>

 
x

 
.

 
Surname

 "
)

" #
.

# $
Length

$ *
(

* +
$num

+ ,
,

, -
$num

. 0
)

0 1
;

1 2
RuleFor 
( 
x 
=> 
x 
. 
EmailAddress '
)' (
.( )
EmailAddress) 5
(5 6
)6 7
;7 8
RuleFor 
( 
x 
=> 
x 
. 
Age 
) 
.  
NotEmpty  (
(( )
)) *
;* +
RuleFor 
( 
x 
=> 
x 
. 
PhoneNumber &
)& '
.' (
Length( .
(. /
$num/ 1
)1 2
;2 3
RuleFor 
( 
x 
=> 
x 
. 
HomeAddress &
)& '
.' (
Length( .
(. /
$num/ 0
,0 1
$num2 4
)4 5
;5 6
} 	
} 
} ê
hF:\Documents\faculta\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\CreatePaymentDto.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class 
CreatePaymentDto !
{ 
public 
double 
Amount 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
PaymentMethod #
{$ %
get& )
;) *
set+ .
;. /
}0 1
=2 3
string4 :
.: ;
Empty; @
;@ A
}		 
}

 ¾
aF:\Documents\faculta\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\DoctorDto.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class 
	DoctorDto 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Surname 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
Age 
{ 
get 
; 
set !
;! "
}# $
public		 
string		 
Gender		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
public

 
string

 
EmailAddress

 "
{

# $
get

% (
;

( )
set

* -
;

- .
}

/ 0
public 
string 
PhoneNumber !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
HomeAddress !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 

Speciality  
{! "
get# &
;& '
set( +
;+ ,
}- .
} 
} Á

_F:\Documents\faculta\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\DrugDto.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class 
DrugDto 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
public 
string 
Vendor 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
string- 3
.3 4
Empty4 9
;9 :
public 
string 
Category 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
string/ 5
.5 6
Empty6 ;
;; <
public		 
decimal		 
Price		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
}

 
} 
hF:\Documents\faculta\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\DrugDtoValidator.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class 
DrugDtoValidator !
:" #
AbstractValidator$ 5
<5 6
DrugDto6 =
>= >
{ 
public 
DrugDtoValidator 
(  
)  !
{ 	
RuleFor		 
(		 
x		 
=>		 
x		 
.		 
Name		 
)		  
.		  !
Length		! '
(		' (
$num		( )
,		) *
$num		+ -
)		- .
;		. /
RuleFor

 
(

 
x

 
=>

 
x

 
.

 
Vendor

 !
)

! "
.

" #
Length

# )
(

) *
$num

* +
,

+ ,
$num

- /
)

/ 0
;

0 1
RuleFor 
( 
x 
=> 
x 
. 
Price  
)  !
.! "
NotEmpty" *
(* +
)+ ,
;, -
RuleFor 
( 
x 
=> 
x 
. 
Category #
)# $
.$ %
Length% +
(+ ,
$num, -
,- .
$num/ 1
)1 2
;2 3
} 	
} 
} 
dF:\Documents\faculta\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\DrugStockDto.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class 
DrugStockDto 
{ 
public 
string 
DrugName 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
string/ 5
.5 6
Empty6 ;
;; <
public 
Guid 
DrugId 
{ 
get  
;  !
set" %
;% &
}' (
public 
int 
Quantity 
{ 
get !
;! "
set# &
;& '
}( )
public 
bool 
IsRestricted  
{! "
get# &
;& '
set( +
;+ ,
}- .
}		 
}

 ¢
bF:\Documents\faculta\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\PatientDto.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class 

PatientDto 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Surname 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
Age 
{ 
get 
; 
set !
;! "
}# $
public		 
string		 
Gender		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
public

 
string

 
EmailAddress

 "
{

# $
get

% (
;

( )
set

* -
;

- .
}

/ 0
public 
string 
PhoneNumber !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
HomeAddress !
{" #
get$ '
;' (
set) ,
;, -
}. /
} 
} í
kF:\Documents\faculta\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\PatientDtoValidator.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class 
PatientDtoValidator $
:% &
AbstractValidator' 8
<8 9

PatientDto9 C
>C D
{ 
public 
PatientDtoValidator "
(" #
)# $
{ 	
RuleFor		 
(		 
x		 
=>		 
x		 
.		 
Name		 
)		  
.		  !
Length		! '
(		' (
$num		( )
,		) *
$num		+ -
)		- .
;		. /
RuleFor

 
(

 
x

 
=>

 
x

 
.

 
Surname

 "
)

" #
.

# $
Length

$ *
(

* +
$num

+ ,
,

, -
$num

. 0
)

0 1
;

1 2
RuleFor 
( 
x 
=> 
x 
. 
EmailAddress '
)' (
.( )
EmailAddress) 5
(5 6
)6 7
;7 8
RuleFor 
( 
x 
=> 
x 
. 
Age 
) 
.  
NotEmpty  (
(( )
)) *
;* +
RuleFor 
( 
x 
=> 
x 
. 
PhoneNumber &
)& '
.' (
Length( .
(. /
$num/ 1
)1 2
;2 3
RuleFor 
( 
x 
=> 
x 
. 
HomeAddress &
)& '
.' (
Length( .
(. /
$num/ 0
,0 1
$num2 4
)4 5
;5 6
} 	
} 
} Ô

bF:\Documents\faculta\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Dtos\PaymentDto.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Dtos #
{ 
public 

class 

PaymentDto 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
double 
Amount 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
PaymentMethod #
{$ %
get& )
;) *
set+ .
;. /
}0 1
=2 3
string4 :
.: ;
Empty; @
;@ A
public 
DateTime 
DueDate 
{  !
get" %
;% &
set' *
;* +
}, -
public		 
DateTime		 
EmissionDate		 $
{		% &
get		' *
;		* +
set		, /
;		/ 0
}		1 2
public

 
DateTime

 
AcquittedDate

 %
{

& '
get

( +
;

+ ,
set

- 0
;

0 1
}

2 3
} 
} í
hF:\Documents\faculta\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Mapping\DoctorProfile.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Mapping &
{ 
public 

class 
DoctorProfile 
:  
Profile! (
{ 
public		 
DoctorProfile		 
(		 
)		 
{

 	
	CreateMap 
< 
Doctor 
, 
	DoctorDto '
>' (
(( )
)) *
.* +

ReverseMap+ 5
(5 6
)6 7
;7 8
	CreateMap 
< 
CreateDoctorDto %
,% &
Doctor' -
>- .
(. /
)/ 0
;0 1
} 	
} 
} Ó#
jF:\Documents\faculta\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Mapping\ExternalProfile.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Mapping &
{ 
public 

class 
ExternalProfile  
:! "
Profile# *
{		 
public

 
ExternalProfile

 
(

 
)

  
{ 	
	CreateMap 
< 
Appointment !
,! "
AppointmentDto# 1
>1 2
(2 3
)3 4
. 
	ForMember 
( 
dest 
=>  "
dest# '
.' (
AppointmentTime( 7
,7 8
opt 
=> 
opt 
. 
MapFrom "
(" #
src# &
=>' )
src* -
.- .
AppointmentTime. =
.= >
ToString> F
(F G
$strG [
)[ \
)\ ]
)] ^
. 
	ForMember 
( 
dest 
=>  "
dest# '
.' (
PaymentMethod( 5
,5 6
opt 
=> 
opt 
. 
MapFrom "
(" #
src# &
=>' )
src* -
.- .
Payment. 5
.5 6
PaymentMethod6 C
.C D
ToStringD L
(L M
)M N
)N O
)O P
. 
	ForMember 
( 
dest 
=>  "
dest# '
.' (
PaymentDate( 3
,3 4
opt 
=> 
opt 
. 
MapFrom "
(" #
src# &
=>' )
src* -
.- .
Payment. 5
.5 6
AcquittedDate6 C
.C D
ToStringD L
(L M
$strM a
)a b
)b c
)c d
. 
	ForMember 
( 
dest 
=>  "
dest# '
.' (
Amount( .
,. /
opt 
=> 
opt 
. 
MapFrom "
(" #
src# &
=>' )
src* -
.- .
Payment. 5
.5 6
Amount6 <
)< =
)= >
. 

ReverseMap 
( 
) 
; 
	CreateMap 
<  
CreateAppointmentDto *
,* +
Appointment, 7
>7 8
(8 9
)9 :
;: ;
	CreateMap 
< 
Payment 
, 

PaymentDto )
>) *
(* +
)+ ,
. 
	ForMember 
( 
dest 
=>  "
dest# '
.' (
DueDate( /
,/ 0
opt 
=> 
opt 
. 
MapFrom "
(" #
src# &
=>' )
src* -
.- .
DueDate. 5
.5 6
ToString6 >
(> ?
$str? S
)S T
)T U
)U V
. 
	ForMember 
( 
dest 
=>  "
dest# '
.' (
EmissionDate( 4
,4 5
opt 
=> 
opt 
. 
MapFrom "
(" #
src# &
=>' )
src* -
.- .
EmissionDate. :
.: ;
ToString; C
(C D
$strD X
)X Y
)Y Z
)Z [
. 
	ForMember 
( 
dest 
=>  "
dest# '
.' (
AcquittedDate( 5
,5 6
opt 
=> 
opt 
. 
MapFrom "
(" #
src# &
=>' )
src* -
.- .
AcquittedDate. ;
.; <
ToString< D
(D E
$strE Y
)Y Z
)Z [
)[ \
. 

ReverseMap 
( 
) 
; 
	CreateMap   
<   
CreatePaymentDto   &
,  & '
Payment  ( /
>  / 0
(  0 1
)  1 2
;  2 3
}!! 	
}"" 
}## Ò
jF:\Documents\faculta\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Mapping\InternalProfile.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Mapping &
{ 
public 

class 
InternalProfile  
:! "
Profile# *
{ 
public		 
InternalProfile		 
(		 
)		  
{

 	
	CreateMap 
< 
Drug 
, 
DrugDto #
># $
($ %
)% &
.& '

ReverseMap' 1
(1 2
)2 3
;3 4
	CreateMap 
< 
CreateDrugDto #
,# $
Drug% )
>) *
(* +
)+ ,
;, -
	CreateMap 
< 
	DrugStock 
,  
DrugStockDto! -
>- .
(. /
)/ 0
.0 1

ReverseMap1 ;
(; <
)< =
;= >
} 	
} 
} ô
iF:\Documents\faculta\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Mapping\PatientProfile.cs
	namespace 	
MyDocAppointment
 
. 
API 
. 
Mapping &
{ 
public 

class 
PatientProfile 
:  !
Profile" )
{ 
public		 
PatientProfile		 
(		 
)		 
{

 	
	CreateMap 
< 
Patient 
, 

PatientDto )
>) *
(* +
)+ ,
., -

ReverseMap- 7
(7 8
)8 9
;9 :
	CreateMap 
< 
CreatePatientDto &
,& '
Patient( /
>/ 0
(0 1
)1 2
;2 3
} 	
} 
} 
ZF:\Documents\faculta\MyDocAppointment\MyDocAppointment.API\MyDocAppointment.API\Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
builder 
. 
Services 
. 
AddControllers 
(  
)  !
;! "
builder 
. 
Services 
. #
AddEndpointsApiExplorer (
(( )
)) *
;* +
builder 
. 
Services 
. 
AddSwaggerGen 
( 
)  
;  !
builder 
. 
Services 
. !
AddControllerServices &
(& '
)' (
;( )
builder 
. 
Services 
. "
AddApplicationServices '
(' (
)( )
;) *
builder 
. 
Services 
. $
AddInfrastrutureServices )
() *
builder* 1
.1 2
Configuration2 ?
)? @
;@ A
builder 
. 
Services 
. 
AddCors 
( 
options  
=>! #
{ 
options 
. 
	AddPolicy 
( 
$str $
,$ %
policy& ,
=>- /
{ 
policy 
. 
AllowAnyOrigin 
( 
) 
.  
AllowAnyHeader  .
(. /
)/ 0
.0 1
AllowAnyMethod1 ?
(? @
)@ A
;A B
}   
)   
;   
}!! 
)!! 
;!! 
var## 
app## 
=## 	
builder##
 
.## 
Build## 
(## 
)## 
;## 
if&& 
(&& 
app&& 
.&& 
Environment&& 
.&& 
IsDevelopment&& !
(&&! "
)&&" #
)&&# $
{'' 
app(( 
.(( 

UseSwagger(( 
((( 
)(( 
;(( 
app)) 
.)) 
UseSwaggerUI)) 
()) 
))) 
;)) 
}** 
app,, 
.,, 
UseHttpsRedirection,, 
(,, 
),, 
;,, 
app-- 
.-- 
UseCors-- 
(-- 
$str-- 
)-- 
;-- 
app.. 
... 
UseAuthorization.. 
(.. 
).. 
;.. 
app00 
.00 
MapControllers00 
(00 
)00 
;00 
app22 
.22 
Run22 
(22 
)22 	
;22	 
